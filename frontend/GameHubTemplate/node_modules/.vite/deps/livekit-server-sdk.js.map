{
  "version": 3,
  "sources": ["../../@bufbuild/protobuf/dist/esm/private/assert.js", "../../@bufbuild/protobuf/dist/esm/private/enum.js", "../../@bufbuild/protobuf/dist/esm/message.js", "../../@bufbuild/protobuf/dist/esm/private/message-type.js", "../../@bufbuild/protobuf/dist/esm/google/varint.js", "../../@bufbuild/protobuf/dist/esm/proto-int64.js", "../../@bufbuild/protobuf/dist/esm/scalar.js", "../../@bufbuild/protobuf/dist/esm/private/scalars.js", "../../@bufbuild/protobuf/dist/esm/binary-encoding.js", "../../@bufbuild/protobuf/dist/esm/private/extensions.js", "../../@bufbuild/protobuf/dist/esm/proto-base64.js", "../../@bufbuild/protobuf/dist/esm/extension-accessor.js", "../../@bufbuild/protobuf/dist/esm/private/reflect.js", "../../@bufbuild/protobuf/dist/esm/is-message.js", "../../@bufbuild/protobuf/dist/esm/private/field-wrapper.js", "../../@bufbuild/protobuf/dist/esm/private/json-format.js", "../../@bufbuild/protobuf/dist/esm/private/binary-format.js", "../../@bufbuild/protobuf/dist/esm/private/util-common.js", "../../@bufbuild/protobuf/dist/esm/private/proto-runtime.js", "../../@bufbuild/protobuf/dist/esm/private/field-list.js", "../../@bufbuild/protobuf/dist/esm/private/names.js", "../../@bufbuild/protobuf/dist/esm/private/field.js", "../../@bufbuild/protobuf/dist/esm/private/field-normalize.js", "../../@bufbuild/protobuf/dist/esm/proto3.js", "../../@bufbuild/protobuf/dist/esm/proto2.js", "../../@bufbuild/protobuf/dist/esm/proto-double.js", "../../@bufbuild/protobuf/dist/esm/service-type.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/descriptor_pb.js", "../../@bufbuild/protobuf/dist/esm/create-descriptor-set.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/duration_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/empty_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/struct_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/wrappers_pb.js", "../../@bufbuild/protobuf/dist/esm/create-registry-from-desc.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/compiler/plugin_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/source_context_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/type_pb.js", "../../@bufbuild/protobuf/dist/esm/google/protobuf/api_pb.js", "../../@livekit/protocol/src/gen/livekit_metrics_pb.js", "../../@livekit/protocol/src/gen/livekit_models_pb.js", "../../@livekit/protocol/src/gen/livekit_agent_pb.js", "../../@livekit/protocol/src/gen/livekit_agent_dispatch_pb.js", "../../@livekit/protocol/src/gen/livekit_egress_pb.js", "../../@livekit/protocol/src/gen/livekit_ingress_pb.js", "../../@livekit/protocol/src/gen/livekit_room_pb.js", "../../@livekit/protocol/src/gen/livekit_rtc_pb.js", "../../@livekit/protocol/src/gen/livekit_sip_pb.js", "../../@livekit/protocol/src/gen/livekit_webhook_pb.js", "../../@livekit/protocol/src/gen/version.js", "../../jose/dist/browser/runtime/webcrypto.js", "../../jose/dist/browser/lib/buffer_utils.js", "../../jose/dist/browser/runtime/base64url.js", "../../jose/dist/browser/util/errors.js", "../../jose/dist/browser/runtime/random.js", "../../jose/dist/browser/lib/crypto_key.js", "../../jose/dist/browser/lib/invalid_key_input.js", "../../jose/dist/browser/runtime/is_key_like.js", "../../jose/dist/browser/lib/is_disjoint.js", "../../jose/dist/browser/lib/is_object.js", "../../jose/dist/browser/runtime/check_key_length.js", "../../jose/dist/browser/lib/is_jwk.js", "../../jose/dist/browser/runtime/jwk_to_key.js", "../../jose/dist/browser/runtime/normalize_key.js", "../../jose/dist/browser/key/import.js", "../../jose/dist/browser/lib/check_key_type.js", "../../jose/dist/browser/lib/validate_crit.js", "../../jose/dist/browser/lib/validate_algorithms.js", "../../jose/dist/browser/lib/private_symbols.js", "../../jose/dist/browser/runtime/subtle_dsa.js", "../../jose/dist/browser/runtime/get_sign_verify_key.js", "../../jose/dist/browser/runtime/verify.js", "../../jose/dist/browser/jws/flattened/verify.js", "../../jose/dist/browser/jws/compact/verify.js", "../../jose/dist/browser/lib/epoch.js", "../../jose/dist/browser/lib/secs.js", "../../jose/dist/browser/lib/jwt_claims_set.js", "../../jose/dist/browser/jwt/verify.js", "../../jose/dist/browser/runtime/sign.js", "../../jose/dist/browser/jws/flattened/sign.js", "../../jose/dist/browser/jws/compact/sign.js", "../../jose/dist/browser/jwt/produce.js", "../../jose/dist/browser/jwt/sign.js", "../../jose/dist/browser/jwks/remote.js", "../../jose/dist/browser/util/base64url.js", "../../livekit-server-sdk/src/grants.ts", "../../livekit-server-sdk/src/AccessToken.ts", "../../livekit-server-sdk/src/ServiceBase.ts", "../../livekit-server-sdk/src/TwirpRPC.ts", "../../livekit-server-sdk/src/AgentDispatchClient.ts", "../../livekit-server-sdk/src/EgressClient.ts", "../../livekit-server-sdk/src/IngressClient.ts", "../../livekit-server-sdk/src/crypto/uuid.ts", "../../livekit-server-sdk/src/RoomServiceClient.ts", "../../livekit-server-sdk/src/SipClient.ts", "../../livekit-server-sdk/src/crypto/digest.ts", "../../livekit-server-sdk/src/WebhookReceiver.ts"],
  "sourcesContent": ["// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./assert.js\";\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     * Note that this function disregards extensions and unknown fields.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n", "// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./google/varint.js\";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nexport const protoInt64 = makeInt64Support();\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nexport function scalarZeroValue(type, longType) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return (longType == 0 ? protoInt64.zero : \"0\");\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nexport function isScalarZeroValue(type, value) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return value === false;\n        case ScalarType.STRING:\n            return value === \"\";\n        case ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./google/varint.js\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./private/assert.js\";\nimport { protoInt64 } from \"./proto-int64.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { WireType } from \"../binary-encoding.js\";\n/**\n * Create a new extension using the given runtime.\n */\nexport function makeExtension(runtime, typeName, extendee, field) {\n    let fi;\n    return {\n        typeName,\n        extendee,\n        get field() {\n            if (!fi) {\n                const i = (typeof field == \"function\" ? field() : field);\n                i.name = typeName.split(\".\").pop();\n                i.jsonName = `[${typeName}]`;\n                fi = runtime.util.newFieldList([i]).list()[0];\n            }\n            return fi;\n        },\n        runtime,\n    };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nexport function createExtensionContainer(extension) {\n    const localName = extension.field.localName;\n    const container = Object.create(null);\n    container[localName] = initExtensionField(extension);\n    return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n    const field = ext.field;\n    if (field.repeated) {\n        return [];\n    }\n    if (field.default !== undefined) {\n        return field.default;\n    }\n    switch (field.kind) {\n        case \"enum\":\n            return field.T.values[0].no;\n        case \"scalar\":\n            return scalarZeroValue(field.T, field.L);\n        case \"message\":\n            // eslint-disable-next-line no-case-declarations\n            const T = field.T, value = new T();\n            return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n        case \"map\":\n            throw \"map fields are not allowed to be extensions\";\n    }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nexport function filterUnknownFields(unknownFields, field) {\n    if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == field.no) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === field.no);\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { createExtensionContainer, filterUnknownFields, } from \"./private/extensions.js\";\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function getExtension(message, extension, options) {\n    assertExtendee(extension, message);\n    const opt = extension.runtime.bin.makeReadOptions(options);\n    const ufs = filterUnknownFields(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n    const [container, get] = createExtensionContainer(extension);\n    for (const uf of ufs) {\n        extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function setExtension(message, extension, value, options) {\n    assertExtendee(extension, message);\n    const readOpt = extension.runtime.bin.makeReadOptions(options);\n    const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n    if (hasExtension(message, extension)) {\n        const ufs = message\n            .getType()\n            .runtime.bin.listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        message.getType().runtime.bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            message\n                .getType()\n                .runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n    const writer = writeOpt.writerFactory();\n    let f = extension.field;\n    // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n    // We patch the field info to use explicit presence:\n    if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n        f = Object.assign(Object.assign({}, extension.field), { opt: true });\n    }\n    extension.runtime.bin.writeField(f, value, writer, writeOpt);\n    const reader = readOpt.readerFactory(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n    }\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nexport function clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (hasExtension(message, extension)) {\n        const bin = message.getType().runtime.bin;\n        const ufs = bin\n            .listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n}\n/**\n * Check whether an extension is set on a message.\n */\nexport function hasExtension(message, extension) {\n    const messageType = message.getType();\n    return (extension.extendee.typeName === messageType.typeName &&\n        !!messageType.runtime.bin\n            .listUnknownFields(message)\n            .find((uf) => uf.no == extension.field.no));\n}\nfunction assertExtendee(extension, message) {\n    assert(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { isScalarZeroValue, scalarZeroValue } from \"./scalars.js\";\n/**\n * Returns true if the field is set.\n */\nexport function isFieldSet(field, target) {\n    const localName = field.localName;\n    if (field.repeated) {\n        return target[localName].length > 0;\n    }\n    if (field.oneof) {\n        return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    switch (field.kind) {\n        case \"enum\":\n        case \"scalar\":\n            if (field.opt || field.req) {\n                // explicit presence\n                return target[localName] !== undefined;\n            }\n            // implicit presence\n            if (field.kind == \"enum\") {\n                return target[localName] !== field.T.values[0].no;\n            }\n            return !isScalarZeroValue(field.T, target[localName]);\n        case \"message\":\n            return target[localName] !== undefined;\n        case \"map\":\n            return Object.keys(target[localName]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n    }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nexport function clearField(field, target) {\n    const localName = field.localName;\n    const implicitPresence = !field.opt && !field.req;\n    if (field.repeated) {\n        target[localName] = [];\n    }\n    else if (field.oneof) {\n        target[field.oneof.localName] = { case: undefined };\n    }\n    else {\n        switch (field.kind) {\n            case \"map\":\n                target[localName] = {};\n                break;\n            case \"enum\":\n                target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n                break;\n            case \"scalar\":\n                target[localName] = implicitPresence\n                    ? scalarZeroValue(field.T, field.L)\n                    : undefined;\n                break;\n            case \"message\":\n                target[localName] = undefined;\n                break;\n        }\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"./message.js\";\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nexport function isMessage(arg, type) {\n    if (arg === null || typeof arg != \"object\") {\n        return false;\n    }\n    if (!Object.getOwnPropertyNames(Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n        return false;\n    }\n    const actualType = arg.getType();\n    if (actualType === null ||\n        typeof actualType != \"function\" ||\n        !(\"typeName\" in actualType) ||\n        typeof actualType.typeName != \"string\") {\n        return false;\n    }\n    return type === undefined ? true : actualType.typeName == type.typeName;\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nexport function wrapField(type, value) {\n    if (isMessage(value) || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": ScalarType.BOOL,\n    \"google.protobuf.StringValue\": ScalarType.STRING,\n    \"google.protobuf.BytesValue\": ScalarType.BYTES,\n};\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../message.js\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { protoBase64 } from \"../proto-base64.js\";\nimport { createExtensionContainer } from \"./extensions.js\";\nimport { getExtension, hasExtension, setExtension, } from \"../extension-accessor.js\";\nimport { clearField, isFieldSet } from \"./reflect.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { isScalarZeroValue } from \"./scalars.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nexport function makeJsonFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = new Map();\n            const registry = options.typeRegistry;\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (field) {\n                    if (field.oneof) {\n                        if (jsonValue === null && field.kind == \"scalar\") {\n                            // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                            continue;\n                        }\n                        const seen = oneofSeen.get(field.oneof);\n                        if (seen !== undefined) {\n                            throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                        }\n                        oneofSeen.set(field.oneof, jsonKey);\n                    }\n                    readField(message, jsonValue, field, options, type);\n                }\n                else {\n                    let found = false;\n                    if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) &&\n                        jsonKey.startsWith(\"[\") &&\n                        jsonKey.endsWith(\"]\")) {\n                        const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n                        if (ext && ext.extendee.typeName == type.typeName) {\n                            found = true;\n                            const [container, get] = createExtensionContainer(ext);\n                            readField(container, jsonValue, ext.field, options, ext);\n                            // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n                            // so that users can bring their own binary reader and writer factories\n                            // if necessary.\n                            setExtension(message, ext, get(), options);\n                        }\n                    }\n                    if (!found && !options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    if (!isFieldSet(field, message)) {\n                        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                        if (field.req) {\n                            throw `required field not set`;\n                        }\n                        if (!options.emitDefaultValues) {\n                            continue;\n                        }\n                        if (!canEmitFieldDefaultValue(field)) {\n                            continue;\n                        }\n                    }\n                    const value = field.oneof\n                        ? message[field.oneof.localName].value\n                        : message[field.localName];\n                    const jsonValue = writeField(field, value, options);\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n                const registry = options.typeRegistry;\n                if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n                    for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                        const ext = registry.findExtensionFor(type.typeName, uf.no);\n                        if (ext && hasExtension(message, ext)) {\n                            // We pass on the options as BinaryReadOptions, so that users can bring their own\n                            // binary reader factory if necessary.\n                            const value = getExtension(message, ext, options);\n                            const jsonValue = writeField(ext.field, value, options);\n                            if (jsonValue !== undefined) {\n                                json[ext.field.jsonName] = jsonValue;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar(type, json, longType) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            return readScalar(type, json, longType !== null && longType !== void 0 ? longType : LongType.BIGINT, true);\n        },\n        writeScalar(type, value, emitDefaultValues) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            if (emitDefaultValues || isScalarZeroValue(type, value)) {\n                return writeScalar(type, value);\n            }\n            return undefined;\n        },\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField(target, jsonValue, field, options, parentType) {\n    let localName = field.localName;\n    if (field.repeated) {\n        assert(field.kind != \"map\");\n        if (jsonValue === null) {\n            return;\n        }\n        if (!Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetArray = target[localName];\n        for (const jsonItem of jsonValue) {\n            if (jsonItem === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n            }\n            switch (field.kind) {\n                case \"message\":\n                    targetArray.push(field.T.fromJson(jsonItem, options));\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetArray.push(enumValue);\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n                    }\n                    catch (e) {\n                        let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else if (field.kind == \"map\") {\n        if (jsonValue === null) {\n            return;\n        }\n        if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetMap = target[localName];\n        for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n            if (jsonMapValue === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n            }\n            let key;\n            try {\n                key = readMapKey(field.K, jsonMapKey);\n            }\n            catch (e) {\n                let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                if (e instanceof Error && e.message.length > 0) {\n                    m += `: ${e.message}`;\n                }\n                throw new Error(m);\n            }\n            switch (field.V.kind) {\n                case \"message\":\n                    targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetMap[key] = enumValue;\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetMap[key] = readScalar(field.V.T, jsonMapValue, LongType.BIGINT, true);\n                    }\n                    catch (e) {\n                        let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else {\n        if (field.oneof) {\n            target = target[field.oneof.localName] = { case: localName };\n            localName = \"value\";\n        }\n        switch (field.kind) {\n            case \"message\":\n                const messageType = field.T;\n                if (jsonValue === null &&\n                    messageType.typeName != \"google.protobuf.Value\") {\n                    return;\n                }\n                let currentValue = target[localName];\n                if (isMessage(currentValue)) {\n                    currentValue.fromJson(jsonValue, options);\n                }\n                else {\n                    target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n                    if (messageType.fieldWrapper && !field.oneof) {\n                        target[localName] =\n                            messageType.fieldWrapper.unwrapField(currentValue);\n                    }\n                }\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n                switch (enumValue) {\n                    case tokenNull:\n                        clearField(field, target);\n                        break;\n                    case tokenIgnoredUnknownEnum:\n                        break;\n                    default:\n                        target[localName] = enumValue;\n                        break;\n                }\n                break;\n            case \"scalar\":\n                try {\n                    const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n                    switch (scalarValue) {\n                        case tokenNull:\n                            clearField(field, target);\n                            break;\n                        default:\n                            target[localName] = scalarValue;\n                            break;\n                    }\n                }\n                catch (e) {\n                    let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                    if (e instanceof Error && e.message.length > 0) {\n                        m += `: ${e.message}`;\n                    }\n                    throw new Error(m);\n                }\n                break;\n        }\n    }\n}\nfunction readMapKey(type, json) {\n    if (type === ScalarType.BOOL) {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (json) {\n            case \"true\":\n                json = true;\n                break;\n            case \"false\":\n                json = false;\n                break;\n        }\n    }\n    return readScalar(type, json, LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return scalarZeroValue(type, longType);\n        }\n        return tokenNull;\n    }\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32 || type == ScalarType.FIXED32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case ScalarType.BOOL:\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (type.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? type.values[0].no : tokenNull;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value !== undefined) {\n                return value.no;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n    if (field.repeated || field.kind == \"map\") {\n        // maps are {}, repeated fields are []\n        return true;\n    }\n    if (field.oneof) {\n        // oneof fields are never emitted\n        return false;\n    }\n    if (field.kind == \"message\") {\n        // singular message field are allowed to emit JSON null, but we do not\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.opt || field.req) {\n        // the field uses explicit presence, so we cannot emit a zero value\n        return false;\n    }\n    return true;\n}\nfunction writeField(field, value, options) {\n    if (field.kind == \"map\") {\n        assert(typeof value == \"object\" && value != null);\n        const jsonObj = {};\n        const entries = Object.entries(value);\n        switch (field.V.kind) {\n            case \"scalar\":\n                for (const [entryKey, entryValue] of entries) {\n                    jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n                }\n                break;\n            case \"message\":\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                }\n                break;\n            case \"enum\":\n                const enumType = field.V.T;\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n                }\n                break;\n        }\n        return options.emitDefaultValues || entries.length > 0\n            ? jsonObj\n            : undefined;\n    }\n    if (field.repeated) {\n        assert(Array.isArray(value));\n        const jsonArr = [];\n        switch (field.kind) {\n            case \"scalar\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeScalar(field.T, value[i]));\n                }\n                break;\n            case \"enum\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n                }\n                break;\n            case \"message\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(value[i].toJson(options));\n                }\n                break;\n        }\n        return options.emitDefaultValues || jsonArr.length > 0\n            ? jsonArr\n            : undefined;\n    }\n    switch (field.kind) {\n        case \"scalar\":\n            return writeScalar(field.T, value);\n        case \"enum\":\n            return writeEnum(field.T, value, options.enumAsInteger);\n        case \"message\":\n            return wrapField(field.T, value).toJson(options);\n    }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n    var _a;\n    assert(typeof value == \"number\");\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value) {\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == \"number\");\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == \"string\");\n            return value;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == \"boolean\");\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return protoBase64.enc(value);\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader, BinaryWriter, WireType } from \"../binary-encoding.js\";\nimport { Message } from \"../message.js\";\nimport { wrapField } from \"./field-wrapper.js\";\nimport { scalarZeroValue } from \"./scalars.js\";\nimport { assert } from \"./assert.js\";\nimport { isFieldSet } from \"./reflect.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function makeBinaryFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n            const type = message.getType();\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            const end = delimitedMessageEncoding\n                ? reader.len\n                : reader.pos + lengthOrEndTagFieldNo;\n            let fieldNo, wireType;\n            while (reader.pos < end) {\n                [fieldNo, wireType] = reader.tag();\n                if (delimitedMessageEncoding === true &&\n                    wireType == WireType.EndGroup) {\n                    break;\n                }\n                const field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType, fieldNo);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                readField(message, reader, field, wireType, options);\n            }\n            if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n                (wireType != WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n                throw new Error(`invalid end group tag`);\n            }\n        },\n        readField,\n        writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                if (!isFieldSet(field, message)) {\n                    if (field.req) {\n                        throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    continue;\n                }\n                const value = field.oneof\n                    ? message[field.oneof.localName].value\n                    : message[field.localName];\n                writeField(field, value, writer, options);\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        },\n        writeField(field, value, writer, options) {\n            // The behavior of our internal function has changed, it does no longer\n            // accept `undefined` values for singular scalar and map.\n            // For backwards-compatibility, we support the old form that is part of\n            // the public API through the interface BinaryFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            writeField(field, value, writer, options);\n        },\n    };\n}\nfunction readField(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n    let { repeated, localName } = field;\n    if (field.oneof) {\n        target = target[field.oneof.localName];\n        if (target.case != localName) {\n            delete target.value;\n        }\n        target.case = localName;\n        localName = \"value\";\n    }\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            let read = readScalar;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            if (field.kind == \"scalar\" && field.L > 0) {\n                read = readScalarLTString;\n            }\n            if (repeated) {\n                let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                const isPacked = wireType == WireType.LengthDelimited &&\n                    scalarType != ScalarType.STRING &&\n                    scalarType != ScalarType.BYTES;\n                if (isPacked) {\n                    let e = reader.uint32() + reader.pos;\n                    while (reader.pos < e) {\n                        arr.push(read(reader, scalarType));\n                    }\n                }\n                else {\n                    arr.push(read(reader, scalarType));\n                }\n            }\n            else {\n                target[localName] = read(reader, scalarType);\n            }\n            break;\n        case \"message\":\n            const messageType = field.T;\n            if (repeated) {\n                // safe to assume presence of array, oneof cannot contain repeated values\n                target[localName].push(readMessageField(reader, new messageType(), options, field));\n            }\n            else {\n                if (isMessage(target[localName])) {\n                    readMessageField(reader, target[localName], options, field);\n                }\n                else {\n                    target[localName] = readMessageField(reader, new messageType(), options, field);\n                    if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n                        target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                    }\n                }\n            }\n            break;\n        case \"map\":\n            let [mapKey, mapVal] = readMapEntry(field, reader, options);\n            // safe to assume presence of map object, oneof cannot contain repeated values\n            target[localName][mapKey] = mapVal;\n            break;\n    }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n    const format = message.getType().runtime.bin;\n    const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n    format.readMessage(message, reader, delimited ? field.no : reader.uint32(), // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options, delimited);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options, undefined);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = scalarZeroValue(field.K, LongType.BIGINT);\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = scalarZeroValue(field.V.T, LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = field.V.T.values[0].no;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case ScalarType.STRING:\n            return reader.string();\n        case ScalarType.BOOL:\n            return reader.bool();\n        case ScalarType.DOUBLE:\n            return reader.double();\n        case ScalarType.FLOAT:\n            return reader.float();\n        case ScalarType.INT32:\n            return reader.int32();\n        case ScalarType.INT64:\n            return reader.int64();\n        case ScalarType.UINT64:\n            return reader.uint64();\n        case ScalarType.FIXED64:\n            return reader.fixed64();\n        case ScalarType.BYTES:\n            return reader.bytes();\n        case ScalarType.FIXED32:\n            return reader.fixed32();\n        case ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case ScalarType.SINT64:\n            return reader.sint64();\n        case ScalarType.UINT32:\n            return reader.uint32();\n        case ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeField(field, value, writer, options) {\n    assert(value !== undefined);\n    const repeated = field.repeated;\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n            if (repeated) {\n                assert(Array.isArray(value));\n                if (field.packed) {\n                    writePacked(writer, scalarType, field.no, value);\n                }\n                else {\n                    for (const item of value) {\n                        writeScalar(writer, scalarType, field.no, item);\n                    }\n                }\n            }\n            else {\n                writeScalar(writer, scalarType, field.no, value);\n            }\n            break;\n        case \"message\":\n            if (repeated) {\n                assert(Array.isArray(value));\n                for (const item of value) {\n                    writeMessageField(writer, options, field, item);\n                }\n            }\n            else {\n                writeMessageField(writer, options, field, value);\n            }\n            break;\n        case \"map\":\n            assert(typeof value == \"object\" && value != null);\n            for (const [key, val] of Object.entries(value)) {\n                writeMapEntry(writer, options, field, key, val);\n            }\n            break;\n    }\n}\nexport function writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value);\n            break;\n        case \"enum\":\n            writeScalar(writer, ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            assert(value !== undefined);\n            writer.tag(2, WireType.LengthDelimited).bytes(value.toBinary(options));\n            break;\n    }\n    writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n    const message = wrapField(field.T, value);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.delimited)\n        writer\n            .tag(field.no, WireType.StartGroup)\n            .raw(message.toBinary(options))\n            .tag(field.no, WireType.EndGroup);\n    else\n        writer\n            .tag(field.no, WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n    assert(value !== undefined);\n    let [wireType, method] = scalarTypeInfo(type);\n    writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n    let wireType = WireType.Varint;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.BYTES:\n        case ScalarType.STRING:\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.DOUBLE:\n        case ScalarType.FIXED64:\n        case ScalarType.SFIXED64:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType, method];\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from \"./enum.js\";\nimport { Message } from \"../message.js\";\nimport { scalarEquals } from \"./scalars.js\";\nimport { ScalarType } from \"../scalar.js\";\nimport { isMessage } from \"../is-message.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] == null) {\n                    // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !isMessage(val, sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => isMessage(val, mt) ? val : new mt(val));\n                        }\n                        else {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = isMessage(val, mt) ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        // TODO use isFieldSet() here to support future field presence\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return scalarEquals(ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return scalarEquals(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return scalarEquals(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        // TODO use isFieldSet() here to support future field presence\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (isMessage(value)) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType, makeEnum, makeEnumType } from \"./enum.js\";\nimport { makeMessageType } from \"./message-type.js\";\nimport { makeExtension } from \"./extensions.js\";\nimport { makeJsonFormat } from \"./json-format.js\";\nimport { makeBinaryFormat } from \"./binary-format.js\";\nimport { makeUtilCommon } from \"./util-common.js\";\nexport function makeProtoRuntime(syntax, newFieldList, initFields) {\n    return {\n        syntax,\n        json: makeJsonFormat(),\n        bin: makeBinaryFormat(),\n        util: Object.assign(Object.assign({}, makeUtilCommon()), { newFieldList,\n            initFields }),\n        makeMessageType(typeName, fields, opt) {\n            return makeMessageType(this, typeName, fields, opt);\n        },\n        makeEnum,\n        makeEnumType,\n        getEnumType,\n        makeExtension(typeName, extendee, field) {\n            return makeExtension(this, typeName, extendee, field);\n        },\n    };\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n        case \"extension\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            let name = desc.name;\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix !== undefined) {\n                name = name.substring(sharedPrefix.length);\n            }\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nexport const safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nexport const safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from \"./names.js\";\nimport { assert } from \"./assert.js\";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.req = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { InternalOneofInfo } from \"./field.js\";\nimport { fieldJsonName, localFieldName } from \"./names.js\";\nimport { LongType, ScalarType } from \"../scalar.js\";\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nexport function normalizeFieldInfos(fieldInfos, packedByDefault) {\n    var _a, _b, _c, _d, _e, _f;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n        }\n        f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n        f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n        f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n        if (field.packed === undefined) {\n            if (packedByDefault) {\n                f.packed =\n                    field.kind == \"enum\" ||\n                        (field.kind == \"scalar\" &&\n                            field.T != ScalarType.BYTES &&\n                            field.T != ScalarType.STRING);\n            }\n            else {\n                f.packed = false;\n            }\n        }\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { scalarZeroValue } from \"./private/scalars.js\";\nimport { normalizeFieldInfos } from \"./private/field-normalize.js\";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime(\"proto3\", (fields) => {\n    return new InternalFieldList(fields, (source) => normalizeFieldInfos(source, true));\n}, \n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        if (member.opt) {\n            continue;\n        }\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"enum\":\n                t[name] = 0;\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n                t[name] = scalarZeroValue(member.T, member.L);\n                break;\n            case \"message\":\n                // message fields are always optional in proto3\n                break;\n        }\n    }\n});\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { normalizeFieldInfos } from \"./private/field-normalize.js\";\n/**\n * Provides functionality for messages defined with the proto2 syntax.\n */\nexport const proto2 = makeProtoRuntime(\"proto2\", (fields) => {\n    return new InternalFieldList(fields, (source) => normalizeFieldInfos(source, false));\n}, \n// TODO merge with proto3 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n            case \"enum\":\n            case \"message\":\n                // In contrast to proto3, enum and scalar fields have no intrinsic default value,\n                // only an optional explicit default value.\n                // Unlike proto3 intrinsic default values, proto2 explicit default values are not\n                // set on construction, because they are not omitted on the wire. If we did set\n                // default values on construction, a deserialize-serialize round-trip would add\n                // fields to a message.\n                break;\n        }\n    }\n});\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Export global Number constants. This is done so that we can safely use\n// these global constants when generating code and be assured we're using\n// the correct values. We cannot rely on globalThis since we support ES2017\n// and globalThis was introduced in ES2020. We also don't want to explicitly\n// generate code using, for example, Number.NaN, since this could clash with\n// a message name of Number. Instead we can export them here since this will\n// be in a different scope as the generated code and we are guaranteed to use\n// the intended global values.\nexport const protoDouble = {\n    NaN: Number.NaN,\n    POSITIVE_INFINITY: Number.POSITIVE_INFINITY,\n    NEGATIVE_INFINITY: Number.NEGATIVE_INFINITY,\n};\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nexport var MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nexport var MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Author: kenton@google.com (Kenton Varda)\n//  Based on original Protocol Buffers design by\n//  Sanjay Ghemawat, Jeff Dean, and others.\n//\n// The messages in this file describe the definitions found in .proto files.\n// A valid .proto file can be translated directly to a FileDescriptorProto\n// without any other information (e.g. without reading its imports).\n// @generated by protoc-gen-es v1.10.0 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/descriptor.proto (package google.protobuf, syntax proto2)\n/* eslint-disable */\nimport { proto2 } from \"../../proto2.js\";\nimport { Message } from \"../../message.js\";\n/**\n * The full set of known editions.\n *\n * @generated from enum google.protobuf.Edition\n */\nexport var Edition;\n(function (Edition) {\n    /**\n     * A placeholder for an unknown edition value.\n     *\n     * @generated from enum value: EDITION_UNKNOWN = 0;\n     */\n    Edition[Edition[\"EDITION_UNKNOWN\"] = 0] = \"EDITION_UNKNOWN\";\n    /**\n     * A placeholder edition for specifying default behaviors *before* a feature\n     * was first introduced.  This is effectively an \"infinite past\".\n     *\n     * @generated from enum value: EDITION_LEGACY = 900;\n     */\n    Edition[Edition[\"EDITION_LEGACY\"] = 900] = \"EDITION_LEGACY\";\n    /**\n     * Legacy syntax \"editions\".  These pre-date editions, but behave much like\n     * distinct editions.  These can't be used to specify the edition of proto\n     * files, but feature definitions must supply proto2/proto3 defaults for\n     * backwards compatibility.\n     *\n     * @generated from enum value: EDITION_PROTO2 = 998;\n     */\n    Edition[Edition[\"EDITION_PROTO2\"] = 998] = \"EDITION_PROTO2\";\n    /**\n     * @generated from enum value: EDITION_PROTO3 = 999;\n     */\n    Edition[Edition[\"EDITION_PROTO3\"] = 999] = \"EDITION_PROTO3\";\n    /**\n     * Editions that have been released.  The specific values are arbitrary and\n     * should not be depended on, but they will always be time-ordered for easy\n     * comparison.\n     *\n     * @generated from enum value: EDITION_2023 = 1000;\n     */\n    Edition[Edition[\"EDITION_2023\"] = 1000] = \"EDITION_2023\";\n    /**\n     * @generated from enum value: EDITION_2024 = 1001;\n     */\n    Edition[Edition[\"EDITION_2024\"] = 1001] = \"EDITION_2024\";\n    /**\n     * Placeholder editions for testing feature resolution.  These should not be\n     * used or relyed on outside of tests.\n     *\n     * @generated from enum value: EDITION_1_TEST_ONLY = 1;\n     */\n    Edition[Edition[\"EDITION_1_TEST_ONLY\"] = 1] = \"EDITION_1_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_2_TEST_ONLY = 2;\n     */\n    Edition[Edition[\"EDITION_2_TEST_ONLY\"] = 2] = \"EDITION_2_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99997_TEST_ONLY = 99997;\n     */\n    Edition[Edition[\"EDITION_99997_TEST_ONLY\"] = 99997] = \"EDITION_99997_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99998_TEST_ONLY = 99998;\n     */\n    Edition[Edition[\"EDITION_99998_TEST_ONLY\"] = 99998] = \"EDITION_99998_TEST_ONLY\";\n    /**\n     * @generated from enum value: EDITION_99999_TEST_ONLY = 99999;\n     */\n    Edition[Edition[\"EDITION_99999_TEST_ONLY\"] = 99999] = \"EDITION_99999_TEST_ONLY\";\n    /**\n     * Placeholder for specifying unbounded edition support.  This should only\n     * ever be used by plugins that can expect to never require any changes to\n     * support a new edition.\n     *\n     * @generated from enum value: EDITION_MAX = 2147483647;\n     */\n    Edition[Edition[\"EDITION_MAX\"] = 2147483647] = \"EDITION_MAX\";\n})(Edition || (Edition = {}));\n// Retrieve enum metadata with: proto2.getEnumType(Edition)\nproto2.util.setEnumType(Edition, \"google.protobuf.Edition\", [\n    { no: 0, name: \"EDITION_UNKNOWN\" },\n    { no: 900, name: \"EDITION_LEGACY\" },\n    { no: 998, name: \"EDITION_PROTO2\" },\n    { no: 999, name: \"EDITION_PROTO3\" },\n    { no: 1000, name: \"EDITION_2023\" },\n    { no: 1001, name: \"EDITION_2024\" },\n    { no: 1, name: \"EDITION_1_TEST_ONLY\" },\n    { no: 2, name: \"EDITION_2_TEST_ONLY\" },\n    { no: 99997, name: \"EDITION_99997_TEST_ONLY\" },\n    { no: 99998, name: \"EDITION_99998_TEST_ONLY\" },\n    { no: 99999, name: \"EDITION_99999_TEST_ONLY\" },\n    { no: 2147483647, name: \"EDITION_MAX\" },\n]);\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n *\n * @generated from message google.protobuf.FileDescriptorSet\n */\nexport class FileDescriptorSet extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FileDescriptorProto file = 1;\n         */\n        this.file = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FileDescriptorSet, a, b);\n    }\n}\nFileDescriptorSet.runtime = proto2;\nFileDescriptorSet.typeName = \"google.protobuf.FileDescriptorSet\";\nFileDescriptorSet.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"file\", kind: \"message\", T: FileDescriptorProto, repeated: true },\n]);\n/**\n * Describes a complete .proto file.\n *\n * @generated from message google.protobuf.FileDescriptorProto\n */\nexport class FileDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Names of files imported by this file.\n         *\n         * @generated from field: repeated string dependency = 3;\n         */\n        this.dependency = [];\n        /**\n         * Indexes of the public imported files in the dependency list above.\n         *\n         * @generated from field: repeated int32 public_dependency = 10;\n         */\n        this.publicDependency = [];\n        /**\n         * Indexes of the weak imported files in the dependency list.\n         * For Google-internal migration only. Do not use.\n         *\n         * @generated from field: repeated int32 weak_dependency = 11;\n         */\n        this.weakDependency = [];\n        /**\n         * All top-level definitions in this file.\n         *\n         * @generated from field: repeated google.protobuf.DescriptorProto message_type = 4;\n         */\n        this.messageType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 5;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.ServiceDescriptorProto service = 6;\n         */\n        this.service = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 7;\n         */\n        this.extension = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FileDescriptorProto, a, b);\n    }\n}\nFileDescriptorProto.runtime = proto2;\nFileDescriptorProto.typeName = \"google.protobuf.FileDescriptorProto\";\nFileDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"dependency\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 10, name: \"public_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 11, name: \"weak_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 4, name: \"message_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 5, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 6, name: \"service\", kind: \"message\", T: ServiceDescriptorProto, repeated: true },\n    { no: 7, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FileOptions, opt: true },\n    { no: 9, name: \"source_code_info\", kind: \"message\", T: SourceCodeInfo, opt: true },\n    { no: 12, name: \"syntax\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 14, name: \"edition\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * Describes a message type.\n *\n * @generated from message google.protobuf.DescriptorProto\n */\nexport class DescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto field = 2;\n         */\n        this.field = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 6;\n         */\n        this.extension = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto nested_type = 3;\n         */\n        this.nestedType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 4;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;\n         */\n        this.extensionRange = [];\n        /**\n         * @generated from field: repeated google.protobuf.OneofDescriptorProto oneof_decl = 8;\n         */\n        this.oneofDecl = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved field names, which may not be used by fields in the same message.\n         * A given name may only be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 10;\n         */\n        this.reservedName = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(DescriptorProto, a, b);\n    }\n}\nDescriptorProto.runtime = proto2;\nDescriptorProto.typeName = \"google.protobuf.DescriptorProto\";\nDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"field\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 6, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 3, name: \"nested_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 4, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 5, name: \"extension_range\", kind: \"message\", T: DescriptorProto_ExtensionRange, repeated: true },\n    { no: 8, name: \"oneof_decl\", kind: \"message\", T: OneofDescriptorProto, repeated: true },\n    { no: 7, name: \"options\", kind: \"message\", T: MessageOptions, opt: true },\n    { no: 9, name: \"reserved_range\", kind: \"message\", T: DescriptorProto_ReservedRange, repeated: true },\n    { no: 10, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.DescriptorProto.ExtensionRange\n */\nexport class DescriptorProto_ExtensionRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ExtensionRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ExtensionRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ExtensionRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(DescriptorProto_ExtensionRange, a, b);\n    }\n}\nDescriptorProto_ExtensionRange.runtime = proto2;\nDescriptorProto_ExtensionRange.typeName = \"google.protobuf.DescriptorProto.ExtensionRange\";\nDescriptorProto_ExtensionRange.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ExtensionRangeOptions, opt: true },\n]);\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n *\n * @generated from message google.protobuf.DescriptorProto.ReservedRange\n */\nexport class DescriptorProto_ReservedRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(DescriptorProto_ReservedRange, a, b);\n    }\n}\nDescriptorProto_ReservedRange.runtime = proto2;\nDescriptorProto_ReservedRange.typeName = \"google.protobuf.DescriptorProto.ReservedRange\";\nDescriptorProto_ReservedRange.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions\n */\nexport class ExtensionRangeOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        /**\n         * For external users: DO NOT USE. We are in the process of open sourcing\n         * extension declaration and executing internal cleanups before it can be\n         * used externally.\n         *\n         * @generated from field: repeated google.protobuf.ExtensionRangeOptions.Declaration declaration = 2;\n         */\n        this.declaration = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(ExtensionRangeOptions, a, b);\n    }\n}\nExtensionRangeOptions.runtime = proto2;\nExtensionRangeOptions.typeName = \"google.protobuf.ExtensionRangeOptions\";\nExtensionRangeOptions.fields = proto2.util.newFieldList(() => [\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n    { no: 2, name: \"declaration\", kind: \"message\", T: ExtensionRangeOptions_Declaration, repeated: true },\n    { no: 50, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 3, name: \"verification\", kind: \"enum\", T: proto2.getEnumType(ExtensionRangeOptions_VerificationState), opt: true, default: ExtensionRangeOptions_VerificationState.UNVERIFIED },\n]);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */\nexport var ExtensionRangeOptions_VerificationState;\n(function (ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})(ExtensionRangeOptions_VerificationState || (ExtensionRangeOptions_VerificationState = {}));\n// Retrieve enum metadata with: proto2.getEnumType(ExtensionRangeOptions_VerificationState)\nproto2.util.setEnumType(ExtensionRangeOptions_VerificationState, \"google.protobuf.ExtensionRangeOptions.VerificationState\", [\n    { no: 0, name: \"DECLARATION\" },\n    { no: 1, name: \"UNVERIFIED\" },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions.Declaration\n */\nexport class ExtensionRangeOptions_Declaration extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions_Declaration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions_Declaration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions_Declaration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(ExtensionRangeOptions_Declaration, a, b);\n    }\n}\nExtensionRangeOptions_Declaration.runtime = proto2;\nExtensionRangeOptions_Declaration.typeName = \"google.protobuf.ExtensionRangeOptions.Declaration\";\nExtensionRangeOptions_Declaration.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"full_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"reserved\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"repeated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * Describes a field within a message.\n *\n * @generated from message google.protobuf.FieldDescriptorProto\n */\nexport class FieldDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FieldDescriptorProto, a, b);\n    }\n}\nFieldDescriptorProto.runtime = proto2;\nFieldDescriptorProto.typeName = \"google.protobuf.FieldDescriptorProto\";\nFieldDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"label\", kind: \"enum\", T: proto2.getEnumType(FieldDescriptorProto_Label), opt: true },\n    { no: 5, name: \"type\", kind: \"enum\", T: proto2.getEnumType(FieldDescriptorProto_Type), opt: true },\n    { no: 6, name: \"type_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"extendee\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 9, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FieldOptions, opt: true },\n    { no: 17, name: \"proto3_optional\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nexport var FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported after google.protobuf. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.  In Editions, the group wire format\n     * can be enabled via the `message_encoding` feature.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})(FieldDescriptorProto_Type || (FieldDescriptorProto_Type = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Type)\nproto2.util.setEnumType(FieldDescriptorProto_Type, \"google.protobuf.FieldDescriptorProto.Type\", [\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nexport var FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n    /**\n     * The required label is only allowed in google.protobuf.  In proto3 and Editions\n     * it's explicitly prohibited.  In Editions, the `field_presence` feature\n     * can be used to get this behavior.\n     *\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n})(FieldDescriptorProto_Label || (FieldDescriptorProto_Label = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Label)\nproto2.util.setEnumType(FieldDescriptorProto_Label, \"google.protobuf.FieldDescriptorProto.Label\", [\n    { no: 1, name: \"LABEL_OPTIONAL\" },\n    { no: 3, name: \"LABEL_REPEATED\" },\n    { no: 2, name: \"LABEL_REQUIRED\" },\n]);\n/**\n * Describes a oneof.\n *\n * @generated from message google.protobuf.OneofDescriptorProto\n */\nexport class OneofDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(OneofDescriptorProto, a, b);\n    }\n}\nOneofDescriptorProto.runtime = proto2;\nOneofDescriptorProto.typeName = \"google.protobuf.OneofDescriptorProto\";\nOneofDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"options\", kind: \"message\", T: OneofOptions, opt: true },\n]);\n/**\n * Describes an enum type.\n *\n * @generated from message google.protobuf.EnumDescriptorProto\n */\nexport class EnumDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.EnumValueDescriptorProto value = 2;\n         */\n        this.value = [];\n        /**\n         * Range of reserved numeric values. Reserved numeric values may not be used\n         * by enum values in the same enum declaration. Reserved ranges may not\n         * overlap.\n         *\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved enum value names, which may not be reused. A given name may only\n         * be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 5;\n         */\n        this.reservedName = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(EnumDescriptorProto, a, b);\n    }\n}\nEnumDescriptorProto.runtime = proto2;\nEnumDescriptorProto.typeName = \"google.protobuf.EnumDescriptorProto\";\nEnumDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"value\", kind: \"message\", T: EnumValueDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumOptions, opt: true },\n    { no: 4, name: \"reserved_range\", kind: \"message\", T: EnumDescriptorProto_EnumReservedRange, repeated: true },\n    { no: 5, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n *\n * @generated from message google.protobuf.EnumDescriptorProto.EnumReservedRange\n */\nexport class EnumDescriptorProto_EnumReservedRange extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(EnumDescriptorProto_EnumReservedRange, a, b);\n    }\n}\nEnumDescriptorProto_EnumReservedRange.runtime = proto2;\nEnumDescriptorProto_EnumReservedRange.typeName = \"google.protobuf.EnumDescriptorProto.EnumReservedRange\";\nEnumDescriptorProto_EnumReservedRange.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * Describes a value within an enum.\n *\n * @generated from message google.protobuf.EnumValueDescriptorProto\n */\nexport class EnumValueDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(EnumValueDescriptorProto, a, b);\n    }\n}\nEnumValueDescriptorProto.runtime = proto2;\nEnumValueDescriptorProto.typeName = \"google.protobuf.EnumValueDescriptorProto\";\nEnumValueDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumValueOptions, opt: true },\n]);\n/**\n * Describes a service.\n *\n * @generated from message google.protobuf.ServiceDescriptorProto\n */\nexport class ServiceDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.MethodDescriptorProto method = 2;\n         */\n        this.method = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(ServiceDescriptorProto, a, b);\n    }\n}\nServiceDescriptorProto.runtime = proto2;\nServiceDescriptorProto.typeName = \"google.protobuf.ServiceDescriptorProto\";\nServiceDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"method\", kind: \"message\", T: MethodDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ServiceOptions, opt: true },\n]);\n/**\n * Describes a method of a service.\n *\n * @generated from message google.protobuf.MethodDescriptorProto\n */\nexport class MethodDescriptorProto extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(MethodDescriptorProto, a, b);\n    }\n}\nMethodDescriptorProto.runtime = proto2;\nMethodDescriptorProto.typeName = \"google.protobuf.MethodDescriptorProto\";\nMethodDescriptorProto.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"input_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"output_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"options\", kind: \"message\", T: MethodOptions, opt: true },\n    { no: 5, name: \"client_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"server_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n]);\n/**\n * @generated from message google.protobuf.FileOptions\n */\nexport class FileOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here.\n         * See the documentation for the \"Options\" section above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FileOptions, a, b);\n    }\n}\nFileOptions.runtime = proto2;\nFileOptions.typeName = \"google.protobuf.FileOptions\";\nFileOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"java_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"java_outer_classname\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 10, name: \"java_multiple_files\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 20, name: \"java_generate_equals_and_hash\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 27, name: \"java_string_check_utf8\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 9, name: \"optimize_for\", kind: \"enum\", T: proto2.getEnumType(FileOptions_OptimizeMode), opt: true, default: FileOptions_OptimizeMode.SPEED },\n    { no: 11, name: \"go_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"cc_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"java_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 18, name: \"py_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 23, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 31, name: \"cc_enable_arenas\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: true },\n    { no: 36, name: \"objc_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 37, name: \"csharp_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 39, name: \"swift_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 40, name: \"php_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 41, name: \"php_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 44, name: \"php_metadata_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 45, name: \"ruby_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 50, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nexport var FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})(FileOptions_OptimizeMode || (FileOptions_OptimizeMode = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FileOptions_OptimizeMode)\nproto2.util.setEnumType(FileOptions_OptimizeMode, \"google.protobuf.FileOptions.OptimizeMode\", [\n    { no: 1, name: \"SPEED\" },\n    { no: 2, name: \"CODE_SIZE\" },\n    { no: 3, name: \"LITE_RUNTIME\" },\n]);\n/**\n * @generated from message google.protobuf.MessageOptions\n */\nexport class MessageOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MessageOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MessageOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MessageOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(MessageOptions, a, b);\n    }\n}\nMessageOptions.runtime = proto2;\nMessageOptions.typeName = \"google.protobuf.MessageOptions\";\nMessageOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"message_set_wire_format\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 2, name: \"no_standard_descriptor_accessor\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 7, name: \"map_entry\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 11, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 12, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.FieldOptions\n */\nexport class FieldOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.OptionTargetType targets = 19;\n         */\n        this.targets = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.EditionDefault edition_defaults = 20;\n         */\n        this.editionDefaults = [];\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FieldOptions, a, b);\n    }\n}\nFieldOptions.runtime = proto2;\nFieldOptions.typeName = \"google.protobuf.FieldOptions\";\nFieldOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"ctype\", kind: \"enum\", T: proto2.getEnumType(FieldOptions_CType), opt: true, default: FieldOptions_CType.STRING },\n    { no: 2, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"jstype\", kind: \"enum\", T: proto2.getEnumType(FieldOptions_JSType), opt: true, default: FieldOptions_JSType.JS_NORMAL },\n    { no: 5, name: \"lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 15, name: \"unverified_lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 10, name: \"weak\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 16, name: \"debug_redact\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"retention\", kind: \"enum\", T: proto2.getEnumType(FieldOptions_OptionRetention), opt: true },\n    { no: 19, name: \"targets\", kind: \"enum\", T: proto2.getEnumType(FieldOptions_OptionTargetType), repeated: true },\n    { no: 20, name: \"edition_defaults\", kind: \"message\", T: FieldOptions_EditionDefault, repeated: true },\n    { no: 21, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 22, name: \"feature_support\", kind: \"message\", T: FieldOptions_FeatureSupport, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nexport var FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})(FieldOptions_CType || (FieldOptions_CType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_CType)\nproto2.util.setEnumType(FieldOptions_CType, \"google.protobuf.FieldOptions.CType\", [\n    { no: 0, name: \"STRING\" },\n    { no: 1, name: \"CORD\" },\n    { no: 2, name: \"STRING_PIECE\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nexport var FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})(FieldOptions_JSType || (FieldOptions_JSType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_JSType)\nproto2.util.setEnumType(FieldOptions_JSType, \"google.protobuf.FieldOptions.JSType\", [\n    { no: 0, name: \"JS_NORMAL\" },\n    { no: 1, name: \"JS_STRING\" },\n    { no: 2, name: \"JS_NUMBER\" },\n]);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n * Note: as of January 2023, support for this is in progress and does not yet\n * have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */\nexport var FieldOptions_OptionRetention;\n(function (FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})(FieldOptions_OptionRetention || (FieldOptions_OptionRetention = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionRetention)\nproto2.util.setEnumType(FieldOptions_OptionRetention, \"google.protobuf.FieldOptions.OptionRetention\", [\n    { no: 0, name: \"RETENTION_UNKNOWN\" },\n    { no: 1, name: \"RETENTION_RUNTIME\" },\n    { no: 2, name: \"RETENTION_SOURCE\" },\n]);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity. Note: as of January 2023, support for this is\n * in progress and does not yet have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */\nexport var FieldOptions_OptionTargetType;\n(function (FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})(FieldOptions_OptionTargetType || (FieldOptions_OptionTargetType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionTargetType)\nproto2.util.setEnumType(FieldOptions_OptionTargetType, \"google.protobuf.FieldOptions.OptionTargetType\", [\n    { no: 0, name: \"TARGET_TYPE_UNKNOWN\" },\n    { no: 1, name: \"TARGET_TYPE_FILE\" },\n    { no: 2, name: \"TARGET_TYPE_EXTENSION_RANGE\" },\n    { no: 3, name: \"TARGET_TYPE_MESSAGE\" },\n    { no: 4, name: \"TARGET_TYPE_FIELD\" },\n    { no: 5, name: \"TARGET_TYPE_ONEOF\" },\n    { no: 6, name: \"TARGET_TYPE_ENUM\" },\n    { no: 7, name: \"TARGET_TYPE_ENUM_ENTRY\" },\n    { no: 8, name: \"TARGET_TYPE_SERVICE\" },\n    { no: 9, name: \"TARGET_TYPE_METHOD\" },\n]);\n/**\n * @generated from message google.protobuf.FieldOptions.EditionDefault\n */\nexport class FieldOptions_EditionDefault extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions_EditionDefault().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions_EditionDefault().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions_EditionDefault().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FieldOptions_EditionDefault, a, b);\n    }\n}\nFieldOptions_EditionDefault.runtime = proto2;\nFieldOptions_EditionDefault.typeName = \"google.protobuf.FieldOptions.EditionDefault\";\nFieldOptions_EditionDefault.fields = proto2.util.newFieldList(() => [\n    { no: 3, name: \"edition\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * Information about the support window of a feature.\n *\n * @generated from message google.protobuf.FieldOptions.FeatureSupport\n */\nexport class FieldOptions_FeatureSupport extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions_FeatureSupport().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions_FeatureSupport().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions_FeatureSupport().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FieldOptions_FeatureSupport, a, b);\n    }\n}\nFieldOptions_FeatureSupport.runtime = proto2;\nFieldOptions_FeatureSupport.typeName = \"google.protobuf.FieldOptions.FeatureSupport\";\nFieldOptions_FeatureSupport.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"edition_introduced\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n    { no: 2, name: \"edition_deprecated\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n    { no: 3, name: \"deprecation_warning\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"edition_removed\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * @generated from message google.protobuf.OneofOptions\n */\nexport class OneofOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(OneofOptions, a, b);\n    }\n}\nOneofOptions.runtime = proto2;\nOneofOptions.typeName = \"google.protobuf.OneofOptions\";\nOneofOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumOptions\n */\nexport class EnumOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(EnumOptions, a, b);\n    }\n}\nEnumOptions.runtime = proto2;\nEnumOptions.typeName = \"google.protobuf.EnumOptions\";\nEnumOptions.fields = proto2.util.newFieldList(() => [\n    { no: 2, name: \"allow_alias\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 7, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumValueOptions\n */\nexport class EnumValueOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(EnumValueOptions, a, b);\n    }\n}\nEnumValueOptions.runtime = proto2;\nEnumValueOptions.typeName = \"google.protobuf.EnumValueOptions\";\nEnumValueOptions.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 2, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 3, name: \"debug_redact\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 4, name: \"feature_support\", kind: \"message\", T: FieldOptions_FeatureSupport, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.ServiceOptions\n */\nexport class ServiceOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(ServiceOptions, a, b);\n    }\n}\nServiceOptions.runtime = proto2;\nServiceOptions.typeName = \"google.protobuf.ServiceOptions\";\nServiceOptions.fields = proto2.util.newFieldList(() => [\n    { no: 34, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.MethodOptions\n */\nexport class MethodOptions extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(MethodOptions, a, b);\n    }\n}\nMethodOptions.runtime = proto2;\nMethodOptions.typeName = \"google.protobuf.MethodOptions\";\nMethodOptions.fields = proto2.util.newFieldList(() => [\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 34, name: \"idempotency_level\", kind: \"enum\", T: proto2.getEnumType(MethodOptions_IdempotencyLevel), opt: true, default: MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN },\n    { no: 35, name: \"features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nexport var MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})(MethodOptions_IdempotencyLevel || (MethodOptions_IdempotencyLevel = {}));\n// Retrieve enum metadata with: proto2.getEnumType(MethodOptions_IdempotencyLevel)\nproto2.util.setEnumType(MethodOptions_IdempotencyLevel, \"google.protobuf.MethodOptions.IdempotencyLevel\", [\n    { no: 0, name: \"IDEMPOTENCY_UNKNOWN\" },\n    { no: 1, name: \"NO_SIDE_EFFECTS\" },\n    { no: 2, name: \"IDEMPOTENT\" },\n]);\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n *\n * @generated from message google.protobuf.UninterpretedOption\n */\nexport class UninterpretedOption extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.UninterpretedOption.NamePart name = 2;\n         */\n        this.name = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(UninterpretedOption, a, b);\n    }\n}\nUninterpretedOption.runtime = proto2;\nUninterpretedOption.typeName = \"google.protobuf.UninterpretedOption\";\nUninterpretedOption.fields = proto2.util.newFieldList(() => [\n    { no: 2, name: \"name\", kind: \"message\", T: UninterpretedOption_NamePart, repeated: true },\n    { no: 3, name: \"identifier_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"positive_int_value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 5, name: \"negative_int_value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, opt: true },\n    { no: 6, name: \"double_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 7, name: \"string_value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n    { no: 8, name: \"aggregate_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n * \"foo.(bar.baz).moo\".\n *\n * @generated from message google.protobuf.UninterpretedOption.NamePart\n */\nexport class UninterpretedOption_NamePart extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption_NamePart().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption_NamePart().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption_NamePart().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(UninterpretedOption_NamePart, a, b);\n    }\n}\nUninterpretedOption_NamePart.runtime = proto2;\nUninterpretedOption_NamePart.typeName = \"google.protobuf.UninterpretedOption.NamePart\";\nUninterpretedOption_NamePart.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name_part\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, req: true },\n    { no: 2, name: \"is_extension\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, req: true },\n]);\n/**\n * TODO Enums in C++ gencode (and potentially other languages) are\n * not well scoped.  This means that each of the feature enums below can clash\n * with each other.  The short names we've chosen maximize call-site\n * readability, but leave us very open to this scenario.  A future feature will\n * be designed and implemented to handle this, hopefully before we ever hit a\n * conflict here.\n *\n * @generated from message google.protobuf.FeatureSet\n */\nexport class FeatureSet extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FeatureSet, a, b);\n    }\n}\nFeatureSet.runtime = proto2;\nFeatureSet.typeName = \"google.protobuf.FeatureSet\";\nFeatureSet.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"field_presence\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_FieldPresence), opt: true },\n    { no: 2, name: \"enum_type\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_EnumType), opt: true },\n    { no: 3, name: \"repeated_field_encoding\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_RepeatedFieldEncoding), opt: true },\n    { no: 4, name: \"utf8_validation\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_Utf8Validation), opt: true },\n    { no: 5, name: \"message_encoding\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_MessageEncoding), opt: true },\n    { no: 6, name: \"json_format\", kind: \"enum\", T: proto2.getEnumType(FeatureSet_JsonFormat), opt: true },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.FieldPresence\n */\nexport var FeatureSet_FieldPresence;\n(function (FeatureSet_FieldPresence) {\n    /**\n     * @generated from enum value: FIELD_PRESENCE_UNKNOWN = 0;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"FIELD_PRESENCE_UNKNOWN\"] = 0] = \"FIELD_PRESENCE_UNKNOWN\";\n    /**\n     * @generated from enum value: EXPLICIT = 1;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"EXPLICIT\"] = 1] = \"EXPLICIT\";\n    /**\n     * @generated from enum value: IMPLICIT = 2;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"IMPLICIT\"] = 2] = \"IMPLICIT\";\n    /**\n     * @generated from enum value: LEGACY_REQUIRED = 3;\n     */\n    FeatureSet_FieldPresence[FeatureSet_FieldPresence[\"LEGACY_REQUIRED\"] = 3] = \"LEGACY_REQUIRED\";\n})(FeatureSet_FieldPresence || (FeatureSet_FieldPresence = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_FieldPresence)\nproto2.util.setEnumType(FeatureSet_FieldPresence, \"google.protobuf.FeatureSet.FieldPresence\", [\n    { no: 0, name: \"FIELD_PRESENCE_UNKNOWN\" },\n    { no: 1, name: \"EXPLICIT\" },\n    { no: 2, name: \"IMPLICIT\" },\n    { no: 3, name: \"LEGACY_REQUIRED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.EnumType\n */\nexport var FeatureSet_EnumType;\n(function (FeatureSet_EnumType) {\n    /**\n     * @generated from enum value: ENUM_TYPE_UNKNOWN = 0;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"ENUM_TYPE_UNKNOWN\"] = 0] = \"ENUM_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: OPEN = 1;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"OPEN\"] = 1] = \"OPEN\";\n    /**\n     * @generated from enum value: CLOSED = 2;\n     */\n    FeatureSet_EnumType[FeatureSet_EnumType[\"CLOSED\"] = 2] = \"CLOSED\";\n})(FeatureSet_EnumType || (FeatureSet_EnumType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_EnumType)\nproto2.util.setEnumType(FeatureSet_EnumType, \"google.protobuf.FeatureSet.EnumType\", [\n    { no: 0, name: \"ENUM_TYPE_UNKNOWN\" },\n    { no: 1, name: \"OPEN\" },\n    { no: 2, name: \"CLOSED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.RepeatedFieldEncoding\n */\nexport var FeatureSet_RepeatedFieldEncoding;\n(function (FeatureSet_RepeatedFieldEncoding) {\n    /**\n     * @generated from enum value: REPEATED_FIELD_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"REPEATED_FIELD_ENCODING_UNKNOWN\"] = 0] = \"REPEATED_FIELD_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: PACKED = 1;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * @generated from enum value: EXPANDED = 2;\n     */\n    FeatureSet_RepeatedFieldEncoding[FeatureSet_RepeatedFieldEncoding[\"EXPANDED\"] = 2] = \"EXPANDED\";\n})(FeatureSet_RepeatedFieldEncoding || (FeatureSet_RepeatedFieldEncoding = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_RepeatedFieldEncoding)\nproto2.util.setEnumType(FeatureSet_RepeatedFieldEncoding, \"google.protobuf.FeatureSet.RepeatedFieldEncoding\", [\n    { no: 0, name: \"REPEATED_FIELD_ENCODING_UNKNOWN\" },\n    { no: 1, name: \"PACKED\" },\n    { no: 2, name: \"EXPANDED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.Utf8Validation\n */\nexport var FeatureSet_Utf8Validation;\n(function (FeatureSet_Utf8Validation) {\n    /**\n     * @generated from enum value: UTF8_VALIDATION_UNKNOWN = 0;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"UTF8_VALIDATION_UNKNOWN\"] = 0] = \"UTF8_VALIDATION_UNKNOWN\";\n    /**\n     * @generated from enum value: VERIFY = 2;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"VERIFY\"] = 2] = \"VERIFY\";\n    /**\n     * @generated from enum value: NONE = 3;\n     */\n    FeatureSet_Utf8Validation[FeatureSet_Utf8Validation[\"NONE\"] = 3] = \"NONE\";\n})(FeatureSet_Utf8Validation || (FeatureSet_Utf8Validation = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_Utf8Validation)\nproto2.util.setEnumType(FeatureSet_Utf8Validation, \"google.protobuf.FeatureSet.Utf8Validation\", [\n    { no: 0, name: \"UTF8_VALIDATION_UNKNOWN\" },\n    { no: 2, name: \"VERIFY\" },\n    { no: 3, name: \"NONE\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.MessageEncoding\n */\nexport var FeatureSet_MessageEncoding;\n(function (FeatureSet_MessageEncoding) {\n    /**\n     * @generated from enum value: MESSAGE_ENCODING_UNKNOWN = 0;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"MESSAGE_ENCODING_UNKNOWN\"] = 0] = \"MESSAGE_ENCODING_UNKNOWN\";\n    /**\n     * @generated from enum value: LENGTH_PREFIXED = 1;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"LENGTH_PREFIXED\"] = 1] = \"LENGTH_PREFIXED\";\n    /**\n     * @generated from enum value: DELIMITED = 2;\n     */\n    FeatureSet_MessageEncoding[FeatureSet_MessageEncoding[\"DELIMITED\"] = 2] = \"DELIMITED\";\n})(FeatureSet_MessageEncoding || (FeatureSet_MessageEncoding = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_MessageEncoding)\nproto2.util.setEnumType(FeatureSet_MessageEncoding, \"google.protobuf.FeatureSet.MessageEncoding\", [\n    { no: 0, name: \"MESSAGE_ENCODING_UNKNOWN\" },\n    { no: 1, name: \"LENGTH_PREFIXED\" },\n    { no: 2, name: \"DELIMITED\" },\n]);\n/**\n * @generated from enum google.protobuf.FeatureSet.JsonFormat\n */\nexport var FeatureSet_JsonFormat;\n(function (FeatureSet_JsonFormat) {\n    /**\n     * @generated from enum value: JSON_FORMAT_UNKNOWN = 0;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"JSON_FORMAT_UNKNOWN\"] = 0] = \"JSON_FORMAT_UNKNOWN\";\n    /**\n     * @generated from enum value: ALLOW = 1;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"ALLOW\"] = 1] = \"ALLOW\";\n    /**\n     * @generated from enum value: LEGACY_BEST_EFFORT = 2;\n     */\n    FeatureSet_JsonFormat[FeatureSet_JsonFormat[\"LEGACY_BEST_EFFORT\"] = 2] = \"LEGACY_BEST_EFFORT\";\n})(FeatureSet_JsonFormat || (FeatureSet_JsonFormat = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FeatureSet_JsonFormat)\nproto2.util.setEnumType(FeatureSet_JsonFormat, \"google.protobuf.FeatureSet.JsonFormat\", [\n    { no: 0, name: \"JSON_FORMAT_UNKNOWN\" },\n    { no: 1, name: \"ALLOW\" },\n    { no: 2, name: \"LEGACY_BEST_EFFORT\" },\n]);\n/**\n * A compiled specification for the defaults of a set of features.  These\n * messages are generated from FeatureSet extensions and can be used to seed\n * feature resolution. The resolution with this object becomes a simple search\n * for the closest matching edition, followed by proto merges.\n *\n * @generated from message google.protobuf.FeatureSetDefaults\n */\nexport class FeatureSetDefaults extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault defaults = 1;\n         */\n        this.defaults = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSetDefaults().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSetDefaults().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSetDefaults().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FeatureSetDefaults, a, b);\n    }\n}\nFeatureSetDefaults.runtime = proto2;\nFeatureSetDefaults.typeName = \"google.protobuf.FeatureSetDefaults\";\nFeatureSetDefaults.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"defaults\", kind: \"message\", T: FeatureSetDefaults_FeatureSetEditionDefault, repeated: true },\n    { no: 4, name: \"minimum_edition\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n    { no: 5, name: \"maximum_edition\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n]);\n/**\n * A map from every known edition with a unique set of defaults to its\n * defaults. Not all editions may be contained here.  For a given edition,\n * the defaults at the closest matching edition ordered at or before it should\n * be used.  This field must be in strict ascending order by edition.\n *\n * @generated from message google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\n */\nexport class FeatureSetDefaults_FeatureSetEditionDefault extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FeatureSetDefaults_FeatureSetEditionDefault().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(FeatureSetDefaults_FeatureSetEditionDefault, a, b);\n    }\n}\nFeatureSetDefaults_FeatureSetEditionDefault.runtime = proto2;\nFeatureSetDefaults_FeatureSetEditionDefault.typeName = \"google.protobuf.FeatureSetDefaults.FeatureSetEditionDefault\";\nFeatureSetDefaults_FeatureSetEditionDefault.fields = proto2.util.newFieldList(() => [\n    { no: 3, name: \"edition\", kind: \"enum\", T: proto2.getEnumType(Edition), opt: true },\n    { no: 4, name: \"overridable_features\", kind: \"message\", T: FeatureSet, opt: true },\n    { no: 5, name: \"fixed_features\", kind: \"message\", T: FeatureSet, opt: true },\n]);\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n *\n * @generated from message google.protobuf.SourceCodeInfo\n */\nexport class SourceCodeInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * A Location identifies a piece of source code in a .proto file which\n         * corresponds to a particular definition.  This information is intended\n         * to be useful to IDEs, code indexers, documentation generators, and similar\n         * tools.\n         *\n         * For example, say we have a file like:\n         *   message Foo {\n         *     optional string foo = 1;\n         *   }\n         * Let's look at just the field definition:\n         *   optional string foo = 1;\n         *   ^       ^^     ^^  ^  ^^^\n         *   a       bc     de  f  ghi\n         * We have the following locations:\n         *   span   path               represents\n         *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n         *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n         *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n         *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n         *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n         *\n         * Notes:\n         * - A location may refer to a repeated field itself (i.e. not to any\n         *   particular index within it).  This is used whenever a set of elements are\n         *   logically enclosed in a single code segment.  For example, an entire\n         *   extend block (possibly containing multiple extension definitions) will\n         *   have an outer location whose path refers to the \"extensions\" repeated\n         *   field without an index.\n         * - Multiple locations may have the same path.  This happens when a single\n         *   logical declaration is spread out across multiple places.  The most\n         *   obvious example is the \"extend\" block again -- there may be multiple\n         *   extend blocks in the same scope, each of which will have the same path.\n         * - A location's span is not always a subset of its parent's span.  For\n         *   example, the \"extendee\" of an extension declaration appears at the\n         *   beginning of the \"extend\" block and is shared by all extensions within\n         *   the block.\n         * - Just because a location's span is a subset of some other location's span\n         *   does not mean that it is a descendant.  For example, a \"group\" defines\n         *   both a type and a field in a single declaration.  Thus, the locations\n         *   corresponding to the type and field and their components will overlap.\n         * - Code which tries to interpret locations should probably be designed to\n         *   ignore those that it doesn't understand, as more types of locations could\n         *   be recorded in the future.\n         *\n         * @generated from field: repeated google.protobuf.SourceCodeInfo.Location location = 1;\n         */\n        this.location = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(SourceCodeInfo, a, b);\n    }\n}\nSourceCodeInfo.runtime = proto2;\nSourceCodeInfo.typeName = \"google.protobuf.SourceCodeInfo\";\nSourceCodeInfo.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"location\", kind: \"message\", T: SourceCodeInfo_Location, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.SourceCodeInfo.Location\n */\nexport class SourceCodeInfo_Location extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies which part of the FileDescriptorProto was defined at this\n         * location.\n         *\n         * Each element is a field number or an index.  They form a path from\n         * the root FileDescriptorProto to the place where the definition appears.\n         * For example, this path:\n         *   [ 4, 3, 2, 7, 1 ]\n         * refers to:\n         *   file.message_type(3)  // 4, 3\n         *       .field(7)         // 2, 7\n         *       .name()           // 1\n         * This is because FileDescriptorProto.message_type has field number 4:\n         *   repeated DescriptorProto message_type = 4;\n         * and DescriptorProto.field has field number 2:\n         *   repeated FieldDescriptorProto field = 2;\n         * and FieldDescriptorProto.name has field number 1:\n         *   optional string name = 1;\n         *\n         * Thus, the above path gives the location of a field name.  If we removed\n         * the last element:\n         *   [ 4, 3, 2, 7 ]\n         * this path refers to the whole field declaration (from the beginning\n         * of the label to the terminating semicolon).\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        /**\n         * Always has exactly three or four elements: start line, start column,\n         * end line (optional, otherwise assumed same as start line), end column.\n         * These are packed into a single field for efficiency.  Note that line\n         * and column numbers are zero-based -- typically you will want to add\n         * 1 to each before displaying to a user.\n         *\n         * @generated from field: repeated int32 span = 2 [packed = true];\n         */\n        this.span = [];\n        /**\n         * @generated from field: repeated string leading_detached_comments = 6;\n         */\n        this.leadingDetachedComments = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo_Location().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo_Location().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo_Location().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(SourceCodeInfo_Location, a, b);\n    }\n}\nSourceCodeInfo_Location.runtime = proto2;\nSourceCodeInfo_Location.typeName = \"google.protobuf.SourceCodeInfo.Location\";\nSourceCodeInfo_Location.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"span\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 3, name: \"leading_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"trailing_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"leading_detached_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n *\n * @generated from message google.protobuf.GeneratedCodeInfo\n */\nexport class GeneratedCodeInfo extends Message {\n    constructor(data) {\n        super();\n        /**\n         * An Annotation connects some span of text in generated code to an element\n         * of its generating .proto file.\n         *\n         * @generated from field: repeated google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;\n         */\n        this.annotation = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(GeneratedCodeInfo, a, b);\n    }\n}\nGeneratedCodeInfo.runtime = proto2;\nGeneratedCodeInfo.typeName = \"google.protobuf.GeneratedCodeInfo\";\nGeneratedCodeInfo.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"annotation\", kind: \"message\", T: GeneratedCodeInfo_Annotation, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.GeneratedCodeInfo.Annotation\n */\nexport class GeneratedCodeInfo_Annotation extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies the element in the original source .proto file. This field\n         * is formatted the same as SourceCodeInfo.Location.path.\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo_Annotation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo_Annotation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo_Annotation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(GeneratedCodeInfo_Annotation, a, b);\n    }\n}\nGeneratedCodeInfo_Annotation.runtime = proto2;\nGeneratedCodeInfo_Annotation.typeName = \"google.protobuf.GeneratedCodeInfo.Annotation\";\nGeneratedCodeInfo_Annotation.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"source_file\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"begin\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 5, name: \"semantic\", kind: \"enum\", T: proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic), opt: true },\n]);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */\nexport var GeneratedCodeInfo_Annotation_Semantic;\n(function (GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})(GeneratedCodeInfo_Annotation_Semantic || (GeneratedCodeInfo_Annotation_Semantic = {}));\n// Retrieve enum metadata with: proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic)\nproto2.util.setEnumType(GeneratedCodeInfo_Annotation_Semantic, \"google.protobuf.GeneratedCodeInfo.Annotation.Semantic\", [\n    { no: 0, name: \"NONE\" },\n    { no: 1, name: \"SET\" },\n    { no: 2, name: \"ALIAS\" },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Edition, FeatureSet_RepeatedFieldEncoding, FeatureSetDefaults, FieldDescriptorProto_Label, FieldDescriptorProto_Type, FieldOptions_JSType, FileDescriptorProto, FileDescriptorSet, MethodDescriptorProto, MethodOptions_IdempotencyLevel, ServiceDescriptorProto, SourceCodeInfo, } from \"./google/protobuf/descriptor_pb.js\";\nimport { assert } from \"./private/assert.js\";\nimport { MethodIdempotency, MethodKind } from \"./service-type.js\";\nimport { fieldJsonName, findEnumSharedPrefix } from \"./private/names.js\";\nimport { parseTextFormatEnumValue, parseTextFormatScalarValue, } from \"./private/text-format.js\";\nimport { createFeatureResolver } from \"./private/feature-set.js\";\nimport { LongType, ScalarType } from \"./scalar.js\";\nimport { isMessage } from \"./is-message.js\";\n/**\n * Create a DescriptorSet, a convenient interface for working with a set of\n * google.protobuf.FileDescriptorProto.\n *\n * Note that files must be given in topological order, so each file appears\n * before any file that imports it. Protocol buffer compilers always produce\n * files in topological order.\n */\nexport function createDescriptorSet(input, options) {\n    var _a;\n    const cart = {\n        files: [],\n        enums: new Map(),\n        messages: new Map(),\n        services: new Map(),\n        extensions: new Map(),\n        mapEntries: new Map(),\n    };\n    const fileDescriptors = isMessage(input, FileDescriptorSet)\n        ? input.file\n        : input instanceof Uint8Array\n            ? FileDescriptorSet.fromBinary(input).file\n            : input;\n    const resolverByEdition = new Map();\n    for (const proto of fileDescriptors) {\n        const edition = (_a = proto.edition) !== null && _a !== void 0 ? _a : parseFileSyntax(proto.syntax, proto.edition).edition;\n        let resolveFeatures = resolverByEdition.get(edition);\n        if (resolveFeatures === undefined) {\n            resolveFeatures = createFeatureResolver(edition, options === null || options === void 0 ? void 0 : options.featureSetDefaults, options === null || options === void 0 ? void 0 : options.serializationOptions);\n            resolverByEdition.set(edition, resolveFeatures);\n        }\n        addFile(proto, cart, resolveFeatures);\n    }\n    return cart;\n}\n/**\n * Create a descriptor for a file.\n */\nfunction addFile(proto, cart, resolveFeatures) {\n    var _a, _b;\n    assert(proto.name, `invalid FileDescriptorProto: missing name`);\n    const file = Object.assign(Object.assign({ kind: \"file\", proto, deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false }, parseFileSyntax(proto.syntax, proto.edition)), { name: proto.name.replace(/\\.proto/, \"\"), dependencies: findFileDependencies(proto, cart), enums: [], messages: [], extensions: [], services: [], toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${this.proto.name}`;\n        },\n        getSyntaxComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Syntax,\n            ]);\n        },\n        getPackageComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Package,\n            ]);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures((_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        } });\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, undefined, cart, resolveFeatures);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto, file, undefined, cart, resolveFeatures);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto, file, cart, resolveFeatures);\n    }\n    addExtensions(file, cart, resolveFeatures);\n    for (const mapEntry of cart.mapEntries.values()) {\n        addFields(mapEntry, cart, resolveFeatures);\n    }\n    for (const message of file.messages) {\n        addFields(message, cart, resolveFeatures);\n        addExtensions(message, cart, resolveFeatures);\n    }\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    cart.files.push(file);\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc, cart, resolveFeatures) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc, undefined, cart, resolveFeatures);\n                desc.extensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc.file, desc, cart, resolveFeatures);\n                desc.nestedExtensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message, cart, resolveFeatures);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message, cart, resolveFeatures) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto, message, resolveFeatures));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto, allOneofs);\n        const field = newField(proto, message.file, message, oneof, cart, resolveFeatures);\n        message.fields.push(field);\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child, cart, resolveFeatures);\n    }\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */\nfunction addEnum(proto, file, parent, cart, resolveFeatures) {\n    var _a, _b, _c;\n    assert(proto.name, `invalid EnumDescriptorProto: missing name`);\n    const desc = {\n        kind: \"enum\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        values: [],\n        sharedPrefix: findEnumSharedPrefix(proto.name, proto.value.map((v) => { var _a; return (_a = v.name) !== null && _a !== void 0 ? _a : \"\"; })),\n        toString() {\n            return `enum ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_EnumType,\n                    this.parent.proto.enumType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_EnumType,\n                    this.file.proto.enumType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a, _b;\n            return resolveFeatures((_a = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _a !== void 0 ? _a : file.getFeatures(), (_b = proto.options) === null || _b === void 0 ? void 0 : _b.features);\n        },\n    };\n    cart.enums.set(desc.typeName, desc);\n    proto.value.forEach((proto) => {\n        var _a, _b;\n        assert(proto.name, `invalid EnumValueDescriptorProto: missing name`);\n        assert(proto.number !== undefined, `invalid EnumValueDescriptorProto: missing number`);\n        desc.values.push({\n            kind: \"enum_value\",\n            proto,\n            deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n            parent: desc,\n            name: proto.name,\n            number: proto.number,\n            toString() {\n                return `enum value ${desc.typeName}.${this.name}`;\n            },\n            declarationString() {\n                var _a;\n                let str = `${this.name} = ${this.number}`;\n                if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) === true) {\n                    str += \" [deprecated = true]\";\n                }\n                return str;\n            },\n            getComments() {\n                const path = [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.EnumDescriptorProto_Value,\n                    this.parent.proto.value.indexOf(this.proto),\n                ];\n                return findComments(file.proto.sourceCodeInfo, path);\n            },\n            getFeatures() {\n                var _a;\n                return resolveFeatures(desc.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n            },\n        });\n    });\n    ((_c = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _c !== void 0 ? _c : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto, file, parent, cart, resolveFeatures) {\n    var _a, _b, _c, _d;\n    assert(proto.name, `invalid DescriptorProto: missing name`);\n    const desc = {\n        kind: \"message\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        fields: [],\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString() {\n            return `message ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_NestedType,\n                    this.parent.proto.nestedType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_MessageType,\n                    this.file.proto.messageType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a, _b;\n            return resolveFeatures((_a = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _a !== void 0 ? _a : file.getFeatures(), (_b = proto.options) === null || _b === void 0 ? void 0 : _b.features);\n        },\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        cart.mapEntries.set(desc.typeName, desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        cart.messages.set(desc.typeName, desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, desc, cart, resolveFeatures);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto, file, desc, cart, resolveFeatures);\n    }\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */\nfunction addService(proto, file, cart, resolveFeatures) {\n    var _a, _b;\n    assert(proto.name, `invalid ServiceDescriptorProto: missing name`);\n    const desc = {\n        kind: \"service\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        name: proto.name,\n        typeName: makeTypeName(proto, undefined, file),\n        methods: [],\n        toString() {\n            return `service ${this.typeName}`;\n        },\n        getComments() {\n            const path = [\n                FieldNumber.FileDescriptorProto_Service,\n                this.file.proto.service.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(file.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n    file.services.push(desc);\n    cart.services.set(desc.typeName, desc);\n    for (const methodProto of proto.method) {\n        desc.methods.push(newMethod(methodProto, desc, cart, resolveFeatures));\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto, parent, cart, resolveFeatures) {\n    var _a, _b, _c;\n    assert(proto.name, `invalid MethodDescriptorProto: missing name`);\n    assert(proto.inputType, `invalid MethodDescriptorProto: missing input_type`);\n    assert(proto.outputType, `invalid MethodDescriptorProto: missing output_type`);\n    let methodKind;\n    if (proto.clientStreaming === true && proto.serverStreaming === true) {\n        methodKind = MethodKind.BiDiStreaming;\n    }\n    else if (proto.clientStreaming === true) {\n        methodKind = MethodKind.ClientStreaming;\n    }\n    else if (proto.serverStreaming === true) {\n        methodKind = MethodKind.ServerStreaming;\n    }\n    else {\n        methodKind = MethodKind.Unary;\n    }\n    let idempotency;\n    switch ((_a = proto.options) === null || _a === void 0 ? void 0 : _a.idempotencyLevel) {\n        case MethodOptions_IdempotencyLevel.IDEMPOTENT:\n            idempotency = MethodIdempotency.Idempotent;\n            break;\n        case MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:\n            idempotency = MethodIdempotency.NoSideEffects;\n            break;\n        case MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:\n        case undefined:\n            idempotency = undefined;\n            break;\n    }\n    const input = cart.messages.get(trimLeadingDot(proto.inputType));\n    const output = cart.messages.get(trimLeadingDot(proto.outputType));\n    assert(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    assert(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        parent,\n        name,\n        methodKind,\n        input,\n        output,\n        idempotency,\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.ServiceDescriptorProto_Method,\n                this.parent.proto.method.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto, parent, resolveFeatures) {\n    assert(proto.name, `invalid OneofDescriptorProto: missing name`);\n    return {\n        kind: \"oneof\",\n        proto,\n        deprecated: false,\n        parent,\n        fields: [],\n        name: proto.name,\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_OneofDecl,\n                this.parent.proto.oneofDecl.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n}\n/**\n * Create a descriptor for a field.\n */\nfunction newField(proto, file, parent, oneof, cart, resolveFeatures) {\n    var _a, _b, _c;\n    assert(proto.name, `invalid FieldDescriptorProto: missing name`);\n    assert(proto.number, `invalid FieldDescriptorProto: missing number`);\n    assert(proto.type, `invalid FieldDescriptorProto: missing type`);\n    const common = {\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        parent,\n        oneof,\n        optional: isOptionalField(proto, file.syntax),\n        packedByDefault: isPackedFieldByDefault(proto, resolveFeatures),\n        packed: isPackedField(file, parent, proto, resolveFeatures),\n        jsonName: proto.jsonName === fieldJsonName(proto.name) ? undefined : proto.jsonName,\n        scalar: undefined,\n        longType: undefined,\n        message: undefined,\n        enum: undefined,\n        mapKey: undefined,\n        mapValue: undefined,\n        declarationString,\n        // toString, getComments, getFeatures are overridden in newExtension\n        toString() {\n            return `field ${this.parent.typeName}.${this.name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_Field,\n                this.parent.proto.field.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures(parent.getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        },\n    };\n    const repeated = proto.label === FieldDescriptorProto_Label.REPEATED;\n    switch (proto.type) {\n        case FieldDescriptorProto_Type.MESSAGE:\n        case FieldDescriptorProto_Type.GROUP: {\n            assert(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const mapEntry = cart.mapEntries.get(trimLeadingDot(proto.typeName));\n            if (mapEntry !== undefined) {\n                assert(repeated, `invalid FieldDescriptorProto: expected map entry to be repeated`);\n                return Object.assign(Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"map\", repeated: false }), getMapFieldTypes(mapEntry));\n            }\n            const message = cart.messages.get(trimLeadingDot(proto.typeName));\n            assert(message !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"message\", repeated,\n                message });\n        }\n        case FieldDescriptorProto_Type.ENUM: {\n            assert(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const e = cart.enums.get(trimLeadingDot(proto.typeName));\n            assert(e !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"enum\", getDefaultValue,\n                repeated, enum: e });\n        }\n        default: {\n            const scalar = fieldTypeToScalarType[proto.type];\n            assert(scalar, `invalid FieldDescriptorProto: unknown type ${proto.type}`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"scalar\", getDefaultValue,\n                repeated,\n                scalar, longType: ((_c = proto.options) === null || _c === void 0 ? void 0 : _c.jstype) == FieldOptions_JSType.JS_STRING\n                    ? LongType.STRING\n                    : LongType.BIGINT });\n        }\n    }\n}\n/**\n * Create a descriptor for an extension field.\n */\nfunction newExtension(proto, file, parent, cart, resolveFeatures) {\n    assert(proto.extendee, `invalid FieldDescriptorProto: missing extendee`);\n    const field = newField(proto, file, null, // to safe us many lines of duplicated code, we trick the type system\n    undefined, cart, resolveFeatures);\n    const extendee = cart.messages.get(trimLeadingDot(proto.extendee));\n    assert(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n    return Object.assign(Object.assign({}, field), { kind: \"extension\", typeName: makeTypeName(proto, parent, file), parent,\n        file,\n        extendee,\n        // Must override toString, getComments, getFeatures from newField, because we\n        // call newField with parent undefined.\n        toString() {\n            return `extension ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_Extension,\n                    this.parent.proto.extension.indexOf(proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_Extension,\n                    this.file.proto.extension.indexOf(proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n        getFeatures() {\n            var _a;\n            return resolveFeatures((parent !== null && parent !== void 0 ? parent : file).getFeatures(), (_a = proto.options) === null || _a === void 0 ? void 0 : _a.features);\n        } });\n}\n/**\n * Parse the \"syntax\" and \"edition\" fields, stripping test editions.\n */\nfunction parseFileSyntax(syntax, edition) {\n    let e;\n    let s;\n    switch (syntax) {\n        case undefined:\n        case \"proto2\":\n            s = \"proto2\";\n            e = Edition.EDITION_PROTO2;\n            break;\n        case \"proto3\":\n            s = \"proto3\";\n            e = Edition.EDITION_PROTO3;\n            break;\n        case \"editions\":\n            s = \"editions\";\n            switch (edition) {\n                case undefined:\n                case Edition.EDITION_1_TEST_ONLY:\n                case Edition.EDITION_2_TEST_ONLY:\n                case Edition.EDITION_99997_TEST_ONLY:\n                case Edition.EDITION_99998_TEST_ONLY:\n                case Edition.EDITION_99999_TEST_ONLY:\n                case Edition.EDITION_UNKNOWN:\n                    e = Edition.EDITION_UNKNOWN;\n                    break;\n                default:\n                    e = edition;\n                    break;\n            }\n            break;\n        default:\n            throw new Error(`invalid FileDescriptorProto: unsupported syntax: ${syntax}`);\n    }\n    if (syntax === \"editions\" && edition === Edition.EDITION_UNKNOWN) {\n        throw new Error(`invalid FileDescriptorProto: syntax ${syntax} cannot have edition ${String(edition)}`);\n    }\n    return {\n        syntax: s,\n        edition: e,\n    };\n}\n/**\n * Resolve dependencies of FileDescriptorProto to DescFile.\n */\nfunction findFileDependencies(proto, cart) {\n    return proto.dependency.map((wantName) => {\n        const dep = cart.files.find((f) => f.proto.name === wantName);\n        assert(dep);\n        return dep;\n    });\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto, parent, file) {\n    assert(proto.name, `invalid ${proto.getType().typeName}: missing name`);\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package !== undefined) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\nfunction getMapFieldTypes(mapEntry) {\n    var _a, _b;\n    assert((_a = mapEntry.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry, `invalid DescriptorProto: expected ${mapEntry.toString()} to be a map entry`);\n    assert(mapEntry.fields.length === 2, `invalid DescriptorProto: map entry ${mapEntry.toString()} has ${mapEntry.fields.length} fields`);\n    const keyField = mapEntry.fields.find((f) => f.proto.number === 1);\n    assert(keyField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing key field`);\n    const mapKey = keyField.scalar;\n    assert(mapKey !== undefined &&\n        mapKey !== ScalarType.BYTES &&\n        mapKey !== ScalarType.FLOAT &&\n        mapKey !== ScalarType.DOUBLE, `invalid DescriptorProto: map entry ${mapEntry.toString()} has unexpected key type ${(_b = keyField.proto.type) !== null && _b !== void 0 ? _b : -1}`);\n    const valueField = mapEntry.fields.find((f) => f.proto.number === 2);\n    assert(valueField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing value field`);\n    switch (valueField.fieldKind) {\n        case \"scalar\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"scalar\" }),\n            };\n        case \"message\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"message\" }),\n            };\n        case \"enum\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"enum\" }),\n            };\n        default:\n            throw new Error(\"invalid DescriptorProto: unsupported map entry value field\");\n    }\n}\n/**\n * Did the user put the field in a oneof group?\n * This handles proto3 optionals.\n */\nfunction findOneof(proto, allOneofs) {\n    var _a;\n    const oneofIndex = proto.oneofIndex;\n    if (oneofIndex === undefined) {\n        return undefined;\n    }\n    let oneof;\n    if (proto.proto3Optional !== true) {\n        oneof = allOneofs[oneofIndex];\n        assert(oneof, `invalid FieldDescriptorProto: oneof #${oneofIndex} for field #${(_a = proto.number) !== null && _a !== void 0 ? _a : -1} not found`);\n    }\n    return oneof;\n}\n/**\n * Did the user use the `optional` keyword?\n * This handles proto3 optionals.\n */\nfunction isOptionalField(proto, syntax) {\n    switch (syntax) {\n        case \"proto2\":\n            return (proto.oneofIndex === undefined &&\n                proto.label === FieldDescriptorProto_Label.OPTIONAL);\n        case \"proto3\":\n            return proto.proto3Optional === true;\n        case \"editions\":\n            return false;\n    }\n}\n/**\n * Is this field packed by default? Only valid for repeated enum fields, and\n * for repeated scalar fields except BYTES and STRING.\n *\n * In proto3 syntax, fields are packed by default. In proto2 syntax, fields\n * are unpacked by default. With editions, the default is whatever the edition\n * specifies as a default. In edition 2023, fields are packed by default.\n */\nfunction isPackedFieldByDefault(proto, resolveFeatures) {\n    const { repeatedFieldEncoding } = resolveFeatures();\n    if (repeatedFieldEncoding != FeatureSet_RepeatedFieldEncoding.PACKED) {\n        return false;\n    }\n    // From the proto3 language guide:\n    // > In proto3, repeated fields of scalar numeric types are packed by default.\n    // This information is incomplete - according to the conformance tests, BOOL\n    // and ENUM are packed by default as well. This means only STRING and BYTES\n    // are not packed by default, which makes sense because they are length-delimited.\n    switch (proto.type) {\n        case FieldDescriptorProto_Type.STRING:\n        case FieldDescriptorProto_Type.BYTES:\n        case FieldDescriptorProto_Type.GROUP:\n        case FieldDescriptorProto_Type.MESSAGE:\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Pack this repeated field?\n *\n * Respects field type, proto2/proto3 defaults and the `packed` option, or\n * edition defaults and the edition features.repeated_field_encoding options.\n */\nfunction isPackedField(file, parent, proto, resolveFeatures) {\n    var _a, _b, _c, _d, _e, _f;\n    switch (proto.type) {\n        case FieldDescriptorProto_Type.STRING:\n        case FieldDescriptorProto_Type.BYTES:\n        case FieldDescriptorProto_Type.GROUP:\n        case FieldDescriptorProto_Type.MESSAGE:\n            // length-delimited types cannot be packed\n            return false;\n        default:\n            switch (file.edition) {\n                case Edition.EDITION_PROTO2:\n                    return (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== null && _b !== void 0 ? _b : false;\n                case Edition.EDITION_PROTO3:\n                    return (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.packed) !== null && _d !== void 0 ? _d : true;\n                default: {\n                    const { repeatedFieldEncoding } = resolveFeatures((_e = parent === null || parent === void 0 ? void 0 : parent.getFeatures()) !== null && _e !== void 0 ? _e : file.getFeatures(), (_f = proto.options) === null || _f === void 0 ? void 0 : _f.features);\n                    return (repeatedFieldEncoding == FeatureSet_RepeatedFieldEncoding.PACKED);\n                }\n            }\n    }\n}\n/**\n * Map from a compiler-generated field type to our ScalarType, which is a\n * subset of field types declared by protobuf enum google.protobuf.FieldDescriptorProto.\n */\nconst fieldTypeToScalarType = {\n    [FieldDescriptorProto_Type.DOUBLE]: ScalarType.DOUBLE,\n    [FieldDescriptorProto_Type.FLOAT]: ScalarType.FLOAT,\n    [FieldDescriptorProto_Type.INT64]: ScalarType.INT64,\n    [FieldDescriptorProto_Type.UINT64]: ScalarType.UINT64,\n    [FieldDescriptorProto_Type.INT32]: ScalarType.INT32,\n    [FieldDescriptorProto_Type.FIXED64]: ScalarType.FIXED64,\n    [FieldDescriptorProto_Type.FIXED32]: ScalarType.FIXED32,\n    [FieldDescriptorProto_Type.BOOL]: ScalarType.BOOL,\n    [FieldDescriptorProto_Type.STRING]: ScalarType.STRING,\n    [FieldDescriptorProto_Type.GROUP]: undefined,\n    [FieldDescriptorProto_Type.MESSAGE]: undefined,\n    [FieldDescriptorProto_Type.BYTES]: ScalarType.BYTES,\n    [FieldDescriptorProto_Type.UINT32]: ScalarType.UINT32,\n    [FieldDescriptorProto_Type.ENUM]: undefined,\n    [FieldDescriptorProto_Type.SFIXED32]: ScalarType.SFIXED32,\n    [FieldDescriptorProto_Type.SFIXED64]: ScalarType.SFIXED64,\n    [FieldDescriptorProto_Type.SINT32]: ScalarType.SINT32,\n    [FieldDescriptorProto_Type.SINT64]: ScalarType.SINT64,\n};\n/**\n * Find comments.\n */\nfunction findComments(sourceCodeInfo, sourcePath) {\n    if (!sourceCodeInfo) {\n        return {\n            leadingDetached: [],\n            sourcePath,\n        };\n    }\n    for (const location of sourceCodeInfo.location) {\n        if (location.path.length !== sourcePath.length) {\n            continue;\n        }\n        if (location.path.some((value, index) => sourcePath[index] !== value)) {\n            continue;\n        }\n        return {\n            leadingDetached: location.leadingDetachedComments,\n            leading: location.leadingComments,\n            trailing: location.trailingComments,\n            sourcePath,\n        };\n    }\n    return {\n        leadingDetached: [],\n        sourcePath,\n    };\n}\n/**\n * The following field numbers are used to find comments in\n * google.protobuf.SourceCodeInfo.\n */\nvar FieldNumber;\n(function (FieldNumber) {\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Package\"] = 2] = \"FileDescriptorProto_Package\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_MessageType\"] = 4] = \"FileDescriptorProto_MessageType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_EnumType\"] = 5] = \"FileDescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Service\"] = 6] = \"FileDescriptorProto_Service\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Extension\"] = 7] = \"FileDescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Syntax\"] = 12] = \"FileDescriptorProto_Syntax\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Field\"] = 2] = \"DescriptorProto_Field\";\n    FieldNumber[FieldNumber[\"DescriptorProto_NestedType\"] = 3] = \"DescriptorProto_NestedType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_EnumType\"] = 4] = \"DescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Extension\"] = 6] = \"DescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"DescriptorProto_OneofDecl\"] = 8] = \"DescriptorProto_OneofDecl\";\n    FieldNumber[FieldNumber[\"EnumDescriptorProto_Value\"] = 2] = \"EnumDescriptorProto_Value\";\n    FieldNumber[FieldNumber[\"ServiceDescriptorProto_Method\"] = 2] = \"ServiceDescriptorProto_Method\";\n})(FieldNumber || (FieldNumber = {}));\n/**\n * Return a string that matches the definition of a field in the protobuf\n * source. Does not take custom options into account.\n */\nfunction declarationString() {\n    var _a, _b, _c;\n    const parts = [];\n    if (this.repeated) {\n        parts.push(\"repeated\");\n    }\n    if (this.optional) {\n        parts.push(\"optional\");\n    }\n    const file = this.kind === \"extension\" ? this.file : this.parent.file;\n    if (file.syntax == \"proto2\" &&\n        this.proto.label === FieldDescriptorProto_Label.REQUIRED) {\n        parts.push(\"required\");\n    }\n    let type;\n    switch (this.fieldKind) {\n        case \"scalar\":\n            type = ScalarType[this.scalar].toLowerCase();\n            break;\n        case \"enum\":\n            type = this.enum.typeName;\n            break;\n        case \"message\":\n            type = this.message.typeName;\n            break;\n        case \"map\": {\n            const k = ScalarType[this.mapKey].toLowerCase();\n            let v;\n            switch (this.mapValue.kind) {\n                case \"scalar\":\n                    v = ScalarType[this.mapValue.scalar].toLowerCase();\n                    break;\n                case \"enum\":\n                    v = this.mapValue.enum.typeName;\n                    break;\n                case \"message\":\n                    v = this.mapValue.message.typeName;\n                    break;\n            }\n            type = `map<${k}, ${v}>`;\n            break;\n        }\n    }\n    parts.push(`${type} ${this.name} = ${this.number}`);\n    const options = [];\n    if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== undefined) {\n        options.push(`packed = ${this.proto.options.packed.toString()}`);\n    }\n    let defaultValue = this.proto.defaultValue;\n    if (defaultValue !== undefined) {\n        if (this.proto.type == FieldDescriptorProto_Type.BYTES ||\n            this.proto.type == FieldDescriptorProto_Type.STRING) {\n            defaultValue = '\"' + defaultValue.replace('\"', '\\\\\"') + '\"';\n        }\n        options.push(`default = ${defaultValue}`);\n    }\n    if (this.jsonName !== undefined) {\n        options.push(`json_name = \"${this.jsonName}\"`);\n    }\n    if (((_b = this.proto.options) === null || _b === void 0 ? void 0 : _b.jstype) !== undefined) {\n        options.push(`jstype = ${FieldOptions_JSType[this.proto.options.jstype]}`);\n    }\n    if (((_c = this.proto.options) === null || _c === void 0 ? void 0 : _c.deprecated) === true) {\n        options.push(`deprecated = true`);\n    }\n    if (options.length > 0) {\n        parts.push(\"[\" + options.join(\", \") + \"]\");\n    }\n    return parts.join(\" \");\n}\n/**\n * Parses a text-encoded default value (proto2) of a scalar or enum field.\n */\nfunction getDefaultValue() {\n    const d = this.proto.defaultValue;\n    if (d === undefined) {\n        return undefined;\n    }\n    switch (this.fieldKind) {\n        case \"enum\":\n            return parseTextFormatEnumValue(this.enum, d);\n        case \"scalar\":\n            return parseTextFormatScalarValue(this.scalar, d);\n        default:\n            return undefined;\n    }\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n *\n *\n * @generated from message google.protobuf.Duration\n */\nexport class Duration extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Signed seconds of the span of time. Must be from -315,576,000,000\n         * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n         * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Signed fractions of a second at nanosecond resolution of the span\n         * of time. Durations less than one second are represented with a 0\n         * `seconds` field and a positive or negative `nanos` field. For durations\n         * of one second or more, a non-zero value for the `nanos` field must be\n         * of the same sign as the `seconds` field. Must be from -999,999,999\n         * to +999,999,999 inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n        if (match === null) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        const longSeconds = Number(match[1]);\n        if (longSeconds > 315576000000 || longSeconds < -315576000000) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3.json.debug(json)}`);\n        }\n        this.seconds = protoInt64.parse(longSeconds);\n        if (typeof match[2] == \"string\") {\n            const nanosStr = match[2] + \"0\".repeat(9 - match[2].length);\n            this.nanos = parseInt(nanosStr);\n            if (longSeconds < 0 || Object.is(longSeconds, -0)) {\n                this.nanos = -this.nanos;\n            }\n        }\n        return this;\n    }\n    toJson(options) {\n        if (Number(this.seconds) > 315576000000 || Number(this.seconds) < -315576000000) {\n            throw new Error(`cannot encode google.protobuf.Duration to JSON: value out of range`);\n        }\n        let text = this.seconds.toString();\n        if (this.nanos !== 0) {\n            let nanosStr = Math.abs(this.nanos).toString();\n            nanosStr = \"0\".repeat(9 - nanosStr.length) + nanosStr;\n            if (nanosStr.substring(3) === \"000000\") {\n                nanosStr = nanosStr.substring(0, 3);\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                nanosStr = nanosStr.substring(0, 6);\n            }\n            text += \".\" + nanosStr;\n            if (this.nanos < 0 && Number(this.seconds) == 0) {\n                text = \"-\" + text;\n            }\n        }\n        return text + \"s\";\n    }\n    static fromBinary(bytes, options) {\n        return new Duration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Duration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Duration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Duration, a, b);\n    }\n}\nDuration.runtime = proto3;\nDuration.typeName = \"google.protobuf.Duration\";\nDuration.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *     // or ...\n *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n *       foo = any.unpack(Foo.getDefaultInstance());\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */\nexport class Any extends Message {\n    constructor(data) {\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one \"/\" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g., leading \".\" is not accepted).\n         *\n         * In practice, teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However, for URLs which use the\n         * scheme `http`, `https`, or no scheme, one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided, `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format, or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL, or have them precompiled into a binary to avoid any\n         *   lookup. Therefore, binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release, and it is not used for type URLs beginning with\n         * type.googleapis.com. As of May 2023, there are no widely used type server\n         * implementations and no plans to implement one.\n         *\n         * Schemes other than `http`, `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */\n        this.typeUrl = \"\";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === \"\") {\n            return {};\n        }\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n        }\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith(\"google.protobuf.\") || (json === null || Array.isArray(json) || typeof json !== \"object\")) {\n            json = { value: json };\n        }\n        json[\"@type\"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json, options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != \"object\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n        }\n        if (Object.keys(json).length == 0) {\n            return this;\n        }\n        const typeUrl = json[\"@type\"];\n        if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n        }\n        const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        }\n        let message;\n        if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) {\n            message = messageType.fromJson(json[\"value\"], options);\n        }\n        else {\n            const copy = Object.assign({}, json);\n            delete copy[\"@type\"];\n            message = messageType.fromJson(copy, options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) {\n            return false;\n        }\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === \"\") {\n            return undefined;\n        }\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) {\n            return undefined;\n        }\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === '') {\n            return false;\n        }\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = '';\n        if (typeof type === 'string') {\n            typeName = type;\n        }\n        else {\n            typeName = type.typeName;\n        }\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        const slash = url.lastIndexOf(\"/\");\n        const name = slash >= 0 ? url.substring(slash + 1) : url;\n        if (!name.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        return name;\n    }\n    static pack(message) {\n        const any = new Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes, options) {\n        return new Any().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Any().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Any().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Any, a, b);\n    }\n}\nAny.runtime = proto3;\nAny.typeName = \"google.protobuf.Any\";\nAny.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A generic empty message that you can re-use to avoid defining duplicated\n * empty messages in your APIs. A typical example is to use it as the request\n * or the response type of an API method. For instance:\n *\n *     service Foo {\n *       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *     }\n *\n *\n * @generated from message google.protobuf.Empty\n */\nexport class Empty extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Empty().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Empty().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Empty().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Empty, a, b);\n    }\n}\nEmpty.runtime = proto3;\nEmpty.typeName = \"google.protobuf.Empty\";\nEmpty.fields = proto3.util.newFieldList(() => []);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * `FieldMask` represents a set of symbolic field paths, for example:\n *\n *     paths: \"f.a\"\n *     paths: \"f.b.d\"\n *\n * Here `f` represents a field in some root message, `a` and `b`\n * fields in the message found in `f`, and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection, a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example, if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x,y and z\n * (their value will be set to the default, and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation, the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation, the\n * field mask applies directly to the response, but in case of a REST\n * list operation, the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method,\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case, the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values, the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation, new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation, then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example, given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: [\"f.b\", \"f.c\"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1, 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default, the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence, in order to reset all fields of a resource, provide a default\n * instance of the resource and set all fields in the mask, or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update, the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution, this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior, a specific service may require a client to always specify\n * a field mask, producing an error if not.\n *\n * As with get operations, the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case, the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON, a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example, consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: \"user.display_name\"\n *       paths: \"photo\"\n *     }\n *\n * In JSON, the same mask is represented as below:\n *\n *     {\n *       mask: \"user.displayName,photo\"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: \"name\"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: \"sub_message\"\n *     }\n *\n * Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths, and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */\nexport class FieldMask extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */\n        this.paths = [];\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for (let i = 0; i < snakeCase.length; i++) {\n                let c = snakeCase.charAt(i);\n                switch (c) {\n                    case '_':\n                        capNext = true;\n                        break;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join('');\n        }\n        return this.paths.map(p => {\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n                throw new Error(\"cannot encode google.protobuf.FieldMask to JSON: lowerCamelCase of path name \\\"\" + p + \"\\\" is irreversible\");\n            }\n            return protoCamelCase(p);\n        }).join(\",\");\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: \" + proto3.json.debug(json));\n        }\n        if (json === \"\") {\n            return this;\n        }\n        function camelToSnake(str) {\n            if (str.includes(\"_\")) {\n                throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase\");\n            }\n            const sc = str.replace(/[A-Z]/g, letter => \"_\" + letter.toLowerCase());\n            return (sc[0] === \"_\") ? sc.substring(1) : sc;\n        }\n        this.paths = json.split(\",\").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FieldMask().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldMask().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldMask().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(FieldMask, a, b);\n    }\n}\nFieldMask.runtime = proto3;\nFieldMask.typeName = \"google.protobuf.FieldMask\";\nFieldMask.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"paths\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v1.10.0 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/struct.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\nimport { proto3 } from \"../../proto3.js\";\nimport { Message } from \"../../message.js\";\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */\nexport var NullValue;\n(function (NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */\n    NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})(NullValue || (NullValue = {}));\n// Retrieve enum metadata with: proto3.getEnumType(NullValue)\nproto3.util.setEnumType(NullValue, \"google.protobuf.NullValue\", [\n    { no: 0, name: \"NULL_VALUE\" },\n]);\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from message google.protobuf.Struct\n */\nexport class Struct extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Unordered map of dynamically typed values.\n         *\n         * @generated from field: map<string, google.protobuf.Value> fields = 1;\n         */\n        this.fields = {};\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        const json = {};\n        for (const [k, v] of Object.entries(this.fields)) {\n            json[k] = v.toJson(options);\n        }\n        return json;\n    }\n    fromJson(json, options) {\n        if (typeof json != \"object\" || json == null || Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.Struct from JSON \" + proto3.json.debug(json));\n        }\n        for (const [k, v] of Object.entries(json)) {\n            this.fields[k] = Value.fromJson(v);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Struct().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Struct().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Struct().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Struct, a, b);\n    }\n}\nStruct.runtime = proto3;\nStruct.typeName = \"google.protobuf.Struct\";\nStruct.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"fields\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"message\", T: Value } },\n]);\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from message google.protobuf.Value\n */\nexport class Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The kind of value.\n         *\n         * @generated from oneof google.protobuf.Value.kind\n         */\n        this.kind = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        switch (this.kind.case) {\n            case \"nullValue\":\n                return null;\n            case \"numberValue\":\n                if (!Number.isFinite(this.kind.value)) {\n                    throw new Error(\"google.protobuf.Value cannot be NaN or Infinity\");\n                }\n                return this.kind.value;\n            case \"boolValue\":\n                return this.kind.value;\n            case \"stringValue\":\n                return this.kind.value;\n            case \"structValue\":\n            case \"listValue\":\n                return this.kind.value.toJson(Object.assign(Object.assign({}, options), { emitDefaultValues: true }));\n        }\n        throw new Error(\"google.protobuf.Value must have a value\");\n    }\n    fromJson(json, options) {\n        switch (typeof json) {\n            case \"number\":\n                this.kind = { case: \"numberValue\", value: json };\n                break;\n            case \"string\":\n                this.kind = { case: \"stringValue\", value: json };\n                break;\n            case \"boolean\":\n                this.kind = { case: \"boolValue\", value: json };\n                break;\n            case \"object\":\n                if (json === null) {\n                    this.kind = { case: \"nullValue\", value: NullValue.NULL_VALUE };\n                }\n                else if (Array.isArray(json)) {\n                    this.kind = { case: \"listValue\", value: ListValue.fromJson(json) };\n                }\n                else {\n                    this.kind = { case: \"structValue\", value: Struct.fromJson(json) };\n                }\n                break;\n            default:\n                throw new Error(\"cannot decode google.protobuf.Value from JSON \" + proto3.json.debug(json));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Value, a, b);\n    }\n}\nValue.runtime = proto3;\nValue.typeName = \"google.protobuf.Value\";\nValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"null_value\", kind: \"enum\", T: proto3.getEnumType(NullValue), oneof: \"kind\" },\n    { no: 2, name: \"number_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, oneof: \"kind\" },\n    { no: 3, name: \"string_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"kind\" },\n    { no: 4, name: \"bool_value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"kind\" },\n    { no: 5, name: \"struct_value\", kind: \"message\", T: Struct, oneof: \"kind\" },\n    { no: 6, name: \"list_value\", kind: \"message\", T: ListValue, oneof: \"kind\" },\n]);\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from message google.protobuf.ListValue\n */\nexport class ListValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Repeated field of dynamically typed values.\n         *\n         * @generated from field: repeated google.protobuf.Value values = 1;\n         */\n        this.values = [];\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return this.values.map(v => v.toJson());\n    }\n    fromJson(json, options) {\n        if (!Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.ListValue from JSON \" + proto3.json.debug(json));\n        }\n        for (let e of json) {\n            this.values.push(Value.fromJson(e));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new ListValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListValue, a, b);\n    }\n}\nListValue.runtime = proto3;\nListValue.typeName = \"google.protobuf.ListValue\";\nListValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"values\", kind: \"message\", T: Value, repeated: true },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\nimport { ScalarType } from \"../../scalar.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */\nexport class DoubleValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.DOUBLE, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.DOUBLE, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new DoubleValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DoubleValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DoubleValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DoubleValue, a, b);\n    }\n}\nDoubleValue.runtime = proto3;\nDoubleValue.typeName = \"google.protobuf.DoubleValue\";\nDoubleValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n]);\nDoubleValue.fieldWrapper = {\n    wrapField(value) {\n        return new DoubleValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */\nexport class FloatValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.FLOAT, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.FLOAT, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FloatValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FloatValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FloatValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(FloatValue, a, b);\n    }\n}\nFloatValue.runtime = proto3;\nFloatValue.typeName = \"google.protobuf.FloatValue\";\nFloatValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n]);\nFloatValue.fieldWrapper = {\n    wrapField(value) {\n        return new FloatValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */\nexport class Int64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Int64Value, a, b);\n    }\n}\nInt64Value.runtime = proto3;\nInt64Value.typeName = \"google.protobuf.Int64Value\";\nInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n]);\nInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */\nexport class UInt64Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */\n        this.value = protoInt64.zero;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UInt64Value, a, b);\n    }\n}\nUInt64Value.runtime = proto3;\nUInt64Value.typeName = \"google.protobuf.UInt64Value\";\nUInt64Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n]);\nUInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */\nexport class Int32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.INT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.INT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Int32Value, a, b);\n    }\n}\nInt32Value.runtime = proto3;\nInt32Value.typeName = \"google.protobuf.Int32Value\";\nInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\nInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */\nexport class UInt32Value extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */\n        this.value = 0;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.UINT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.UINT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UInt32Value, a, b);\n    }\n}\nUInt32Value.runtime = proto3;\nUInt32Value.typeName = \"google.protobuf.UInt32Value\";\nUInt32Value.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n]);\nUInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */\nexport class BoolValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */\n        this.value = false;\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BOOL, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BOOL, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BoolValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BoolValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BoolValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(BoolValue, a, b);\n    }\n}\nBoolValue.runtime = proto3;\nBoolValue.typeName = \"google.protobuf.BoolValue\";\nBoolValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\nBoolValue.fieldWrapper = {\n    wrapField(value) {\n        return new BoolValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */\nexport class StringValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */\n        this.value = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.STRING, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.STRING, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new StringValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new StringValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new StringValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(StringValue, a, b);\n    }\n}\nStringValue.runtime = proto3;\nStringValue.typeName = \"google.protobuf.StringValue\";\nStringValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\nStringValue.fieldWrapper = {\n    wrapField(value) {\n        return new StringValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */\nexport class BytesValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */\n        this.value = new Uint8Array(0);\n        proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3.json.writeScalar(ScalarType.BYTES, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3.json.readScalar(ScalarType.BYTES, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BytesValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BytesValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BytesValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(BytesValue, a, b);\n    }\n}\nBytesValue.runtime = proto3;\nBytesValue.typeName = \"google.protobuf.BytesValue\";\nBytesValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\nBytesValue.fieldWrapper = {\n    wrapField(value) {\n        return new BytesValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { proto3 } from \"./proto3.js\";\nimport { proto2 } from \"./proto2.js\";\nimport { ScalarType } from \"./scalar.js\";\nimport { localName } from \"./private/names.js\";\nimport { Timestamp } from \"./google/protobuf/timestamp_pb.js\";\nimport { Duration } from \"./google/protobuf/duration_pb.js\";\nimport { Any } from \"./google/protobuf/any_pb.js\";\nimport { Empty } from \"./google/protobuf/empty_pb.js\";\nimport { FieldMask } from \"./google/protobuf/field_mask_pb.js\";\nimport { ListValue, NullValue, Struct, Value, } from \"./google/protobuf/struct_pb.js\";\nimport { getEnumType } from \"./private/enum.js\";\nimport { BoolValue, BytesValue, DoubleValue, FloatValue, Int32Value, Int64Value, StringValue, UInt32Value, UInt64Value, } from \"./google/protobuf/wrappers_pb.js\";\nimport { FieldDescriptorProto_Label, FieldDescriptorProto_Type, FileDescriptorSet, } from \"./google/protobuf/descriptor_pb.js\";\nimport { createDescriptorSet } from \"./create-descriptor-set.js\";\nimport { isMessage } from \"./is-message.js\";\n// well-known message types with specialized JSON representation\nconst wkMessages = [\n    Any,\n    Duration,\n    Empty,\n    FieldMask,\n    Struct,\n    Value,\n    ListValue,\n    Timestamp,\n    Duration,\n    DoubleValue,\n    FloatValue,\n    Int64Value,\n    Int32Value,\n    UInt32Value,\n    UInt64Value,\n    BoolValue,\n    StringValue,\n    BytesValue,\n];\n// well-known enum types with specialized JSON representation\nconst wkEnums = [getEnumType(NullValue)];\n/**\n * Create a registry from a set of descriptors. The types returned by this\n * registry behave exactly like types from generated code.\n *\n * This function accepts google.protobuf.FileDescriptorSet in serialized or\n * deserialized form. Alternatively, it also accepts a DescriptorSet (see\n * createDescriptorSet()).\n *\n * By default, all well-known types with a specialized JSON representation\n * are replaced with their generated counterpart in this package.\n */\nexport function createRegistryFromDescriptors(input, replaceWkt = true) {\n    const set = input instanceof Uint8Array || isMessage(input, FileDescriptorSet)\n        ? createDescriptorSet(input)\n        : input;\n    const enums = new Map();\n    const messages = new Map();\n    const extensions = new Map();\n    const extensionsByExtendee = new Map();\n    const services = {};\n    if (replaceWkt) {\n        for (const mt of wkMessages) {\n            messages.set(mt.typeName, mt);\n        }\n        for (const et of wkEnums) {\n            enums.set(et.typeName, et);\n        }\n    }\n    return {\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findEnum(typeName) {\n            const existing = enums.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.enums.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? proto3 : proto2;\n            const type = runtime.makeEnumType(typeName, desc.values.map((u) => ({\n                no: u.number,\n                name: u.name,\n                localName: localName(u),\n            })), {});\n            enums.set(typeName, type);\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findMessage(typeName) {\n            const existing = messages.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.messages.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? proto3 : proto2;\n            const fields = [];\n            const type = runtime.makeMessageType(typeName, () => fields, {\n                localName: localName(desc),\n            });\n            messages.set(typeName, type);\n            for (const field of desc.fields) {\n                fields.push(makeFieldInfo(field, this));\n            }\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findService(typeName) {\n            const existing = services[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.services.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const methods = {};\n            for (const method of desc.methods) {\n                const I = resolve(method.input, this, method);\n                const O = resolve(method.output, this, method);\n                methods[localName(method)] = {\n                    name: method.name,\n                    I,\n                    O,\n                    kind: method.methodKind,\n                    idempotency: method.idempotency,\n                    // We do not surface options at this time\n                    // options: {},\n                };\n            }\n            return (services[typeName] = {\n                typeName: desc.typeName,\n                methods,\n            });\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findExtensionFor(typeName, no) {\n            var _a;\n            if (!set.messages.has(typeName)) {\n                return undefined;\n            }\n            let extensionsByNo = extensionsByExtendee.get(typeName);\n            if (!extensionsByNo) {\n                // maintain a lookup for extension desc by number\n                extensionsByNo = new Map();\n                extensionsByExtendee.set(typeName, extensionsByNo);\n                for (const desc of set.extensions.values()) {\n                    if (desc.extendee.typeName == typeName) {\n                        extensionsByNo.set(desc.number, desc);\n                    }\n                }\n            }\n            const desc = (_a = extensionsByExtendee.get(typeName)) === null || _a === void 0 ? void 0 : _a.get(no);\n            return desc ? this.findExtension(desc.typeName) : undefined;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findExtension(typeName) {\n            const existing = extensions.get(typeName);\n            if (existing) {\n                return existing;\n            }\n            const desc = set.extensions.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const extendee = resolve(desc.extendee, this, desc);\n            const runtime = desc.file.syntax == \"proto3\" ? proto3 : proto2;\n            const ext = runtime.makeExtension(typeName, extendee, makeFieldInfo(desc, this));\n            extensions.set(typeName, ext);\n            return ext;\n        },\n    };\n}\nfunction makeFieldInfo(desc, registry) {\n    var _a;\n    const f = {\n        kind: desc.fieldKind,\n        no: desc.number,\n        name: desc.name,\n        jsonName: desc.jsonName,\n        delimited: desc.proto.type == FieldDescriptorProto_Type.GROUP,\n        repeated: desc.repeated,\n        packed: desc.packed,\n        oneof: (_a = desc.oneof) === null || _a === void 0 ? void 0 : _a.name,\n        opt: desc.optional,\n        req: desc.proto.label === FieldDescriptorProto_Label.REQUIRED,\n    };\n    switch (desc.fieldKind) {\n        case \"map\": {\n            assert(desc.kind == \"field\"); // maps are not allowed for extensions\n            let T;\n            switch (desc.mapValue.kind) {\n                case \"scalar\":\n                    T = desc.mapValue.scalar;\n                    break;\n                case \"enum\": {\n                    T = resolve(desc.mapValue.enum, registry, desc);\n                    break;\n                }\n                case \"message\": {\n                    T = resolve(desc.mapValue.message, registry, desc);\n                    break;\n                }\n            }\n            f.K = desc.mapKey;\n            f.V = {\n                kind: desc.mapValue.kind,\n                T,\n            };\n            break;\n        }\n        case \"message\": {\n            f.T = resolve(desc.message, registry, desc);\n            break;\n        }\n        case \"enum\": {\n            f.T = resolve(desc.enum, registry, desc);\n            f.default = desc.getDefaultValue();\n            break;\n        }\n        case \"scalar\": {\n            f.L = desc.longType;\n            f.T = desc.scalar;\n            f.default = desc.getDefaultValue();\n            break;\n        }\n    }\n    return f;\n}\nfunction resolve(desc, registry, context) {\n    const type = desc.kind == \"message\"\n        ? registry.findMessage(desc.typeName)\n        : registry.findEnum(desc.typeName);\n    assert(type, `${desc.toString()}\" for ${context.toString()} not found`);\n    return type;\n}\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../../message.js\";\nimport { proto2 } from \"../../../proto2.js\";\nimport { FileDescriptorProto, GeneratedCodeInfo } from \"../descriptor_pb.js\";\n/**\n * The version number of protocol compiler.\n *\n * @generated from message google.protobuf.compiler.Version\n */\nexport class Version extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Version().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Version().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Version().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(Version, a, b);\n    }\n}\nVersion.runtime = proto2;\nVersion.typeName = \"google.protobuf.compiler.Version\";\nVersion.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"major\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"minor\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"patch\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"suffix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * An encoded CodeGeneratorRequest is written to the plugin's stdin.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorRequest\n */\nexport class CodeGeneratorRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The .proto files that were explicitly listed on the command-line.  The\n         * code generator should generate code only for these files.  Each file's\n         * descriptor will be included in proto_file, below.\n         *\n         * @generated from field: repeated string file_to_generate = 1;\n         */\n        this.fileToGenerate = [];\n        /**\n         * FileDescriptorProtos for all files in files_to_generate and everything\n         * they import.  The files will appear in topological order, so each file\n         * appears before any file that imports it.\n         *\n         * Note: the files listed in files_to_generate will include runtime-retention\n         * options only, but all other files will include source-retention options.\n         * The source_file_descriptors field below is available in case you need\n         * source-retention options for files_to_generate.\n         *\n         * protoc guarantees that all proto_files will be written after\n         * the fields above, even though this is not technically guaranteed by the\n         * protobuf wire format.  This theoretically could allow a plugin to stream\n         * in the FileDescriptorProtos and handle them one by one rather than read\n         * the entire set into memory at once.  However, as of this writing, this\n         * is not similarly optimized on protoc's end -- it will store all fields in\n         * memory at once before sending them to the plugin.\n         *\n         * Type names of fields and extensions in the FileDescriptorProto are always\n         * fully qualified.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_file = 15;\n         */\n        this.protoFile = [];\n        /**\n         * File descriptors with all options, including source-retention options.\n         * These descriptors are only provided for the files listed in\n         * files_to_generate.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto source_file_descriptors = 17;\n         */\n        this.sourceFileDescriptors = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(CodeGeneratorRequest, a, b);\n    }\n}\nCodeGeneratorRequest.runtime = proto2;\nCodeGeneratorRequest.typeName = \"google.protobuf.compiler.CodeGeneratorRequest\";\nCodeGeneratorRequest.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"file_to_generate\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"parameter\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"proto_file\", kind: \"message\", T: FileDescriptorProto, repeated: true },\n    { no: 17, name: \"source_file_descriptors\", kind: \"message\", T: FileDescriptorProto, repeated: true },\n    { no: 3, name: \"compiler_version\", kind: \"message\", T: Version, opt: true },\n]);\n/**\n * The plugin writes an encoded CodeGeneratorResponse to stdout.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse\n */\nexport class CodeGeneratorResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.compiler.CodeGeneratorResponse.File file = 15;\n         */\n        this.file = [];\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(CodeGeneratorResponse, a, b);\n    }\n}\nCodeGeneratorResponse.runtime = proto2;\nCodeGeneratorResponse.typeName = \"google.protobuf.compiler.CodeGeneratorResponse\";\nCodeGeneratorResponse.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"supported_features\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 3, name: \"minimum_edition\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"maximum_edition\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 15, name: \"file\", kind: \"message\", T: CodeGeneratorResponse_File, repeated: true },\n]);\n/**\n * Sync with code_generator.h.\n *\n * @generated from enum google.protobuf.compiler.CodeGeneratorResponse.Feature\n */\nexport var CodeGeneratorResponse_Feature;\n(function (CodeGeneratorResponse_Feature) {\n    /**\n     * @generated from enum value: FEATURE_NONE = 0;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * @generated from enum value: FEATURE_PROTO3_OPTIONAL = 1;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"PROTO3_OPTIONAL\"] = 1] = \"PROTO3_OPTIONAL\";\n    /**\n     * @generated from enum value: FEATURE_SUPPORTS_EDITIONS = 2;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"SUPPORTS_EDITIONS\"] = 2] = \"SUPPORTS_EDITIONS\";\n})(CodeGeneratorResponse_Feature || (CodeGeneratorResponse_Feature = {}));\n// Retrieve enum metadata with: proto2.getEnumType(CodeGeneratorResponse_Feature)\nproto2.util.setEnumType(CodeGeneratorResponse_Feature, \"google.protobuf.compiler.CodeGeneratorResponse.Feature\", [\n    { no: 0, name: \"FEATURE_NONE\" },\n    { no: 1, name: \"FEATURE_PROTO3_OPTIONAL\" },\n    { no: 2, name: \"FEATURE_SUPPORTS_EDITIONS\" },\n]);\n/**\n * Represents a single generated file.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse.File\n */\nexport class CodeGeneratorResponse_File extends Message {\n    constructor(data) {\n        super();\n        proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse_File().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse_File().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse_File().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2.util.equals(CodeGeneratorResponse_File, a, b);\n    }\n}\nCodeGeneratorResponse_File.runtime = proto2;\nCodeGeneratorResponse_File.typeName = \"google.protobuf.compiler.CodeGeneratorResponse.File\";\nCodeGeneratorResponse_File.fields = proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"insertion_point\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"generated_code_info\", kind: \"message\", T: GeneratedCodeInfo, opt: true },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * `SourceContext` represents information about the source of a\n * protobuf element, like the file in which it is defined.\n *\n * @generated from message google.protobuf.SourceContext\n */\nexport class SourceContext extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The path-qualified name of the .proto file that contained the associated\n         * protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n         *\n         * @generated from field: string file_name = 1;\n         */\n        this.fileName = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceContext().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceContext().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceContext().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SourceContext, a, b);\n    }\n}\nSourceContext.runtime = proto3;\nSourceContext.typeName = \"google.protobuf.SourceContext\";\nSourceContext.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"file_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// @generated by protoc-gen-es v1.10.0 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/type.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\nimport { proto3 } from \"../../proto3.js\";\nimport { Message } from \"../../message.js\";\nimport { SourceContext } from \"./source_context_pb.js\";\nimport { Any } from \"./any_pb.js\";\n/**\n * The syntax in which a protocol buffer element is defined.\n *\n * @generated from enum google.protobuf.Syntax\n */\nexport var Syntax;\n(function (Syntax) {\n    /**\n     * Syntax `proto2`.\n     *\n     * @generated from enum value: SYNTAX_PROTO2 = 0;\n     */\n    Syntax[Syntax[\"PROTO2\"] = 0] = \"PROTO2\";\n    /**\n     * Syntax `proto3`.\n     *\n     * @generated from enum value: SYNTAX_PROTO3 = 1;\n     */\n    Syntax[Syntax[\"PROTO3\"] = 1] = \"PROTO3\";\n    /**\n     * Syntax `editions`.\n     *\n     * @generated from enum value: SYNTAX_EDITIONS = 2;\n     */\n    Syntax[Syntax[\"EDITIONS\"] = 2] = \"EDITIONS\";\n})(Syntax || (Syntax = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Syntax)\nproto3.util.setEnumType(Syntax, \"google.protobuf.Syntax\", [\n    { no: 0, name: \"SYNTAX_PROTO2\" },\n    { no: 1, name: \"SYNTAX_PROTO3\" },\n    { no: 2, name: \"SYNTAX_EDITIONS\" },\n]);\n/**\n * A protocol buffer message type.\n *\n * @generated from message google.protobuf.Type\n */\nexport class Type extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified message name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The list of fields.\n         *\n         * @generated from field: repeated google.protobuf.Field fields = 2;\n         */\n        this.fields = [];\n        /**\n         * The list of types appearing in `oneof` definitions in this type.\n         *\n         * @generated from field: repeated string oneofs = 3;\n         */\n        this.oneofs = [];\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 4;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 6;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 7;\n         */\n        this.edition = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Type().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Type().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Type().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Type, a, b);\n    }\n}\nType.runtime = proto3;\nType.typeName = \"google.protobuf.Type\";\nType.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fields\", kind: \"message\", T: Field, repeated: true },\n    { no: 3, name: \"oneofs\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 5, name: \"source_context\", kind: \"message\", T: SourceContext },\n    { no: 6, name: \"syntax\", kind: \"enum\", T: proto3.getEnumType(Syntax) },\n    { no: 7, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * A single field of a message type.\n *\n * @generated from message google.protobuf.Field\n */\nexport class Field extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The field type.\n         *\n         * @generated from field: google.protobuf.Field.Kind kind = 1;\n         */\n        this.kind = Field_Kind.TYPE_UNKNOWN;\n        /**\n         * The field cardinality.\n         *\n         * @generated from field: google.protobuf.Field.Cardinality cardinality = 2;\n         */\n        this.cardinality = Field_Cardinality.UNKNOWN;\n        /**\n         * The field number.\n         *\n         * @generated from field: int32 number = 3;\n         */\n        this.number = 0;\n        /**\n         * The field name.\n         *\n         * @generated from field: string name = 4;\n         */\n        this.name = \"\";\n        /**\n         * The field type URL, without the scheme, for message or enumeration\n         * types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n         *\n         * @generated from field: string type_url = 6;\n         */\n        this.typeUrl = \"\";\n        /**\n         * The index of the field type in `Type.oneofs`, for message or enumeration\n         * types. The first type has index 1; zero means the type is not in the list.\n         *\n         * @generated from field: int32 oneof_index = 7;\n         */\n        this.oneofIndex = 0;\n        /**\n         * Whether to use alternative packed wire representation.\n         *\n         * @generated from field: bool packed = 8;\n         */\n        this.packed = false;\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 9;\n         */\n        this.options = [];\n        /**\n         * The field JSON name.\n         *\n         * @generated from field: string json_name = 10;\n         */\n        this.jsonName = \"\";\n        /**\n         * The string value of the default value of this field. Proto2 syntax only.\n         *\n         * @generated from field: string default_value = 11;\n         */\n        this.defaultValue = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Field().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Field().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Field().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Field, a, b);\n    }\n}\nField.runtime = proto3;\nField.typeName = \"google.protobuf.Field\";\nField.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(Field_Kind) },\n    { no: 2, name: \"cardinality\", kind: \"enum\", T: proto3.getEnumType(Field_Cardinality) },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 8, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Basic field types.\n *\n * @generated from enum google.protobuf.Field.Kind\n */\nexport var Field_Kind;\n(function (Field_Kind) {\n    /**\n     * Field type unknown.\n     *\n     * @generated from enum value: TYPE_UNKNOWN = 0;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UNKNOWN\"] = 0] = \"TYPE_UNKNOWN\";\n    /**\n     * Field type double.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    Field_Kind[Field_Kind[\"TYPE_DOUBLE\"] = 1] = \"TYPE_DOUBLE\";\n    /**\n     * Field type float.\n     *\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FLOAT\"] = 2] = \"TYPE_FLOAT\";\n    /**\n     * Field type int64.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT64\"] = 3] = \"TYPE_INT64\";\n    /**\n     * Field type uint64.\n     *\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT64\"] = 4] = \"TYPE_UINT64\";\n    /**\n     * Field type int32.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT32\"] = 5] = \"TYPE_INT32\";\n    /**\n     * Field type fixed64.\n     *\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED64\"] = 6] = \"TYPE_FIXED64\";\n    /**\n     * Field type fixed32.\n     *\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED32\"] = 7] = \"TYPE_FIXED32\";\n    /**\n     * Field type bool.\n     *\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BOOL\"] = 8] = \"TYPE_BOOL\";\n    /**\n     * Field type string.\n     *\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    Field_Kind[Field_Kind[\"TYPE_STRING\"] = 9] = \"TYPE_STRING\";\n    /**\n     * Field type group. Proto2 syntax only, and deprecated.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    Field_Kind[Field_Kind[\"TYPE_GROUP\"] = 10] = \"TYPE_GROUP\";\n    /**\n     * Field type message.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    Field_Kind[Field_Kind[\"TYPE_MESSAGE\"] = 11] = \"TYPE_MESSAGE\";\n    /**\n     * Field type bytes.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BYTES\"] = 12] = \"TYPE_BYTES\";\n    /**\n     * Field type uint32.\n     *\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT32\"] = 13] = \"TYPE_UINT32\";\n    /**\n     * Field type enum.\n     *\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    Field_Kind[Field_Kind[\"TYPE_ENUM\"] = 14] = \"TYPE_ENUM\";\n    /**\n     * Field type sfixed32.\n     *\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED32\"] = 15] = \"TYPE_SFIXED32\";\n    /**\n     * Field type sfixed64.\n     *\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED64\"] = 16] = \"TYPE_SFIXED64\";\n    /**\n     * Field type sint32.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT32\"] = 17] = \"TYPE_SINT32\";\n    /**\n     * Field type sint64.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT64\"] = 18] = \"TYPE_SINT64\";\n})(Field_Kind || (Field_Kind = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Kind)\nproto3.util.setEnumType(Field_Kind, \"google.protobuf.Field.Kind\", [\n    { no: 0, name: \"TYPE_UNKNOWN\" },\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * Whether a field is optional, required, or repeated.\n *\n * @generated from enum google.protobuf.Field.Cardinality\n */\nexport var Field_Cardinality;\n(function (Field_Cardinality) {\n    /**\n     * For fields with unknown cardinality.\n     *\n     * @generated from enum value: CARDINALITY_UNKNOWN = 0;\n     */\n    Field_Cardinality[Field_Cardinality[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * For optional fields.\n     *\n     * @generated from enum value: CARDINALITY_OPTIONAL = 1;\n     */\n    Field_Cardinality[Field_Cardinality[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * For required fields. Proto2 syntax only.\n     *\n     * @generated from enum value: CARDINALITY_REQUIRED = 2;\n     */\n    Field_Cardinality[Field_Cardinality[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * For repeated fields.\n     *\n     * @generated from enum value: CARDINALITY_REPEATED = 3;\n     */\n    Field_Cardinality[Field_Cardinality[\"REPEATED\"] = 3] = \"REPEATED\";\n})(Field_Cardinality || (Field_Cardinality = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Cardinality)\nproto3.util.setEnumType(Field_Cardinality, \"google.protobuf.Field.Cardinality\", [\n    { no: 0, name: \"CARDINALITY_UNKNOWN\" },\n    { no: 1, name: \"CARDINALITY_OPTIONAL\" },\n    { no: 2, name: \"CARDINALITY_REQUIRED\" },\n    { no: 3, name: \"CARDINALITY_REPEATED\" },\n]);\n/**\n * Enum type definition.\n *\n * @generated from message google.protobuf.Enum\n */\nexport class Enum extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum type name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value definitions.\n         *\n         * @generated from field: repeated google.protobuf.EnumValue enumvalue = 2;\n         */\n        this.enumvalue = [];\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 5;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 6;\n         */\n        this.edition = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Enum().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Enum().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Enum().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Enum, a, b);\n    }\n}\nEnum.runtime = proto3;\nEnum.typeName = \"google.protobuf.Enum\";\nEnum.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"enumvalue\", kind: \"message\", T: EnumValue, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 4, name: \"source_context\", kind: \"message\", T: SourceContext },\n    { no: 5, name: \"syntax\", kind: \"enum\", T: proto3.getEnumType(Syntax) },\n    { no: 6, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Enum value definition.\n *\n * @generated from message google.protobuf.EnumValue\n */\nexport class EnumValue extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum value name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value number.\n         *\n         * @generated from field: int32 number = 2;\n         */\n        this.number = 0;\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EnumValue, a, b);\n    }\n}\nEnumValue.runtime = proto3;\nEnumValue.typeName = \"google.protobuf.EnumValue\";\nEnumValue.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n]);\n/**\n * A protocol buffer option, which can be attached to a message, field,\n * enumeration, etc.\n *\n * @generated from message google.protobuf.Option\n */\nexport class Option extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The option's name. For protobuf built-in options (options defined in\n         * descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n         * For custom options, it should be the fully-qualified name. For example,\n         * `\"google.api.http\"`.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Option().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Option().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Option().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Option, a, b);\n    }\n}\nOption.runtime = proto3;\nOption.typeName = \"google.protobuf.Option\";\nOption.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"message\", T: Any },\n]);\n", "// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { Option, Syntax } from \"./type_pb.js\";\nimport { SourceContext } from \"./source_context_pb.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * Api is a light-weight descriptor for an API Interface.\n *\n * Interfaces are also described as \"protocol buffer services\" in some contexts,\n * such as by the \"service\" keyword in a .proto file, but they are different\n * from API Services, which represent a concrete implementation of an interface\n * as opposed to simply a description of methods and bindings. They are also\n * sometimes simply referred to as \"APIs\" in other contexts, such as the name of\n * this message itself. See https://cloud.google.com/apis/design/glossary for\n * detailed terminology.\n *\n * @generated from message google.protobuf.Api\n */\nexport class Api extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of this interface, including package name\n         * followed by the interface's simple name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The methods of this interface, in unspecified order.\n         *\n         * @generated from field: repeated google.protobuf.Method methods = 2;\n         */\n        this.methods = [];\n        /**\n         * Any metadata attached to the interface.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * A version string for this interface. If specified, must have the form\n         * `major-version.minor-version`, as in `1.10`. If the minor version is\n         * omitted, it defaults to zero. If the entire version field is empty, the\n         * major version is derived from the package name, as outlined below. If the\n         * field is not empty, the version in the package name will be verified to be\n         * consistent with what is provided here.\n         *\n         * The versioning schema uses [semantic\n         * versioning](http://semver.org) where the major version number\n         * indicates a breaking change and the minor version an additive,\n         * non-breaking change. Both version numbers are signals to users\n         * what to expect from different versions, and should be carefully\n         * chosen based on the product plan.\n         *\n         * The major version is also reflected in the package name of the\n         * interface, which must end in `v<major-version>`, as in\n         * `google.feature.v1`. For major versions 0 and 1, the suffix can\n         * be omitted. Zero major versions must only be used for\n         * experimental, non-GA interfaces.\n         *\n         *\n         * @generated from field: string version = 4;\n         */\n        this.version = \"\";\n        /**\n         * Included interfaces. See [Mixin][].\n         *\n         * @generated from field: repeated google.protobuf.Mixin mixins = 6;\n         */\n        this.mixins = [];\n        /**\n         * The source syntax of the service.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Api().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Api().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Api().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Api, a, b);\n    }\n}\nApi.runtime = proto3;\nApi.typeName = \"google.protobuf.Api\";\nApi.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"methods\", kind: \"message\", T: Method, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 4, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"source_context\", kind: \"message\", T: SourceContext },\n    { no: 6, name: \"mixins\", kind: \"message\", T: Mixin, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: proto3.getEnumType(Syntax) },\n]);\n/**\n * Method represents a method of an API interface.\n *\n * @generated from message google.protobuf.Method\n */\nexport class Method extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The simple name of this method.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * A URL of the input message type.\n         *\n         * @generated from field: string request_type_url = 2;\n         */\n        this.requestTypeUrl = \"\";\n        /**\n         * If true, the request is streamed.\n         *\n         * @generated from field: bool request_streaming = 3;\n         */\n        this.requestStreaming = false;\n        /**\n         * The URL of the output message type.\n         *\n         * @generated from field: string response_type_url = 4;\n         */\n        this.responseTypeUrl = \"\";\n        /**\n         * If true, the response is streamed.\n         *\n         * @generated from field: bool response_streaming = 5;\n         */\n        this.responseStreaming = false;\n        /**\n         * Any metadata attached to the method.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 6;\n         */\n        this.options = [];\n        /**\n         * The source syntax of this method.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = Syntax.PROTO2;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Method().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Method().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Method().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Method, a, b);\n    }\n}\nMethod.runtime = proto3;\nMethod.typeName = \"google.protobuf.Method\";\nMethod.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"request_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"request_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"response_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"response_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: proto3.getEnumType(Syntax) },\n]);\n/**\n * Declares an API Interface to be included in this interface. The including\n * interface must redeclare all the methods from the included interface, but\n * documentation and options are inherited as follows:\n *\n * - If after comment and whitespace stripping, the documentation\n *   string of the redeclared method is empty, it will be inherited\n *   from the original method.\n *\n * - Each annotation belonging to the service config (http,\n *   visibility) which is not set in the redeclared method will be\n *   inherited.\n *\n * - If an http annotation is inherited, the path pattern will be\n *   modified as follows. Any version prefix will be replaced by the\n *   version of the including interface plus the [root][] path if\n *   specified.\n *\n * Example of a simple mixin:\n *\n *     package google.acl.v1;\n *     service AccessControl {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n *       }\n *     }\n *\n *     package google.storage.v2;\n *     service Storage {\n *       rpc GetAcl(GetAclRequest) returns (Acl);\n *\n *       // Get a data record.\n *       rpc GetData(GetDataRequest) returns (Data) {\n *         option (google.api.http).get = \"/v2/{resource=**}\";\n *       }\n *     }\n *\n * Example of a mixin configuration:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *\n * The mixin construct implies that all methods in `AccessControl` are\n * also declared with same name and request/response types in\n * `Storage`. A documentation generator or annotation processor will\n * see the effective `Storage.GetAcl` method after inherting\n * documentation and annotations as follows:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * Note how the version in the path pattern changed from `v1` to `v2`.\n *\n * If the `root` field in the mixin is specified, it should be a\n * relative path under which inherited HTTP paths are placed. Example:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *         root: acls\n *\n * This implies the following inherited HTTP annotation:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * @generated from message google.protobuf.Mixin\n */\nexport class Mixin extends Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of the interface which is included.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * If non-empty specifies a path under which inherited HTTP paths\n         * are rooted.\n         *\n         * @generated from field: string root = 2;\n         */\n        this.root = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Mixin().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Mixin().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Mixin().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Mixin, a, b);\n    }\n}\nMixin.runtime = proto3;\nMixin.typeName = \"google.protobuf.Mixin\";\nMixin.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"root\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n", "// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_metrics.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3, Timestamp } from \"@bufbuild/protobuf\";\n\n/**\n * index from [0: MAX_LABEL_PREDEFINED_MAX_VALUE) are for predefined labels (`MetricLabel`)\n *\n * @generated from enum livekit.MetricLabel\n */\nexport const MetricLabel = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.MetricLabel\",\n  [\n    {no: 0, name: \"AGENTS_LLM_TTFT\"},\n    {no: 1, name: \"AGENTS_STT_TTFT\"},\n    {no: 2, name: \"AGENTS_TTS_TTFB\"},\n    {no: 3, name: \"CLIENT_VIDEO_SUBSCRIBER_FREEZE_COUNT\"},\n    {no: 4, name: \"CLIENT_VIDEO_SUBSCRIBER_TOTAL_FREEZE_DURATION\"},\n    {no: 5, name: \"CLIENT_VIDEO_SUBSCRIBER_PAUSE_COUNT\"},\n    {no: 6, name: \"CLIENT_VIDEO_SUBSCRIBER_TOTAL_PAUSES_DURATION\"},\n    {no: 7, name: \"CLIENT_AUDIO_SUBSCRIBER_CONCEALED_SAMPLES\"},\n    {no: 8, name: \"CLIENT_AUDIO_SUBSCRIBER_SILENT_CONCEALED_SAMPLES\"},\n    {no: 9, name: \"CLIENT_AUDIO_SUBSCRIBER_CONCEALMENT_EVENTS\"},\n    {no: 10, name: \"CLIENT_AUDIO_SUBSCRIBER_INTERRUPTION_COUNT\"},\n    {no: 11, name: \"CLIENT_AUDIO_SUBSCRIBER_TOTAL_INTERRUPTION_DURATION\"},\n    {no: 12, name: \"CLIENT_SUBSCRIBER_JITTER_BUFFER_DELAY\"},\n    {no: 13, name: \"CLIENT_SUBSCRIBER_JITTER_BUFFER_EMITTED_COUNT\"},\n    {no: 14, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_BANDWIDTH\"},\n    {no: 15, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_CPU\"},\n    {no: 16, name: \"CLIENT_VIDEO_PUBLISHER_QUALITY_LIMITATION_DURATION_OTHER\"},\n    {no: 17, name: \"PUBLISHER_RTT\"},\n    {no: 18, name: \"SERVER_MESH_RTT\"},\n    {no: 19, name: \"SUBSCRIBER_RTT\"},\n    {no: 4096, name: \"METRIC_LABEL_PREDEFINED_MAX_VALUE\"},\n  ],\n);\n\n/**\n * @generated from message livekit.MetricsBatch\n */\nexport const MetricsBatch = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MetricsBatch\",\n  () => [\n    { no: 1, name: \"timestamp_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"normalized_timestamp\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"str_data\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"time_series\", kind: \"message\", T: TimeSeriesMetric, repeated: true },\n    { no: 5, name: \"events\", kind: \"message\", T: EventMetric, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.TimeSeriesMetric\n */\nexport const TimeSeriesMetric = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TimeSeriesMetric\",\n  () => [\n    { no: 1, name: \"label\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"participant_identity\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"track_sid\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"samples\", kind: \"message\", T: MetricSample, repeated: true },\n    { no: 5, name: \"rid\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.MetricSample\n */\nexport const MetricSample = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MetricSample\",\n  () => [\n    { no: 1, name: \"timestamp_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"normalized_timestamp\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"value\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n  ],\n);\n\n/**\n * @generated from message livekit.EventMetric\n */\nexport const EventMetric = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.EventMetric\",\n  () => [\n    { no: 1, name: \"label\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"participant_identity\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"track_sid\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"start_timestamp_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"end_timestamp_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, opt: true },\n    { no: 6, name: \"normalized_start_timestamp\", kind: \"message\", T: Timestamp },\n    { no: 7, name: \"normalized_end_timestamp\", kind: \"message\", T: Timestamp, opt: true },\n    { no: 8, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"rid\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_models.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3, Timestamp } from \"@bufbuild/protobuf\";\nimport { MetricsBatch } from \"./livekit_metrics_pb.js\";\n\n/**\n * @generated from enum livekit.AudioCodec\n */\nexport const AudioCodec = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.AudioCodec\",\n  [\n    {no: 0, name: \"DEFAULT_AC\"},\n    {no: 1, name: \"OPUS\"},\n    {no: 2, name: \"AAC\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.VideoCodec\n */\nexport const VideoCodec = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.VideoCodec\",\n  [\n    {no: 0, name: \"DEFAULT_VC\"},\n    {no: 1, name: \"H264_BASELINE\"},\n    {no: 2, name: \"H264_MAIN\"},\n    {no: 3, name: \"H264_HIGH\"},\n    {no: 4, name: \"VP8\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ImageCodec\n */\nexport const ImageCodec = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ImageCodec\",\n  [\n    {no: 0, name: \"IC_DEFAULT\"},\n    {no: 1, name: \"IC_JPEG\"},\n  ],\n);\n\n/**\n * Policy for publisher to handle subscribers that are unable to support the primary codec of a track\n *\n * @generated from enum livekit.BackupCodecPolicy\n */\nexport const BackupCodecPolicy = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.BackupCodecPolicy\",\n  [\n    {no: 0, name: \"PREFER_REGRESSION\"},\n    {no: 1, name: \"SIMULCAST\"},\n    {no: 2, name: \"REGRESSION\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.TrackType\n */\nexport const TrackType = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.TrackType\",\n  [\n    {no: 0, name: \"AUDIO\"},\n    {no: 1, name: \"VIDEO\"},\n    {no: 2, name: \"DATA\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.TrackSource\n */\nexport const TrackSource = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.TrackSource\",\n  [\n    {no: 0, name: \"UNKNOWN\"},\n    {no: 1, name: \"CAMERA\"},\n    {no: 2, name: \"MICROPHONE\"},\n    {no: 3, name: \"SCREEN_SHARE\"},\n    {no: 4, name: \"SCREEN_SHARE_AUDIO\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.VideoQuality\n */\nexport const VideoQuality = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.VideoQuality\",\n  [\n    {no: 0, name: \"LOW\"},\n    {no: 1, name: \"MEDIUM\"},\n    {no: 2, name: \"HIGH\"},\n    {no: 3, name: \"OFF\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ConnectionQuality\n */\nexport const ConnectionQuality = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ConnectionQuality\",\n  [\n    {no: 0, name: \"POOR\"},\n    {no: 1, name: \"GOOD\"},\n    {no: 2, name: \"EXCELLENT\"},\n    {no: 3, name: \"LOST\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ClientConfigSetting\n */\nexport const ClientConfigSetting = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ClientConfigSetting\",\n  [\n    {no: 0, name: \"UNSET\"},\n    {no: 1, name: \"DISABLED\"},\n    {no: 2, name: \"ENABLED\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.DisconnectReason\n */\nexport const DisconnectReason = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.DisconnectReason\",\n  [\n    {no: 0, name: \"UNKNOWN_REASON\"},\n    {no: 1, name: \"CLIENT_INITIATED\"},\n    {no: 2, name: \"DUPLICATE_IDENTITY\"},\n    {no: 3, name: \"SERVER_SHUTDOWN\"},\n    {no: 4, name: \"PARTICIPANT_REMOVED\"},\n    {no: 5, name: \"ROOM_DELETED\"},\n    {no: 6, name: \"STATE_MISMATCH\"},\n    {no: 7, name: \"JOIN_FAILURE\"},\n    {no: 8, name: \"MIGRATION\"},\n    {no: 9, name: \"SIGNAL_CLOSE\"},\n    {no: 10, name: \"ROOM_CLOSED\"},\n    {no: 11, name: \"USER_UNAVAILABLE\"},\n    {no: 12, name: \"USER_REJECTED\"},\n    {no: 13, name: \"SIP_TRUNK_FAILURE\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ReconnectReason\n */\nexport const ReconnectReason = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ReconnectReason\",\n  [\n    {no: 0, name: \"RR_UNKNOWN\"},\n    {no: 1, name: \"RR_SIGNAL_DISCONNECTED\"},\n    {no: 2, name: \"RR_PUBLISHER_FAILED\"},\n    {no: 3, name: \"RR_SUBSCRIBER_FAILED\"},\n    {no: 4, name: \"RR_SWITCH_CANDIDATE\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SubscriptionError\n */\nexport const SubscriptionError = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SubscriptionError\",\n  [\n    {no: 0, name: \"SE_UNKNOWN\"},\n    {no: 1, name: \"SE_CODEC_UNSUPPORTED\"},\n    {no: 2, name: \"SE_TRACK_NOTFOUND\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.AudioTrackFeature\n */\nexport const AudioTrackFeature = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.AudioTrackFeature\",\n  [\n    {no: 0, name: \"TF_STEREO\"},\n    {no: 1, name: \"TF_NO_DTX\"},\n    {no: 2, name: \"TF_AUTO_GAIN_CONTROL\"},\n    {no: 3, name: \"TF_ECHO_CANCELLATION\"},\n    {no: 4, name: \"TF_NOISE_SUPPRESSION\"},\n    {no: 5, name: \"TF_ENHANCED_NOISE_CANCELLATION\"},\n  ],\n);\n\n/**\n * @generated from message livekit.Pagination\n */\nexport const Pagination = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Pagination\",\n  () => [\n    { no: 1, name: \"after_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"limit\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ],\n);\n\n/**\n * ListUpdate is used for updated APIs where 'repeated string' field is modified.\n *\n * @generated from message livekit.ListUpdate\n */\nexport const ListUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListUpdate\",\n  () => [\n    { no: 1, name: \"set\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.Room\n */\nexport const Room = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Room\",\n  () => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 14, name: \"departure_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"creation_time\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 15, name: \"creation_time_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"turn_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"enabled_codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 8, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"num_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 11, name: \"num_publishers\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"active_recording\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"version\", kind: \"message\", T: TimedVersion },\n  ],\n);\n\n/**\n * @generated from message livekit.Codec\n */\nexport const Codec = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Codec\",\n  () => [\n    { no: 1, name: \"mime\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fmtp_line\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.PlayoutDelay\n */\nexport const PlayoutDelay = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.PlayoutDelay\",\n  () => [\n    { no: 1, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"min\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"max\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ParticipantPermission\n */\nexport const ParticipantPermission = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ParticipantPermission\",\n  () => [\n    { no: 1, name: \"can_subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"can_publish\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"can_publish_data\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"can_publish_sources\", kind: \"enum\", T: proto3.getEnumType(TrackSource), repeated: true },\n    { no: 7, name: \"hidden\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"recorder\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"can_update_metadata\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"agent\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"can_subscribe_metrics\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ParticipantInfo\n */\nexport const ParticipantInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ParticipantInfo\",\n  () => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_State) },\n    { no: 4, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true },\n    { no: 5, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"joined_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 17, name: \"joined_at_ms\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 9, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"version\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 11, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    { no: 12, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"is_publisher\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_Kind) },\n    { no: 15, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 16, name: \"disconnect_reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n    { no: 18, name: \"kind_details\", kind: \"enum\", T: proto3.getEnumType(ParticipantInfo_KindDetail), repeated: true },\n  ],\n);\n\n/**\n * @generated from enum livekit.ParticipantInfo.State\n */\nexport const ParticipantInfo_State = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ParticipantInfo.State\",\n  [\n    {no: 0, name: \"JOINING\"},\n    {no: 1, name: \"JOINED\"},\n    {no: 2, name: \"ACTIVE\"},\n    {no: 3, name: \"DISCONNECTED\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ParticipantInfo.Kind\n */\nexport const ParticipantInfo_Kind = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ParticipantInfo.Kind\",\n  [\n    {no: 0, name: \"STANDARD\"},\n    {no: 1, name: \"INGRESS\"},\n    {no: 2, name: \"EGRESS\"},\n    {no: 3, name: \"SIP\"},\n    {no: 4, name: \"AGENT\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ParticipantInfo.KindDetail\n */\nexport const ParticipantInfo_KindDetail = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ParticipantInfo.KindDetail\",\n  [\n    {no: 0, name: \"CLOUD_AGENT\"},\n    {no: 1, name: \"FORWARDED\"},\n  ],\n);\n\n/**\n * @generated from message livekit.Encryption\n */\nexport const Encryption = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Encryption\",\n  [],\n);\n\n/**\n * @generated from enum livekit.Encryption.Type\n */\nexport const Encryption_Type = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.Encryption.Type\",\n  [\n    {no: 0, name: \"NONE\"},\n    {no: 1, name: \"GCM\"},\n    {no: 2, name: \"CUSTOM\"},\n  ],\n);\n\n/**\n * @generated from message livekit.SimulcastCodecInfo\n */\nexport const SimulcastCodecInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SimulcastCodecInfo\",\n  () => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.TrackInfo\n */\nexport const TrackInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackInfo\",\n  () => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    { no: 3, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"simulcast\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 10, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    { no: 11, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"mid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"codecs\", kind: \"message\", T: SimulcastCodecInfo, repeated: true },\n    { no: 14, name: \"stereo\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"disable_red\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 16, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 17, name: \"stream\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 18, name: \"version\", kind: \"message\", T: TimedVersion },\n    { no: 19, name: \"audio_features\", kind: \"enum\", T: proto3.getEnumType(AudioTrackFeature), repeated: true },\n    { no: 20, name: \"backup_codec_policy\", kind: \"enum\", T: proto3.getEnumType(BackupCodecPolicy) },\n  ],\n);\n\n/**\n * provide information about available spatial layers\n *\n * @generated from message livekit.VideoLayer\n */\nexport const VideoLayer = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.VideoLayer\",\n  () => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"ssrc\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * new DataPacket API\n *\n * @generated from message livekit.DataPacket\n */\nexport const DataPacket = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataPacket\",\n  () => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"user\", kind: \"message\", T: UserPacket, oneof: \"value\" },\n    { no: 3, name: \"speaker\", kind: \"message\", T: ActiveSpeakerUpdate, oneof: \"value\" },\n    { no: 6, name: \"sip_dtmf\", kind: \"message\", T: SipDTMF, oneof: \"value\" },\n    { no: 7, name: \"transcription\", kind: \"message\", T: Transcription, oneof: \"value\" },\n    { no: 8, name: \"metrics\", kind: \"message\", T: MetricsBatch, oneof: \"value\" },\n    { no: 9, name: \"chat_message\", kind: \"message\", T: ChatMessage, oneof: \"value\" },\n    { no: 10, name: \"rpc_request\", kind: \"message\", T: RpcRequest, oneof: \"value\" },\n    { no: 11, name: \"rpc_ack\", kind: \"message\", T: RpcAck, oneof: \"value\" },\n    { no: 12, name: \"rpc_response\", kind: \"message\", T: RpcResponse, oneof: \"value\" },\n    { no: 13, name: \"stream_header\", kind: \"message\", T: DataStream_Header, oneof: \"value\" },\n    { no: 14, name: \"stream_chunk\", kind: \"message\", T: DataStream_Chunk, oneof: \"value\" },\n    { no: 15, name: \"stream_trailer\", kind: \"message\", T: DataStream_Trailer, oneof: \"value\" },\n  ],\n);\n\n/**\n * @generated from enum livekit.DataPacket.Kind\n */\nexport const DataPacket_Kind = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.DataPacket.Kind\",\n  [\n    {no: 0, name: \"RELIABLE\"},\n    {no: 1, name: \"LOSSY\"},\n  ],\n);\n\n/**\n * @generated from message livekit.ActiveSpeakerUpdate\n */\nexport const ActiveSpeakerUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ActiveSpeakerUpdate\",\n  () => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.SpeakerInfo\n */\nexport const SpeakerInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SpeakerInfo\",\n  () => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"level\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 3, name: \"active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UserPacket\n */\nexport const UserPacket = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UserPacket\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"destination_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 9, name: \"start_time\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 10, name: \"end_time\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 11, name: \"nonce\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SipDTMF\n */\nexport const SipDTMF = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SipDTMF\",\n  () => [\n    { no: 3, name: \"code\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"digit\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.Transcription\n */\nexport const Transcription = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Transcription\",\n  () => [\n    { no: 2, name: \"transcribed_participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"segments\", kind: \"message\", T: TranscriptionSegment, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.TranscriptionSegment\n */\nexport const TranscriptionSegment = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TranscriptionSegment\",\n  () => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"start_time\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 4, name: \"end_time\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 5, name: \"final\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"language\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ChatMessage\n */\nexport const ChatMessage = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ChatMessage\",\n  () => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"edit_timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, opt: true },\n    { no: 4, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"deleted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"generated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RpcRequest\n */\nexport const RpcRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RpcRequest\",\n  () => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"method\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"response_timeout_ms\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"version\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RpcAck\n */\nexport const RpcAck = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RpcAck\",\n  () => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RpcResponse\n */\nexport const RpcResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RpcResponse\",\n  () => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"payload\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"value\" },\n    { no: 3, name: \"error\", kind: \"message\", T: RpcError, oneof: \"value\" },\n  ],\n);\n\n/**\n * @generated from message livekit.RpcError\n */\nexport const RpcError = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RpcError\",\n  () => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"data\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ParticipantTracks\n */\nexport const ParticipantTracks = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ParticipantTracks\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * details about the server\n *\n * @generated from message livekit.ServerInfo\n */\nexport const ServerInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ServerInfo\",\n  () => [\n    { no: 1, name: \"edition\", kind: \"enum\", T: proto3.getEnumType(ServerInfo_Edition) },\n    { no: 2, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"protocol\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"node_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"debug_info\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"agent_protocol\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ],\n);\n\n/**\n * @generated from enum livekit.ServerInfo.Edition\n */\nexport const ServerInfo_Edition = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ServerInfo.Edition\",\n  [\n    {no: 0, name: \"Standard\"},\n    {no: 1, name: \"Cloud\"},\n  ],\n);\n\n/**\n * details about the client\n *\n * @generated from message livekit.ClientInfo\n */\nexport const ClientInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ClientInfo\",\n  () => [\n    { no: 1, name: \"sdk\", kind: \"enum\", T: proto3.getEnumType(ClientInfo_SDK) },\n    { no: 2, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"protocol\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"os\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"os_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"device_model\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"browser\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"browser_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"network\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"other_sdks\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from enum livekit.ClientInfo.SDK\n */\nexport const ClientInfo_SDK = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ClientInfo.SDK\",\n  [\n    {no: 0, name: \"UNKNOWN\"},\n    {no: 1, name: \"JS\"},\n    {no: 2, name: \"SWIFT\"},\n    {no: 3, name: \"ANDROID\"},\n    {no: 4, name: \"FLUTTER\"},\n    {no: 5, name: \"GO\"},\n    {no: 6, name: \"UNITY\"},\n    {no: 7, name: \"REACT_NATIVE\"},\n    {no: 8, name: \"RUST\"},\n    {no: 9, name: \"PYTHON\"},\n    {no: 10, name: \"CPP\"},\n    {no: 11, name: \"UNITY_WEB\"},\n    {no: 12, name: \"NODE\"},\n  ],\n);\n\n/**\n * server provided client configuration\n *\n * @generated from message livekit.ClientConfiguration\n */\nexport const ClientConfiguration = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ClientConfiguration\",\n  () => [\n    { no: 1, name: \"video\", kind: \"message\", T: VideoConfiguration },\n    { no: 2, name: \"screen\", kind: \"message\", T: VideoConfiguration },\n    { no: 3, name: \"resume_connection\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n    { no: 4, name: \"disabled_codecs\", kind: \"message\", T: DisabledCodecs },\n    { no: 5, name: \"force_relay\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n  ],\n);\n\n/**\n * @generated from message livekit.VideoConfiguration\n */\nexport const VideoConfiguration = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.VideoConfiguration\",\n  () => [\n    { no: 1, name: \"hardware_encoder\", kind: \"enum\", T: proto3.getEnumType(ClientConfigSetting) },\n  ],\n);\n\n/**\n * @generated from message livekit.DisabledCodecs\n */\nexport const DisabledCodecs = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DisabledCodecs\",\n  () => [\n    { no: 1, name: \"codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 2, name: \"publish\", kind: \"message\", T: Codec, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RTPDrift\n */\nexport const RTPDrift = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RTPDrift\",\n  () => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 4, name: \"start_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 5, name: \"end_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 6, name: \"rtp_clock_ticks\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 7, name: \"drift_samples\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 8, name: \"drift_ms\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 9, name: \"clock_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RTPStats\n */\nexport const RTPStats = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RTPStats\",\n  () => [\n    { no: 1, name: \"start_time\", kind: \"message\", T: Timestamp },\n    { no: 2, name: \"end_time\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"duration\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 4, name: \"packets\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"packet_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 6, name: \"bytes\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 39, name: \"header_bytes\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 7, name: \"bitrate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 8, name: \"packets_lost\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"packet_loss_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 10, name: \"packet_loss_percentage\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 11, name: \"packets_duplicate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 12, name: \"packet_duplicate_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 13, name: \"bytes_duplicate\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 40, name: \"header_bytes_duplicate\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 14, name: \"bitrate_duplicate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 15, name: \"packets_padding\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 16, name: \"packet_padding_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 17, name: \"bytes_padding\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 41, name: \"header_bytes_padding\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 18, name: \"bitrate_padding\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 19, name: \"packets_out_of_order\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 20, name: \"frames\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 21, name: \"frame_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 22, name: \"jitter_current\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 23, name: \"jitter_max\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 24, name: \"gap_histogram\", kind: \"map\", K: 5 /* ScalarType.INT32 */, V: {kind: \"scalar\", T: 13 /* ScalarType.UINT32 */} },\n    { no: 25, name: \"nacks\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 37, name: \"nack_acks\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 26, name: \"nack_misses\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 38, name: \"nack_repeated\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 27, name: \"plis\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 28, name: \"last_pli\", kind: \"message\", T: Timestamp },\n    { no: 29, name: \"firs\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 30, name: \"last_fir\", kind: \"message\", T: Timestamp },\n    { no: 31, name: \"rtt_current\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 32, name: \"rtt_max\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 33, name: \"key_frames\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 34, name: \"last_key_frame\", kind: \"message\", T: Timestamp },\n    { no: 35, name: \"layer_lock_plis\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 36, name: \"last_layer_lock_pli\", kind: \"message\", T: Timestamp },\n    { no: 44, name: \"packet_drift\", kind: \"message\", T: RTPDrift },\n    { no: 45, name: \"ntp_report_drift\", kind: \"message\", T: RTPDrift },\n    { no: 46, name: \"rebased_report_drift\", kind: \"message\", T: RTPDrift },\n    { no: 47, name: \"received_report_drift\", kind: \"message\", T: RTPDrift },\n  ],\n);\n\n/**\n * @generated from message livekit.RTCPSenderReportState\n */\nexport const RTCPSenderReportState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RTCPSenderReportState\",\n  () => [\n    { no: 1, name: \"rtp_timestamp\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"rtp_timestamp_ext\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 3, name: \"ntp_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 4, name: \"at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"at_adjusted\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"packets\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"octets\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RTPForwarderState\n */\nexport const RTPForwarderState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RTPForwarderState\",\n  () => [\n    { no: 1, name: \"started\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"reference_layer_spatial\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"pre_start_time\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"ext_first_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 5, name: \"dummy_start_timestamp_offset\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 6, name: \"rtp_munger\", kind: \"message\", T: RTPMungerState },\n    { no: 7, name: \"vp8_munger\", kind: \"message\", T: VP8MungerState, oneof: \"codec_munger\" },\n    { no: 8, name: \"sender_report_state\", kind: \"message\", T: RTCPSenderReportState, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RTPMungerState\n */\nexport const RTPMungerState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RTPMungerState\",\n  () => [\n    { no: 1, name: \"ext_last_sequence_number\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 2, name: \"ext_second_last_sequence_number\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 3, name: \"ext_last_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 4, name: \"ext_second_last_timestamp\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 5, name: \"last_marker\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"second_last_marker\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.VP8MungerState\n */\nexport const VP8MungerState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.VP8MungerState\",\n  () => [\n    { no: 1, name: \"ext_last_picture_id\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"picture_id_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"last_tl0_pic_idx\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"tl0_pic_idx_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"tid_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"last_key_idx\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"key_idx_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.TimedVersion\n */\nexport const TimedVersion = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TimedVersion\",\n  () => [\n    { no: 1, name: \"unix_micro\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"ticks\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.DataStream\n */\nexport const DataStream = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream\",\n  [],\n);\n\n/**\n * enum for operation types (specific to TextHeader)\n *\n * @generated from enum livekit.DataStream.OperationType\n */\nexport const DataStream_OperationType = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.DataStream.OperationType\",\n  [\n    {no: 0, name: \"CREATE\"},\n    {no: 1, name: \"UPDATE\"},\n    {no: 2, name: \"DELETE\"},\n    {no: 3, name: \"REACTION\"},\n  ],\n);\n\n/**\n * header properties specific to text streams\n *\n * @generated from message livekit.DataStream.TextHeader\n */\nexport const DataStream_TextHeader = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream.TextHeader\",\n  () => [\n    { no: 1, name: \"operation_type\", kind: \"enum\", T: proto3.getEnumType(DataStream_OperationType) },\n    { no: 2, name: \"version\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"reply_to_stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"attached_stream_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"generated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n  {localName: \"DataStream_TextHeader\"},\n);\n\n/**\n * header properties specific to byte or file streams\n *\n * @generated from message livekit.DataStream.ByteHeader\n */\nexport const DataStream_ByteHeader = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream.ByteHeader\",\n  () => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n  {localName: \"DataStream_ByteHeader\"},\n);\n\n/**\n * main DataStream.Header that contains a oneof for specific headers\n *\n * @generated from message livekit.DataStream.Header\n */\nexport const DataStream_Header = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream.Header\",\n  () => [\n    { no: 1, name: \"stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"total_length\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 7, name: \"encryption_type\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 8, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 9, name: \"text_header\", kind: \"message\", T: DataStream_TextHeader, oneof: \"content_header\" },\n    { no: 10, name: \"byte_header\", kind: \"message\", T: DataStream_ByteHeader, oneof: \"content_header\" },\n  ],\n  {localName: \"DataStream_Header\"},\n);\n\n/**\n * @generated from message livekit.DataStream.Chunk\n */\nexport const DataStream_Chunk = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream.Chunk\",\n  () => [\n    { no: 1, name: \"stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"chunk_index\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n    { no: 3, name: \"content\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 4, name: \"version\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 5, name: \"iv\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n  ],\n  {localName: \"DataStream_Chunk\"},\n);\n\n/**\n * @generated from message livekit.DataStream.Trailer\n */\nexport const DataStream_Trailer = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataStream.Trailer\",\n  () => [\n    { no: 1, name: \"stream_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"reason\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n  {localName: \"DataStream_Trailer\"},\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_agent.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { ParticipantInfo, ParticipantPermission, Room, ServerInfo } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.JobType\n */\nexport const JobType = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.JobType\",\n  [\n    {no: 0, name: \"JT_ROOM\"},\n    {no: 1, name: \"JT_PUBLISHER\"},\n    {no: 2, name: \"JT_PARTICIPANT\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.WorkerStatus\n */\nexport const WorkerStatus = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.WorkerStatus\",\n  [\n    {no: 0, name: \"WS_AVAILABLE\"},\n    {no: 1, name: \"WS_FULL\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.JobStatus\n */\nexport const JobStatus = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.JobStatus\",\n  [\n    {no: 0, name: \"JS_PENDING\"},\n    {no: 1, name: \"JS_RUNNING\"},\n    {no: 2, name: \"JS_SUCCESS\"},\n    {no: 3, name: \"JS_FAILED\"},\n  ],\n);\n\n/**\n * @generated from message livekit.Job\n */\nexport const Job = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Job\",\n  () => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"dispatch_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    { no: 3, name: \"room\", kind: \"message\", T: Room },\n    { no: 4, name: \"participant\", kind: \"message\", T: ParticipantInfo, opt: true },\n    { no: 5, name: \"namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"state\", kind: \"message\", T: JobState },\n  ],\n);\n\n/**\n * @generated from message livekit.JobState\n */\nexport const JobState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.JobState\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(JobStatus) },\n    { no: 2, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * from Worker to Server\n *\n * @generated from message livekit.WorkerMessage\n */\nexport const WorkerMessage = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.WorkerMessage\",\n  () => [\n    { no: 1, name: \"register\", kind: \"message\", T: RegisterWorkerRequest, oneof: \"message\" },\n    { no: 2, name: \"availability\", kind: \"message\", T: AvailabilityResponse, oneof: \"message\" },\n    { no: 3, name: \"update_worker\", kind: \"message\", T: UpdateWorkerStatus, oneof: \"message\" },\n    { no: 4, name: \"update_job\", kind: \"message\", T: UpdateJobStatus, oneof: \"message\" },\n    { no: 5, name: \"ping\", kind: \"message\", T: WorkerPing, oneof: \"message\" },\n    { no: 6, name: \"simulate_job\", kind: \"message\", T: SimulateJobRequest, oneof: \"message\" },\n    { no: 7, name: \"migrate_job\", kind: \"message\", T: MigrateJobRequest, oneof: \"message\" },\n  ],\n);\n\n/**\n * from Server to Worker\n *\n * @generated from message livekit.ServerMessage\n */\nexport const ServerMessage = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ServerMessage\",\n  () => [\n    { no: 1, name: \"register\", kind: \"message\", T: RegisterWorkerResponse, oneof: \"message\" },\n    { no: 2, name: \"availability\", kind: \"message\", T: AvailabilityRequest, oneof: \"message\" },\n    { no: 3, name: \"assignment\", kind: \"message\", T: JobAssignment, oneof: \"message\" },\n    { no: 5, name: \"termination\", kind: \"message\", T: JobTermination, oneof: \"message\" },\n    { no: 4, name: \"pong\", kind: \"message\", T: WorkerPong, oneof: \"message\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SimulateJobRequest\n */\nexport const SimulateJobRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SimulateJobRequest\",\n  () => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    { no: 2, name: \"room\", kind: \"message\", T: Room },\n    { no: 3, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.WorkerPing\n */\nexport const WorkerPing = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.WorkerPing\",\n  () => [\n    { no: 1, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.WorkerPong\n */\nexport const WorkerPong = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.WorkerPong\",\n  () => [\n    { no: 1, name: \"last_timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RegisterWorkerRequest\n */\nexport const RegisterWorkerRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RegisterWorkerRequest\",\n  () => [\n    { no: 1, name: \"type\", kind: \"enum\", T: proto3.getEnumType(JobType) },\n    { no: 8, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"ping_interval\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"allowed_permissions\", kind: \"message\", T: ParticipantPermission },\n  ],\n);\n\n/**\n * @generated from message livekit.RegisterWorkerResponse\n */\nexport const RegisterWorkerResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RegisterWorkerResponse\",\n  () => [\n    { no: 1, name: \"worker_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"server_info\", kind: \"message\", T: ServerInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.MigrateJobRequest\n */\nexport const MigrateJobRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MigrateJobRequest\",\n  () => [\n    { no: 2, name: \"job_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.AvailabilityRequest\n */\nexport const AvailabilityRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AvailabilityRequest\",\n  () => [\n    { no: 1, name: \"job\", kind: \"message\", T: Job },\n    { no: 2, name: \"resuming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.AvailabilityResponse\n */\nexport const AvailabilityResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AvailabilityResponse\",\n  () => [\n    { no: 1, name: \"job_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"available\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"supports_resume\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"participant_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateJobStatus\n */\nexport const UpdateJobStatus = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateJobStatus\",\n  () => [\n    { no: 1, name: \"job_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"status\", kind: \"enum\", T: proto3.getEnumType(JobStatus) },\n    { no: 3, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateWorkerStatus\n */\nexport const UpdateWorkerStatus = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateWorkerStatus\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(WorkerStatus), opt: true },\n    { no: 3, name: \"load\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 4, name: \"job_count\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.JobAssignment\n */\nexport const JobAssignment = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.JobAssignment\",\n  () => [\n    { no: 1, name: \"job\", kind: \"message\", T: Job },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.JobTermination\n */\nexport const JobTermination = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.JobTermination\",\n  () => [\n    { no: 1, name: \"job_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_agent_dispatch.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { Job } from \"./livekit_agent_pb.js\";\n\n/**\n * @generated from message livekit.CreateAgentDispatchRequest\n */\nexport const CreateAgentDispatchRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateAgentDispatchRequest\",\n  () => [\n    { no: 1, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomAgentDispatch\n */\nexport const RoomAgentDispatch = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomAgentDispatch\",\n  () => [\n    { no: 1, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteAgentDispatchRequest\n */\nexport const DeleteAgentDispatchRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteAgentDispatchRequest\",\n  () => [\n    { no: 1, name: \"dispatch_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ListAgentDispatchRequest\n */\nexport const ListAgentDispatchRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListAgentDispatchRequest\",\n  () => [\n    { no: 1, name: \"dispatch_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ListAgentDispatchResponse\n */\nexport const ListAgentDispatchResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListAgentDispatchResponse\",\n  () => [\n    { no: 1, name: \"agent_dispatches\", kind: \"message\", T: AgentDispatch, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.AgentDispatch\n */\nexport const AgentDispatch = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AgentDispatch\",\n  () => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"agent_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"state\", kind: \"message\", T: AgentDispatchState },\n  ],\n);\n\n/**\n * @generated from message livekit.AgentDispatchState\n */\nexport const AgentDispatchState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AgentDispatchState\",\n  () => [\n    { no: 1, name: \"jobs\", kind: \"message\", T: Job, repeated: true },\n    { no: 2, name: \"created_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"deleted_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_egress.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { AudioCodec, ImageCodec, VideoCodec } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.EncodedFileType\n */\nexport const EncodedFileType = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.EncodedFileType\",\n  [\n    {no: 0, name: \"DEFAULT_FILETYPE\"},\n    {no: 1, name: \"MP4\"},\n    {no: 2, name: \"OGG\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SegmentedFileProtocol\n */\nexport const SegmentedFileProtocol = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SegmentedFileProtocol\",\n  [\n    {no: 0, name: \"DEFAULT_SEGMENTED_FILE_PROTOCOL\"},\n    {no: 1, name: \"HLS_PROTOCOL\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SegmentedFileSuffix\n */\nexport const SegmentedFileSuffix = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SegmentedFileSuffix\",\n  [\n    {no: 0, name: \"INDEX\"},\n    {no: 1, name: \"TIMESTAMP\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.ImageFileSuffix\n */\nexport const ImageFileSuffix = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.ImageFileSuffix\",\n  [\n    {no: 0, name: \"IMAGE_SUFFIX_INDEX\"},\n    {no: 1, name: \"IMAGE_SUFFIX_TIMESTAMP\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.StreamProtocol\n */\nexport const StreamProtocol = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.StreamProtocol\",\n  [\n    {no: 0, name: \"DEFAULT_PROTOCOL\"},\n    {no: 1, name: \"RTMP\"},\n    {no: 2, name: \"SRT\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.AudioMixing\n */\nexport const AudioMixing = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.AudioMixing\",\n  [\n    {no: 0, name: \"DEFAULT_MIXING\"},\n    {no: 1, name: \"DUAL_CHANNEL_AGENT\"},\n    {no: 2, name: \"DUAL_CHANNEL_ALTERNATE\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.EncodingOptionsPreset\n */\nexport const EncodingOptionsPreset = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.EncodingOptionsPreset\",\n  [\n    {no: 0, name: \"H264_720P_30\"},\n    {no: 1, name: \"H264_720P_60\"},\n    {no: 2, name: \"H264_1080P_30\"},\n    {no: 3, name: \"H264_1080P_60\"},\n    {no: 4, name: \"PORTRAIT_H264_720P_30\"},\n    {no: 5, name: \"PORTRAIT_H264_720P_60\"},\n    {no: 6, name: \"PORTRAIT_H264_1080P_30\"},\n    {no: 7, name: \"PORTRAIT_H264_1080P_60\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.EgressStatus\n */\nexport const EgressStatus = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.EgressStatus\",\n  [\n    {no: 0, name: \"EGRESS_STARTING\"},\n    {no: 1, name: \"EGRESS_ACTIVE\"},\n    {no: 2, name: \"EGRESS_ENDING\"},\n    {no: 3, name: \"EGRESS_COMPLETE\"},\n    {no: 4, name: \"EGRESS_FAILED\"},\n    {no: 5, name: \"EGRESS_ABORTED\"},\n    {no: 6, name: \"EGRESS_LIMIT_REACHED\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.EgressSourceType\n */\nexport const EgressSourceType = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.EgressSourceType\",\n  [\n    {no: 0, name: \"EGRESS_SOURCE_TYPE_WEB\", localName: \"WEB\"},\n    {no: 1, name: \"EGRESS_SOURCE_TYPE_SDK\", localName: \"SDK\"},\n  ],\n);\n\n/**\n * composite using a web browser\n *\n * @generated from message livekit.RoomCompositeEgressRequest\n */\nexport const RoomCompositeEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomCompositeEgressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layout\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"audio_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"audio_mixing\", kind: \"enum\", T: proto3.getEnumType(AudioMixing) },\n    { no: 4, name: \"video_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"custom_base_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 10, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 8, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 9, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ],\n);\n\n/**\n * record any website\n *\n * @generated from message livekit.WebEgressRequest\n */\nexport const WebEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.WebEgressRequest\",\n  () => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"audio_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"video_only\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"await_start_signal\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 6, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 7, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 8, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 9, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 10, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 11, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 13, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ],\n);\n\n/**\n * record audio and video from a single participant\n *\n * @generated from message livekit.ParticipantEgressRequest\n */\nexport const ParticipantEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ParticipantEgressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"screen_share\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 5, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 6, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 7, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 8, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 9, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ],\n);\n\n/**\n * containerize up to one audio and one video track\n *\n * @generated from message livekit.TrackCompositeEgressRequest\n */\nexport const TrackCompositeEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackCompositeEgressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"audio_track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"video_track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"file\", kind: \"message\", T: EncodedFileOutput, oneof: \"output\" },\n    { no: 5, name: \"stream\", kind: \"message\", T: StreamOutput, oneof: \"output\" },\n    { no: 8, name: \"segments\", kind: \"message\", T: SegmentedFileOutput, oneof: \"output\" },\n    { no: 6, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 7, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 11, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 12, name: \"stream_outputs\", kind: \"message\", T: StreamOutput, repeated: true },\n    { no: 13, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n    { no: 14, name: \"image_outputs\", kind: \"message\", T: ImageOutput, repeated: true },\n  ],\n);\n\n/**\n * record tracks individually, without transcoding\n *\n * @generated from message livekit.TrackEgressRequest\n */\nexport const TrackEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackEgressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"file\", kind: \"message\", T: DirectFileOutput, oneof: \"output\" },\n    { no: 4, name: \"websocket_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"output\" },\n  ],\n);\n\n/**\n * @generated from message livekit.EncodedFileOutput\n */\nexport const EncodedFileOutput = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.EncodedFileOutput\",\n  () => [\n    { no: 1, name: \"file_type\", kind: \"enum\", T: proto3.getEnumType(EncodedFileType) },\n    { no: 2, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 4, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 5, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 7, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ],\n);\n\n/**\n * Used to generate HLS segments or other kind of segmented output\n *\n * @generated from message livekit.SegmentedFileOutput\n */\nexport const SegmentedFileOutput = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SegmentedFileOutput\",\n  () => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileProtocol) },\n    { no: 2, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"live_playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"segment_duration\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(SegmentedFileSuffix) },\n    { no: 8, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 6, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 7, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 9, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ],\n);\n\n/**\n * @generated from message livekit.DirectFileOutput\n */\nexport const DirectFileOutput = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DirectFileOutput\",\n  () => [\n    { no: 1, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ],\n);\n\n/**\n * @generated from message livekit.ImageOutput\n */\nexport const ImageOutput = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ImageOutput\",\n  () => [\n    { no: 1, name: \"capture_interval\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"filename_suffix\", kind: \"enum\", T: proto3.getEnumType(ImageFileSuffix) },\n    { no: 6, name: \"image_codec\", kind: \"enum\", T: proto3.getEnumType(ImageCodec) },\n    { no: 7, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 9, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 10, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 11, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ],\n);\n\n/**\n * @generated from message livekit.S3Upload\n */\nexport const S3Upload = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.S3Upload\",\n  () => [\n    { no: 1, name: \"access_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"secret\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"session_token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"endpoint\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"force_path_style\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"metadata\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 8, name: \"tagging\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"content_disposition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"proxy\", kind: \"message\", T: ProxyConfig },\n  ],\n);\n\n/**\n * @generated from message livekit.GCPUpload\n */\nexport const GCPUpload = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.GCPUpload\",\n  () => [\n    { no: 1, name: \"credentials\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"proxy\", kind: \"message\", T: ProxyConfig },\n  ],\n);\n\n/**\n * @generated from message livekit.AzureBlobUpload\n */\nexport const AzureBlobUpload = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AzureBlobUpload\",\n  () => [\n    { no: 1, name: \"account_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"account_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"container_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.AliOSSUpload\n */\nexport const AliOSSUpload = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AliOSSUpload\",\n  () => [\n    { no: 1, name: \"access_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"secret\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"endpoint\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"bucket\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ProxyConfig\n */\nexport const ProxyConfig = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ProxyConfig\",\n  () => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.StreamOutput\n */\nexport const StreamOutput = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StreamOutput\",\n  () => [\n    { no: 1, name: \"protocol\", kind: \"enum\", T: proto3.getEnumType(StreamProtocol) },\n    { no: 2, name: \"urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.EncodingOptions\n */\nexport const EncodingOptions = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.EncodingOptions\",\n  () => [\n    { no: 1, name: \"width\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"height\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"depth\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"framerate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 5, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    { no: 6, name: \"audio_bitrate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 11, name: \"audio_quality\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 7, name: \"audio_frequency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 8, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    { no: 9, name: \"video_bitrate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 12, name: \"video_quality\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 10, name: \"key_frame_interval\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateLayoutRequest\n */\nexport const UpdateLayoutRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateLayoutRequest\",\n  () => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layout\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateStreamRequest\n */\nexport const UpdateStreamRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateStreamRequest\",\n  () => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"add_output_urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"remove_output_urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListEgressRequest\n */\nexport const ListEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListEgressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"active\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ListEgressResponse\n */\nexport const ListEgressResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListEgressResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: EgressInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.StopEgressRequest\n */\nexport const StopEgressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StopEgressRequest\",\n  () => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.EgressInfo\n */\nexport const EgressInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.EgressInfo\",\n  () => [\n    { no: 1, name: \"egress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 26, name: \"source_type\", kind: \"enum\", T: proto3.getEnumType(EgressSourceType) },\n    { no: 3, name: \"status\", kind: \"enum\", T: proto3.getEnumType(EgressStatus) },\n    { no: 10, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 11, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 18, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 21, name: \"details\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 22, name: \"error_code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"room_composite\", kind: \"message\", T: RoomCompositeEgressRequest, oneof: \"request\" },\n    { no: 14, name: \"web\", kind: \"message\", T: WebEgressRequest, oneof: \"request\" },\n    { no: 19, name: \"participant\", kind: \"message\", T: ParticipantEgressRequest, oneof: \"request\" },\n    { no: 5, name: \"track_composite\", kind: \"message\", T: TrackCompositeEgressRequest, oneof: \"request\" },\n    { no: 6, name: \"track\", kind: \"message\", T: TrackEgressRequest, oneof: \"request\" },\n    { no: 7, name: \"stream\", kind: \"message\", T: StreamInfoList, oneof: \"result\" },\n    { no: 8, name: \"file\", kind: \"message\", T: FileInfo, oneof: \"result\" },\n    { no: 12, name: \"segments\", kind: \"message\", T: SegmentsInfo, oneof: \"result\" },\n    { no: 15, name: \"stream_results\", kind: \"message\", T: StreamInfo, repeated: true },\n    { no: 16, name: \"file_results\", kind: \"message\", T: FileInfo, repeated: true },\n    { no: 17, name: \"segment_results\", kind: \"message\", T: SegmentsInfo, repeated: true },\n    { no: 20, name: \"image_results\", kind: \"message\", T: ImagesInfo, repeated: true },\n    { no: 23, name: \"manifest_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 25, name: \"backup_storage_used\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.StreamInfoList\n * @deprecated\n */\nexport const StreamInfoList = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StreamInfoList\",\n  () => [\n    { no: 1, name: \"info\", kind: \"message\", T: StreamInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.StreamInfo\n */\nexport const StreamInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StreamInfo\",\n  () => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"status\", kind: \"enum\", T: proto3.getEnumType(StreamInfo_Status) },\n    { no: 6, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from enum livekit.StreamInfo.Status\n */\nexport const StreamInfo_Status = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.StreamInfo.Status\",\n  [\n    {no: 0, name: \"ACTIVE\"},\n    {no: 1, name: \"FINISHED\"},\n    {no: 2, name: \"FAILED\"},\n  ],\n);\n\n/**\n * @generated from message livekit.FileInfo\n */\nexport const FileInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.FileInfo\",\n  () => [\n    { no: 1, name: \"filename\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"size\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 5, name: \"location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SegmentsInfo\n */\nexport const SegmentsInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SegmentsInfo\",\n  () => [\n    { no: 1, name: \"playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"live_playlist_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"duration\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"size\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 4, name: \"playlist_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"live_playlist_location\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"segment_count\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 6, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 7, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ImagesInfo\n */\nexport const ImagesInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ImagesInfo\",\n  () => [\n    { no: 4, name: \"filename_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 1, name: \"image_count\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 3, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.AutoParticipantEgress\n */\nexport const AutoParticipantEgress = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AutoParticipantEgress\",\n  () => [\n    { no: 1, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(EncodingOptionsPreset), oneof: \"options\" },\n    { no: 2, name: \"advanced\", kind: \"message\", T: EncodingOptions, oneof: \"options\" },\n    { no: 3, name: \"file_outputs\", kind: \"message\", T: EncodedFileOutput, repeated: true },\n    { no: 4, name: \"segment_outputs\", kind: \"message\", T: SegmentedFileOutput, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.AutoTrackEgress\n */\nexport const AutoTrackEgress = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AutoTrackEgress\",\n  () => [\n    { no: 1, name: \"filepath\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"disable_manifest\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"s3\", kind: \"message\", T: S3Upload, oneof: \"output\" },\n    { no: 3, name: \"gcp\", kind: \"message\", T: GCPUpload, oneof: \"output\" },\n    { no: 4, name: \"azure\", kind: \"message\", T: AzureBlobUpload, oneof: \"output\" },\n    { no: 6, name: \"aliOSS\", kind: \"message\", T: AliOSSUpload, oneof: \"output\" },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_ingress.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { AudioCodec, TrackInfo, TrackSource, VideoCodec, VideoLayer } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.IngressInput\n */\nexport const IngressInput = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.IngressInput\",\n  [\n    {no: 0, name: \"RTMP_INPUT\"},\n    {no: 1, name: \"WHIP_INPUT\"},\n    {no: 2, name: \"URL_INPUT\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.IngressAudioEncodingPreset\n */\nexport const IngressAudioEncodingPreset = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.IngressAudioEncodingPreset\",\n  [\n    {no: 0, name: \"OPUS_STEREO_96KBPS\"},\n    {no: 1, name: \"OPUS_MONO_64KBS\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.IngressVideoEncodingPreset\n */\nexport const IngressVideoEncodingPreset = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.IngressVideoEncodingPreset\",\n  [\n    {no: 0, name: \"H264_720P_30FPS_3_LAYERS\"},\n    {no: 1, name: \"H264_1080P_30FPS_3_LAYERS\"},\n    {no: 2, name: \"H264_540P_25FPS_2_LAYERS\"},\n    {no: 3, name: \"H264_720P_30FPS_1_LAYER\"},\n    {no: 4, name: \"H264_1080P_30FPS_1_LAYER\"},\n    {no: 5, name: \"H264_720P_30FPS_3_LAYERS_HIGH_MOTION\"},\n    {no: 6, name: \"H264_1080P_30FPS_3_LAYERS_HIGH_MOTION\"},\n    {no: 7, name: \"H264_540P_25FPS_2_LAYERS_HIGH_MOTION\"},\n    {no: 8, name: \"H264_720P_30FPS_1_LAYER_HIGH_MOTION\"},\n    {no: 9, name: \"H264_1080P_30FPS_1_LAYER_HIGH_MOTION\"},\n  ],\n);\n\n/**\n * @generated from message livekit.CreateIngressRequest\n */\nexport const CreateIngressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateIngressRequest\",\n  () => [\n    { no: 1, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    { no: 9, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 11, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n    { no: 12, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressAudioOptions\n */\nexport const IngressAudioOptions = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressAudioOptions\",\n  () => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressAudioEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressAudioEncodingOptions, oneof: \"encoding_options\" },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressVideoOptions\n */\nexport const IngressVideoOptions = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressVideoOptions\",\n  () => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 3, name: \"preset\", kind: \"enum\", T: proto3.getEnumType(IngressVideoEncodingPreset), oneof: \"encoding_options\" },\n    { no: 4, name: \"options\", kind: \"message\", T: IngressVideoEncodingOptions, oneof: \"encoding_options\" },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressAudioEncodingOptions\n */\nexport const IngressAudioEncodingOptions = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressAudioEncodingOptions\",\n  () => [\n    { no: 1, name: \"audio_codec\", kind: \"enum\", T: proto3.getEnumType(AudioCodec) },\n    { no: 2, name: \"bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"channels\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressVideoEncodingOptions\n */\nexport const IngressVideoEncodingOptions = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressVideoEncodingOptions\",\n  () => [\n    { no: 1, name: \"video_codec\", kind: \"enum\", T: proto3.getEnumType(VideoCodec) },\n    { no: 2, name: \"frame_rate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n    { no: 3, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressInfo\n */\nexport const IngressInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressInfo\",\n  () => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"stream_key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"input_type\", kind: \"enum\", T: proto3.getEnumType(IngressInput) },\n    { no: 13, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 15, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n    { no: 8, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 14, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"reusable\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"state\", kind: \"message\", T: IngressState },\n    { no: 16, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ],\n);\n\n/**\n * @generated from message livekit.IngressState\n */\nexport const IngressState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.IngressState\",\n  () => [\n    { no: 1, name: \"status\", kind: \"enum\", T: proto3.getEnumType(IngressState_Status) },\n    { no: 2, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"video\", kind: \"message\", T: InputVideoState },\n    { no: 4, name: \"audio\", kind: \"message\", T: InputAudioState },\n    { no: 5, name: \"room_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 8, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 10, name: \"updated_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 9, name: \"resource_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"tracks\", kind: \"message\", T: TrackInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from enum livekit.IngressState.Status\n */\nexport const IngressState_Status = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.IngressState.Status\",\n  [\n    {no: 0, name: \"ENDPOINT_INACTIVE\"},\n    {no: 1, name: \"ENDPOINT_BUFFERING\"},\n    {no: 2, name: \"ENDPOINT_PUBLISHING\"},\n    {no: 3, name: \"ENDPOINT_ERROR\"},\n    {no: 4, name: \"ENDPOINT_COMPLETE\"},\n  ],\n);\n\n/**\n * @generated from message livekit.InputVideoState\n */\nexport const InputVideoState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.InputVideoState\",\n  () => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"average_bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"framerate\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n  ],\n);\n\n/**\n * @generated from message livekit.InputAudioState\n */\nexport const InputAudioState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.InputAudioState\",\n  () => [\n    { no: 1, name: \"mime_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"average_bitrate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"channels\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"sample_rate\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateIngressRequest\n */\nexport const UpdateIngressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateIngressRequest\",\n  () => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"bypass_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 10, name: \"enable_transcoding\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"audio\", kind: \"message\", T: IngressAudioOptions },\n    { no: 7, name: \"video\", kind: \"message\", T: IngressVideoOptions },\n    { no: 11, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListIngressRequest\n */\nexport const ListIngressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListIngressRequest\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ListIngressResponse\n */\nexport const ListIngressResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListIngressResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: IngressInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteIngressRequest\n */\nexport const DeleteIngressRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteIngressRequest\",\n  () => [\n    { no: 1, name: \"ingress_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_room.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { RoomAgentDispatch } from \"./livekit_agent_dispatch_pb.js\";\nimport { AutoParticipantEgress, AutoTrackEgress, RoomCompositeEgressRequest } from \"./livekit_egress_pb.js\";\nimport { DataPacket_Kind, ParticipantInfo, ParticipantPermission, ParticipantTracks, Room, TrackInfo } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from message livekit.CreateRoomRequest\n */\nexport const CreateRoomRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateRoomRequest\",\n  () => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"room_preset\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 10, name: \"departure_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"node_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"egress\", kind: \"message\", T: RoomEgress },\n    { no: 7, name: \"min_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"max_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"sync_streams\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"replay_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomEgress\n */\nexport const RoomEgress = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomEgress\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: RoomCompositeEgressRequest },\n    { no: 3, name: \"participant\", kind: \"message\", T: AutoParticipantEgress },\n    { no: 2, name: \"tracks\", kind: \"message\", T: AutoTrackEgress },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomAgent\n */\nexport const RoomAgent = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomAgent\",\n  () => [\n    { no: 1, name: \"dispatches\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListRoomsRequest\n */\nexport const ListRoomsRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListRoomsRequest\",\n  () => [\n    { no: 1, name: \"names\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListRoomsResponse\n */\nexport const ListRoomsResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListRoomsResponse\",\n  () => [\n    { no: 1, name: \"rooms\", kind: \"message\", T: Room, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteRoomRequest\n */\nexport const DeleteRoomRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteRoomRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteRoomResponse\n */\nexport const DeleteRoomResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteRoomResponse\",\n  [],\n);\n\n/**\n * @generated from message livekit.ListParticipantsRequest\n */\nexport const ListParticipantsRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListParticipantsRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ListParticipantsResponse\n */\nexport const ListParticipantsResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListParticipantsResponse\",\n  () => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomParticipantIdentity\n */\nexport const RoomParticipantIdentity = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomParticipantIdentity\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RemoveParticipantResponse\n */\nexport const RemoveParticipantResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RemoveParticipantResponse\",\n  [],\n);\n\n/**\n * @generated from message livekit.MuteRoomTrackRequest\n */\nexport const MuteRoomTrackRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MuteRoomTrackRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.MuteRoomTrackResponse\n */\nexport const MuteRoomTrackResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MuteRoomTrackResponse\",\n  () => [\n    { no: 1, name: \"track\", kind: \"message\", T: TrackInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateParticipantRequest\n */\nexport const UpdateParticipantRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateParticipantRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"permission\", kind: \"message\", T: ParticipantPermission },\n    { no: 5, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateSubscriptionsRequest\n */\nexport const UpdateSubscriptionsRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSubscriptionsRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true },\n  ],\n);\n\n/**\n * empty for now\n *\n * @generated from message livekit.UpdateSubscriptionsResponse\n */\nexport const UpdateSubscriptionsResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSubscriptionsResponse\",\n  [],\n);\n\n/**\n * @generated from message livekit.SendDataRequest\n */\nexport const SendDataRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SendDataRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"data\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 3, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(DataPacket_Kind) },\n    { no: 4, name: \"destination_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"destination_identities\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"topic\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"nonce\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SendDataResponse\n */\nexport const SendDataResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SendDataResponse\",\n  [],\n);\n\n/**\n * @generated from message livekit.UpdateRoomMetadataRequest\n */\nexport const UpdateRoomMetadataRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateRoomMetadataRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomConfiguration\n */\nexport const RoomConfiguration = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomConfiguration\",\n  () => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"empty_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"departure_timeout\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 4, name: \"max_participants\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"egress\", kind: \"message\", T: RoomEgress },\n    { no: 7, name: \"min_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"max_playout_delay\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 9, name: \"sync_streams\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"agents\", kind: \"message\", T: RoomAgentDispatch, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ForwardParticipantRequest\n */\nexport const ForwardParticipantRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ForwardParticipantRequest\",\n  () => [\n    { no: 1, name: \"room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"destination_room\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ForwardParticipantResponse\n */\nexport const ForwardParticipantResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ForwardParticipantResponse\",\n  [],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_rtc.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { AudioTrackFeature, BackupCodecPolicy, ClientConfiguration, Codec, ConnectionQuality, DisconnectReason, Encryption_Type, ParticipantInfo, ParticipantTracks, Room, ServerInfo, SpeakerInfo, SubscriptionError, TrackInfo, TrackSource, TrackType, VideoLayer, VideoQuality } from \"./livekit_models_pb.js\";\n\n/**\n * @generated from enum livekit.SignalTarget\n */\nexport const SignalTarget = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SignalTarget\",\n  [\n    {no: 0, name: \"PUBLISHER\"},\n    {no: 1, name: \"SUBSCRIBER\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.StreamState\n */\nexport const StreamState = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.StreamState\",\n  [\n    {no: 0, name: \"ACTIVE\"},\n    {no: 1, name: \"PAUSED\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.CandidateProtocol\n */\nexport const CandidateProtocol = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.CandidateProtocol\",\n  [\n    {no: 0, name: \"UDP\"},\n    {no: 1, name: \"TCP\"},\n    {no: 2, name: \"TLS\"},\n  ],\n);\n\n/**\n * @generated from message livekit.SignalRequest\n */\nexport const SignalRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SignalRequest\",\n  () => [\n    { no: 1, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 4, name: \"add_track\", kind: \"message\", T: AddTrackRequest, oneof: \"message\" },\n    { no: 5, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 6, name: \"subscription\", kind: \"message\", T: UpdateSubscription, oneof: \"message\" },\n    { no: 7, name: \"track_setting\", kind: \"message\", T: UpdateTrackSettings, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 10, name: \"update_layers\", kind: \"message\", T: UpdateVideoLayers, oneof: \"message\" },\n    { no: 11, name: \"subscription_permission\", kind: \"message\", T: SubscriptionPermission, oneof: \"message\" },\n    { no: 12, name: \"sync_state\", kind: \"message\", T: SyncState, oneof: \"message\" },\n    { no: 13, name: \"simulate\", kind: \"message\", T: SimulateScenario, oneof: \"message\" },\n    { no: 14, name: \"ping\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"message\" },\n    { no: 15, name: \"update_metadata\", kind: \"message\", T: UpdateParticipantMetadata, oneof: \"message\" },\n    { no: 16, name: \"ping_req\", kind: \"message\", T: Ping, oneof: \"message\" },\n    { no: 17, name: \"update_audio_track\", kind: \"message\", T: UpdateLocalAudioTrack, oneof: \"message\" },\n    { no: 18, name: \"update_video_track\", kind: \"message\", T: UpdateLocalVideoTrack, oneof: \"message\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SignalResponse\n */\nexport const SignalResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SignalResponse\",\n  () => [\n    { no: 1, name: \"join\", kind: \"message\", T: JoinResponse, oneof: \"message\" },\n    { no: 2, name: \"answer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 3, name: \"offer\", kind: \"message\", T: SessionDescription, oneof: \"message\" },\n    { no: 4, name: \"trickle\", kind: \"message\", T: TrickleRequest, oneof: \"message\" },\n    { no: 5, name: \"update\", kind: \"message\", T: ParticipantUpdate, oneof: \"message\" },\n    { no: 6, name: \"track_published\", kind: \"message\", T: TrackPublishedResponse, oneof: \"message\" },\n    { no: 8, name: \"leave\", kind: \"message\", T: LeaveRequest, oneof: \"message\" },\n    { no: 9, name: \"mute\", kind: \"message\", T: MuteTrackRequest, oneof: \"message\" },\n    { no: 10, name: \"speakers_changed\", kind: \"message\", T: SpeakersChanged, oneof: \"message\" },\n    { no: 11, name: \"room_update\", kind: \"message\", T: RoomUpdate, oneof: \"message\" },\n    { no: 12, name: \"connection_quality\", kind: \"message\", T: ConnectionQualityUpdate, oneof: \"message\" },\n    { no: 13, name: \"stream_state_update\", kind: \"message\", T: StreamStateUpdate, oneof: \"message\" },\n    { no: 14, name: \"subscribed_quality_update\", kind: \"message\", T: SubscribedQualityUpdate, oneof: \"message\" },\n    { no: 15, name: \"subscription_permission_update\", kind: \"message\", T: SubscriptionPermissionUpdate, oneof: \"message\" },\n    { no: 16, name: \"refresh_token\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"message\" },\n    { no: 17, name: \"track_unpublished\", kind: \"message\", T: TrackUnpublishedResponse, oneof: \"message\" },\n    { no: 18, name: \"pong\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"message\" },\n    { no: 19, name: \"reconnect\", kind: \"message\", T: ReconnectResponse, oneof: \"message\" },\n    { no: 20, name: \"pong_resp\", kind: \"message\", T: Pong, oneof: \"message\" },\n    { no: 21, name: \"subscription_response\", kind: \"message\", T: SubscriptionResponse, oneof: \"message\" },\n    { no: 22, name: \"request_response\", kind: \"message\", T: RequestResponse, oneof: \"message\" },\n    { no: 23, name: \"track_subscribed\", kind: \"message\", T: TrackSubscribed, oneof: \"message\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SimulcastCodec\n */\nexport const SimulcastCodec = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SimulcastCodec\",\n  () => [\n    { no: 1, name: \"codec\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.AddTrackRequest\n */\nexport const AddTrackRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.AddTrackRequest\",\n  () => [\n    { no: 1, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(TrackType) },\n    { no: 4, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"disable_dtx\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 8, name: \"source\", kind: \"enum\", T: proto3.getEnumType(TrackSource) },\n    { no: 9, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n    { no: 10, name: \"simulcast_codecs\", kind: \"message\", T: SimulcastCodec, repeated: true },\n    { no: 11, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"stereo\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"disable_red\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 14, name: \"encryption\", kind: \"enum\", T: proto3.getEnumType(Encryption_Type) },\n    { no: 15, name: \"stream\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 16, name: \"backup_codec_policy\", kind: \"enum\", T: proto3.getEnumType(BackupCodecPolicy) },\n  ],\n);\n\n/**\n * @generated from message livekit.TrickleRequest\n */\nexport const TrickleRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrickleRequest\",\n  () => [\n    { no: 1, name: \"candidateInit\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) },\n    { no: 3, name: \"final\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.MuteTrackRequest\n */\nexport const MuteTrackRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.MuteTrackRequest\",\n  () => [\n    { no: 1, name: \"sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"muted\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.JoinResponse\n */\nexport const JoinResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.JoinResponse\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room },\n    { no: 2, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 3, name: \"other_participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n    { no: 4, name: \"server_version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    { no: 6, name: \"subscriber_primary\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"alternative_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration },\n    { no: 9, name: \"server_region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"ping_timeout\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 11, name: \"ping_interval\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 12, name: \"server_info\", kind: \"message\", T: ServerInfo },\n    { no: 13, name: \"sif_trailer\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n    { no: 14, name: \"enabled_publish_codecs\", kind: \"message\", T: Codec, repeated: true },\n    { no: 15, name: \"fast_publish\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ReconnectResponse\n */\nexport const ReconnectResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ReconnectResponse\",\n  () => [\n    { no: 1, name: \"ice_servers\", kind: \"message\", T: ICEServer, repeated: true },\n    { no: 2, name: \"client_configuration\", kind: \"message\", T: ClientConfiguration },\n  ],\n);\n\n/**\n * @generated from message livekit.TrackPublishedResponse\n */\nexport const TrackPublishedResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackPublishedResponse\",\n  () => [\n    { no: 1, name: \"cid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track\", kind: \"message\", T: TrackInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.TrackUnpublishedResponse\n */\nexport const TrackUnpublishedResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackUnpublishedResponse\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SessionDescription\n */\nexport const SessionDescription = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SessionDescription\",\n  () => [\n    { no: 1, name: \"type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"sdp\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ParticipantUpdate\n */\nexport const ParticipantUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ParticipantUpdate\",\n  () => [\n    { no: 1, name: \"participants\", kind: \"message\", T: ParticipantInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateSubscription\n */\nexport const UpdateSubscription = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSubscription\",\n  () => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"subscribe\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"participant_tracks\", kind: \"message\", T: ParticipantTracks, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateTrackSettings\n */\nexport const UpdateTrackSettings = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateTrackSettings\",\n  () => [\n    { no: 1, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"disabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 5, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 6, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 7, name: \"fps\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 8, name: \"priority\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateLocalAudioTrack\n */\nexport const UpdateLocalAudioTrack = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateLocalAudioTrack\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"features\", kind: \"enum\", T: proto3.getEnumType(AudioTrackFeature), repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateLocalVideoTrack\n */\nexport const UpdateLocalVideoTrack = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateLocalVideoTrack\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"width\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"height\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.LeaveRequest\n */\nexport const LeaveRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.LeaveRequest\",\n  () => [\n    { no: 1, name: \"can_reconnect\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n    { no: 3, name: \"action\", kind: \"enum\", T: proto3.getEnumType(LeaveRequest_Action) },\n    { no: 4, name: \"regions\", kind: \"message\", T: RegionSettings },\n  ],\n);\n\n/**\n * indicates action clients should take on receiving this message\n *\n * @generated from enum livekit.LeaveRequest.Action\n */\nexport const LeaveRequest_Action = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.LeaveRequest.Action\",\n  [\n    {no: 0, name: \"DISCONNECT\"},\n    {no: 1, name: \"RESUME\"},\n    {no: 2, name: \"RECONNECT\"},\n  ],\n);\n\n/**\n * message to indicate published video track dimensions are changing\n *\n * @generated from message livekit.UpdateVideoLayers\n * @deprecated\n */\nexport const UpdateVideoLayers = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateVideoLayers\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"layers\", kind: \"message\", T: VideoLayer, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateParticipantMetadata\n */\nexport const UpdateParticipantMetadata = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateParticipantMetadata\",\n  () => [\n    { no: 1, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 4, name: \"request_id\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ICEServer\n */\nexport const ICEServer = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ICEServer\",\n  () => [\n    { no: 1, name: \"urls\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"credential\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SpeakersChanged\n */\nexport const SpeakersChanged = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SpeakersChanged\",\n  () => [\n    { no: 1, name: \"speakers\", kind: \"message\", T: SpeakerInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RoomUpdate\n */\nexport const RoomUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RoomUpdate\",\n  () => [\n    { no: 1, name: \"room\", kind: \"message\", T: Room },\n  ],\n);\n\n/**\n * @generated from message livekit.ConnectionQualityInfo\n */\nexport const ConnectionQualityInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ConnectionQualityInfo\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(ConnectionQuality) },\n    { no: 3, name: \"score\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n  ],\n);\n\n/**\n * @generated from message livekit.ConnectionQualityUpdate\n */\nexport const ConnectionQualityUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ConnectionQualityUpdate\",\n  () => [\n    { no: 1, name: \"updates\", kind: \"message\", T: ConnectionQualityInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.StreamStateInfo\n */\nexport const StreamStateInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StreamStateInfo\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"state\", kind: \"enum\", T: proto3.getEnumType(StreamState) },\n  ],\n);\n\n/**\n * @generated from message livekit.StreamStateUpdate\n */\nexport const StreamStateUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.StreamStateUpdate\",\n  () => [\n    { no: 1, name: \"stream_states\", kind: \"message\", T: StreamStateInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscribedQuality\n */\nexport const SubscribedQuality = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscribedQuality\",\n  () => [\n    { no: 1, name: \"quality\", kind: \"enum\", T: proto3.getEnumType(VideoQuality) },\n    { no: 2, name: \"enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscribedCodec\n */\nexport const SubscribedCodec = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscribedCodec\",\n  () => [\n    { no: 1, name: \"codec\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"qualities\", kind: \"message\", T: SubscribedQuality, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscribedQualityUpdate\n */\nexport const SubscribedQualityUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscribedQualityUpdate\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"subscribed_qualities\", kind: \"message\", T: SubscribedQuality, repeated: true },\n    { no: 3, name: \"subscribed_codecs\", kind: \"message\", T: SubscribedCodec, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.TrackPermission\n */\nexport const TrackPermission = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackPermission\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"all_tracks\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 3, name: \"track_sids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscriptionPermission\n */\nexport const SubscriptionPermission = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscriptionPermission\",\n  () => [\n    { no: 1, name: \"all_participants\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"track_permissions\", kind: \"message\", T: TrackPermission, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscriptionPermissionUpdate\n */\nexport const SubscriptionPermissionUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscriptionPermissionUpdate\",\n  () => [\n    { no: 1, name: \"participant_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"allowed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SyncState\n */\nexport const SyncState = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SyncState\",\n  () => [\n    { no: 1, name: \"answer\", kind: \"message\", T: SessionDescription },\n    { no: 2, name: \"subscription\", kind: \"message\", T: UpdateSubscription },\n    { no: 3, name: \"publish_tracks\", kind: \"message\", T: TrackPublishedResponse, repeated: true },\n    { no: 4, name: \"data_channels\", kind: \"message\", T: DataChannelInfo, repeated: true },\n    { no: 5, name: \"offer\", kind: \"message\", T: SessionDescription },\n    { no: 6, name: \"track_sids_disabled\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.DataChannelInfo\n */\nexport const DataChannelInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DataChannelInfo\",\n  () => [\n    { no: 1, name: \"label\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"id\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 3, name: \"target\", kind: \"enum\", T: proto3.getEnumType(SignalTarget) },\n  ],\n);\n\n/**\n * @generated from message livekit.SimulateScenario\n */\nexport const SimulateScenario = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SimulateScenario\",\n  () => [\n    { no: 1, name: \"speaker_update\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, oneof: \"scenario\" },\n    { no: 2, name: \"node_failure\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 3, name: \"migration\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 4, name: \"server_leave\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 5, name: \"switch_candidate_protocol\", kind: \"enum\", T: proto3.getEnumType(CandidateProtocol), oneof: \"scenario\" },\n    { no: 6, name: \"subscriber_bandwidth\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, oneof: \"scenario\" },\n    { no: 7, name: \"disconnect_signal_on_resume\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 8, name: \"disconnect_signal_on_resume_no_messages\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n    { no: 9, name: \"leave_request_full_reconnect\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"scenario\" },\n  ],\n);\n\n/**\n * @generated from message livekit.Ping\n */\nexport const Ping = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Ping\",\n  () => [\n    { no: 1, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"rtt\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.Pong\n */\nexport const Pong = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.Pong\",\n  () => [\n    { no: 1, name: \"last_ping_timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"timestamp\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.RegionSettings\n */\nexport const RegionSettings = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RegionSettings\",\n  () => [\n    { no: 1, name: \"regions\", kind: \"message\", T: RegionInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.RegionInfo\n */\nexport const RegionInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RegionInfo\",\n  () => [\n    { no: 1, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"distance\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SubscriptionResponse\n */\nexport const SubscriptionResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SubscriptionResponse\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"err\", kind: \"enum\", T: proto3.getEnumType(SubscriptionError) },\n  ],\n);\n\n/**\n * @generated from message livekit.RequestResponse\n */\nexport const RequestResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.RequestResponse\",\n  () => [\n    { no: 1, name: \"request_id\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 2, name: \"reason\", kind: \"enum\", T: proto3.getEnumType(RequestResponse_Reason) },\n    { no: 3, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from enum livekit.RequestResponse.Reason\n */\nexport const RequestResponse_Reason = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.RequestResponse.Reason\",\n  [\n    {no: 0, name: \"OK\"},\n    {no: 1, name: \"NOT_FOUND\"},\n    {no: 2, name: \"NOT_ALLOWED\"},\n    {no: 3, name: \"LIMIT_EXCEEDED\"},\n  ],\n);\n\n/**\n * @generated from message livekit.TrackSubscribed\n */\nexport const TrackSubscribed = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TrackSubscribed\",\n  () => [\n    { no: 1, name: \"track_sid\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_sip.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Duration, proto3 } from \"@bufbuild/protobuf\";\nimport { DisconnectReason, ListUpdate, Pagination } from \"./livekit_models_pb.js\";\nimport { RoomConfiguration } from \"./livekit_room_pb.js\";\n\n/**\n * @generated from enum livekit.SIPStatusCode\n */\nexport const SIPStatusCode = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPStatusCode\",\n  [\n    {no: 0, name: \"SIP_STATUS_UNKNOWN\"},\n    {no: 100, name: \"SIP_STATUS_TRYING\"},\n    {no: 180, name: \"SIP_STATUS_RINGING\"},\n    {no: 181, name: \"SIP_STATUS_CALL_IS_FORWARDED\"},\n    {no: 182, name: \"SIP_STATUS_QUEUED\"},\n    {no: 183, name: \"SIP_STATUS_SESSION_PROGRESS\"},\n    {no: 200, name: \"SIP_STATUS_OK\"},\n    {no: 202, name: \"SIP_STATUS_ACCEPTED\"},\n    {no: 301, name: \"SIP_STATUS_MOVED_PERMANENTLY\"},\n    {no: 302, name: \"SIP_STATUS_MOVED_TEMPORARILY\"},\n    {no: 305, name: \"SIP_STATUS_USE_PROXY\"},\n    {no: 400, name: \"SIP_STATUS_BAD_REQUEST\"},\n    {no: 401, name: \"SIP_STATUS_UNAUTHORIZED\"},\n    {no: 402, name: \"SIP_STATUS_PAYMENT_REQUIRED\"},\n    {no: 403, name: \"SIP_STATUS_FORBIDDEN\"},\n    {no: 404, name: \"SIP_STATUS_NOTFOUND\"},\n    {no: 405, name: \"SIP_STATUS_METHOD_NOT_ALLOWED\"},\n    {no: 406, name: \"SIP_STATUS_NOT_ACCEPTABLE\"},\n    {no: 407, name: \"SIP_STATUS_PROXY_AUTH_REQUIRED\"},\n    {no: 408, name: \"SIP_STATUS_REQUEST_TIMEOUT\"},\n    {no: 409, name: \"SIP_STATUS_CONFLICT\"},\n    {no: 410, name: \"SIP_STATUS_GONE\"},\n    {no: 413, name: \"SIP_STATUS_REQUEST_ENTITY_TOO_LARGE\"},\n    {no: 414, name: \"SIP_STATUS_REQUEST_URI_TOO_LONG\"},\n    {no: 415, name: \"SIP_STATUS_UNSUPPORTED_MEDIA_TYPE\"},\n    {no: 416, name: \"SIP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE\"},\n    {no: 420, name: \"SIP_STATUS_BAD_EXTENSION\"},\n    {no: 421, name: \"SIP_STATUS_EXTENSION_REQUIRED\"},\n    {no: 423, name: \"SIP_STATUS_INTERVAL_TOO_BRIEF\"},\n    {no: 480, name: \"SIP_STATUS_TEMPORARILY_UNAVAILABLE\"},\n    {no: 481, name: \"SIP_STATUS_CALL_TRANSACTION_DOES_NOT_EXISTS\"},\n    {no: 482, name: \"SIP_STATUS_LOOP_DETECTED\"},\n    {no: 483, name: \"SIP_STATUS_TOO_MANY_HOPS\"},\n    {no: 484, name: \"SIP_STATUS_ADDRESS_INCOMPLETE\"},\n    {no: 485, name: \"SIP_STATUS_AMBIGUOUS\"},\n    {no: 486, name: \"SIP_STATUS_BUSY_HERE\"},\n    {no: 487, name: \"SIP_STATUS_REQUEST_TERMINATED\"},\n    {no: 488, name: \"SIP_STATUS_NOT_ACCEPTABLE_HERE\"},\n    {no: 500, name: \"SIP_STATUS_INTERNAL_SERVER_ERROR\"},\n    {no: 501, name: \"SIP_STATUS_NOT_IMPLEMENTED\"},\n    {no: 502, name: \"SIP_STATUS_BAD_GATEWAY\"},\n    {no: 503, name: \"SIP_STATUS_SERVICE_UNAVAILABLE\"},\n    {no: 504, name: \"SIP_STATUS_GATEWAY_TIMEOUT\"},\n    {no: 505, name: \"SIP_STATUS_VERSION_NOT_SUPPORTED\"},\n    {no: 513, name: \"SIP_STATUS_MESSAGE_TOO_LARGE\"},\n    {no: 600, name: \"SIP_STATUS_GLOBAL_BUSY_EVERYWHERE\"},\n    {no: 603, name: \"SIP_STATUS_GLOBAL_DECLINE\"},\n    {no: 604, name: \"SIP_STATUS_GLOBAL_DOES_NOT_EXIST_ANYWHERE\"},\n    {no: 606, name: \"SIP_STATUS_GLOBAL_NOT_ACCEPTABLE\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPTransport\n */\nexport const SIPTransport = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPTransport\",\n  [\n    {no: 0, name: \"SIP_TRANSPORT_AUTO\"},\n    {no: 1, name: \"SIP_TRANSPORT_UDP\"},\n    {no: 2, name: \"SIP_TRANSPORT_TCP\"},\n    {no: 3, name: \"SIP_TRANSPORT_TLS\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPHeaderOptions\n */\nexport const SIPHeaderOptions = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPHeaderOptions\",\n  [\n    {no: 0, name: \"SIP_NO_HEADERS\"},\n    {no: 1, name: \"SIP_X_HEADERS\"},\n    {no: 2, name: \"SIP_ALL_HEADERS\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPMediaEncryption\n */\nexport const SIPMediaEncryption = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPMediaEncryption\",\n  [\n    {no: 0, name: \"SIP_MEDIA_ENCRYPT_DISABLE\"},\n    {no: 1, name: \"SIP_MEDIA_ENCRYPT_ALLOW\"},\n    {no: 2, name: \"SIP_MEDIA_ENCRYPT_REQUIRE\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPCallStatus\n */\nexport const SIPCallStatus = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPCallStatus\",\n  [\n    {no: 0, name: \"SCS_CALL_INCOMING\"},\n    {no: 1, name: \"SCS_PARTICIPANT_JOINED\"},\n    {no: 2, name: \"SCS_ACTIVE\"},\n    {no: 3, name: \"SCS_DISCONNECTED\"},\n    {no: 4, name: \"SCS_ERROR\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPFeature\n */\nexport const SIPFeature = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPFeature\",\n  [\n    {no: 0, name: \"NONE\"},\n    {no: 1, name: \"KRISP_ENABLED\"},\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPCallDirection\n */\nexport const SIPCallDirection = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPCallDirection\",\n  [\n    {no: 0, name: \"SCD_UNKNOWN\"},\n    {no: 1, name: \"SCD_INBOUND\"},\n    {no: 2, name: \"SCD_OUTBOUND\"},\n  ],\n);\n\n/**\n * SIPStatus is returned as an error detail in CreateSIPParticipant.\n *\n * @generated from message livekit.SIPStatus\n */\nexport const SIPStatus = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPStatus\",\n  () => [\n    { no: 1, name: \"code\", kind: \"enum\", T: proto3.getEnumType(SIPStatusCode) },\n    { no: 2, name: \"status\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.CreateSIPTrunkRequest\n * @deprecated\n */\nexport const CreateSIPTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateSIPTrunkRequest\",\n  () => [\n    { no: 1, name: \"inbound_addresses\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"outbound_address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"outbound_number\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"inbound_numbers_regex\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 9, name: \"inbound_numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"inbound_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"inbound_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"outbound_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"outbound_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPTrunkInfo\n * @deprecated\n */\nexport const SIPTrunkInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPTrunkInfo\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 14, name: \"kind\", kind: \"enum\", T: proto3.getEnumType(SIPTrunkInfo_TrunkKind) },\n    { no: 2, name: \"inbound_addresses\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"outbound_address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"outbound_number\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 13, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n    { no: 5, name: \"inbound_numbers_regex\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 10, name: \"inbound_numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"inbound_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"inbound_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"outbound_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"outbound_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 12, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from enum livekit.SIPTrunkInfo.TrunkKind\n */\nexport const SIPTrunkInfo_TrunkKind = /*@__PURE__*/ proto3.makeEnum(\n  \"livekit.SIPTrunkInfo.TrunkKind\",\n  [\n    {no: 0, name: \"TRUNK_LEGACY\"},\n    {no: 1, name: \"TRUNK_INBOUND\"},\n    {no: 2, name: \"TRUNK_OUTBOUND\"},\n  ],\n);\n\n/**\n * @generated from message livekit.CreateSIPInboundTrunkRequest\n */\nexport const CreateSIPInboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateSIPInboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPInboundTrunkInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateSIPInboundTrunkRequest\n */\nexport const UpdateSIPInboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSIPInboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"replace\", kind: \"message\", T: SIPInboundTrunkInfo, oneof: \"action\" },\n    { no: 3, name: \"update\", kind: \"message\", T: SIPInboundTrunkUpdate, oneof: \"action\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPInboundTrunkInfo\n */\nexport const SIPInboundTrunkInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPInboundTrunkInfo\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"allowed_addresses\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 6, name: \"allowed_numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 7, name: \"auth_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"auth_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 10, name: \"headers_to_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 14, name: \"attributes_to_headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 15, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) },\n    { no: 11, name: \"ringing_timeout\", kind: \"message\", T: Duration },\n    { no: 12, name: \"max_call_duration\", kind: \"message\", T: Duration },\n    { no: 13, name: \"krisp_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 16, name: \"media_encryption\", kind: \"enum\", T: proto3.getEnumType(SIPMediaEncryption) },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPInboundTrunkUpdate\n */\nexport const SIPInboundTrunkUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPInboundTrunkUpdate\",\n  () => [\n    { no: 1, name: \"numbers\", kind: \"message\", T: ListUpdate },\n    { no: 2, name: \"allowed_addresses\", kind: \"message\", T: ListUpdate },\n    { no: 3, name: \"allowed_numbers\", kind: \"message\", T: ListUpdate },\n    { no: 4, name: \"auth_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"auth_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ],\n);\n\n/**\n * @generated from message livekit.CreateSIPOutboundTrunkRequest\n */\nexport const CreateSIPOutboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateSIPOutboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPOutboundTrunkInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateSIPOutboundTrunkRequest\n */\nexport const UpdateSIPOutboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSIPOutboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"replace\", kind: \"message\", T: SIPOutboundTrunkInfo, oneof: \"action\" },\n    { no: 3, name: \"update\", kind: \"message\", T: SIPOutboundTrunkUpdate, oneof: \"action\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPOutboundTrunkInfo\n */\nexport const SIPOutboundTrunkInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPOutboundTrunkInfo\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n    { no: 6, name: \"numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 7, name: \"auth_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"auth_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 10, name: \"headers_to_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 11, name: \"attributes_to_headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 12, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) },\n    { no: 13, name: \"media_encryption\", kind: \"enum\", T: proto3.getEnumType(SIPMediaEncryption) },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPOutboundTrunkUpdate\n */\nexport const SIPOutboundTrunkUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPOutboundTrunkUpdate\",\n  () => [\n    { no: 1, name: \"address\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport), opt: true },\n    { no: 3, name: \"numbers\", kind: \"message\", T: ListUpdate },\n    { no: 4, name: \"auth_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"auth_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n  ],\n);\n\n/**\n * @generated from message livekit.GetSIPInboundTrunkRequest\n */\nexport const GetSIPInboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.GetSIPInboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.GetSIPInboundTrunkResponse\n */\nexport const GetSIPInboundTrunkResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.GetSIPInboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPInboundTrunkInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.GetSIPOutboundTrunkRequest\n */\nexport const GetSIPOutboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.GetSIPOutboundTrunkRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.GetSIPOutboundTrunkResponse\n */\nexport const GetSIPOutboundTrunkResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.GetSIPOutboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"trunk\", kind: \"message\", T: SIPOutboundTrunkInfo },\n  ],\n);\n\n/**\n * @generated from message livekit.ListSIPTrunkRequest\n * @deprecated\n */\nexport const ListSIPTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPTrunkRequest\",\n  () => [\n    { no: 1, name: \"page\", kind: \"message\", T: Pagination },\n  ],\n);\n\n/**\n * @generated from message livekit.ListSIPTrunkResponse\n * @deprecated\n */\nexport const ListSIPTrunkResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPTrunkInfo, repeated: true },\n  ],\n);\n\n/**\n * ListSIPInboundTrunkRequest lists inbound trunks for given filters. If no filters are set, all trunks are listed.\n *\n * @generated from message livekit.ListSIPInboundTrunkRequest\n */\nexport const ListSIPInboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPInboundTrunkRequest\",\n  () => [\n    { no: 3, name: \"page\", kind: \"message\", T: Pagination },\n    { no: 1, name: \"trunk_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListSIPInboundTrunkResponse\n */\nexport const ListSIPInboundTrunkResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPInboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPInboundTrunkInfo, repeated: true },\n  ],\n);\n\n/**\n * ListSIPOutboundTrunkRequest lists outbound trunks for given filters. If no filters are set, all trunks are listed.\n *\n * @generated from message livekit.ListSIPOutboundTrunkRequest\n */\nexport const ListSIPOutboundTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPOutboundTrunkRequest\",\n  () => [\n    { no: 3, name: \"page\", kind: \"message\", T: Pagination },\n    { no: 1, name: \"trunk_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListSIPOutboundTrunkResponse\n */\nexport const ListSIPOutboundTrunkResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPOutboundTrunkResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPOutboundTrunkInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteSIPTrunkRequest\n */\nexport const DeleteSIPTrunkRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteSIPTrunkRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRuleDirect\n */\nexport const SIPDispatchRuleDirect = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleDirect\",\n  () => [\n    { no: 1, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"pin\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRuleIndividual\n */\nexport const SIPDispatchRuleIndividual = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleIndividual\",\n  () => [\n    { no: 1, name: \"room_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"pin\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRuleCallee\n */\nexport const SIPDispatchRuleCallee = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleCallee\",\n  () => [\n    { no: 1, name: \"room_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"pin\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"randomize\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRule\n */\nexport const SIPDispatchRule = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRule\",\n  () => [\n    { no: 1, name: \"dispatch_rule_direct\", kind: \"message\", T: SIPDispatchRuleDirect, oneof: \"rule\" },\n    { no: 2, name: \"dispatch_rule_individual\", kind: \"message\", T: SIPDispatchRuleIndividual, oneof: \"rule\" },\n    { no: 3, name: \"dispatch_rule_callee\", kind: \"message\", T: SIPDispatchRuleCallee, oneof: \"rule\" },\n  ],\n);\n\n/**\n * @generated from message livekit.CreateSIPDispatchRuleRequest\n */\nexport const CreateSIPDispatchRuleRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateSIPDispatchRuleRequest\",\n  () => [\n    { no: 10, name: \"dispatch_rule\", kind: \"message\", T: SIPDispatchRuleInfo },\n    { no: 1, name: \"rule\", kind: \"message\", T: SIPDispatchRule },\n    { no: 2, name: \"trunk_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 3, name: \"hide_phone_number\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"inbound_numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 8, name: \"room_preset\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"room_config\", kind: \"message\", T: RoomConfiguration },\n  ],\n);\n\n/**\n * @generated from message livekit.UpdateSIPDispatchRuleRequest\n */\nexport const UpdateSIPDispatchRuleRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.UpdateSIPDispatchRuleRequest\",\n  () => [\n    { no: 1, name: \"sip_dispatch_rule_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"replace\", kind: \"message\", T: SIPDispatchRuleInfo, oneof: \"action\" },\n    { no: 3, name: \"update\", kind: \"message\", T: SIPDispatchRuleUpdate, oneof: \"action\" },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRuleInfo\n */\nexport const SIPDispatchRuleInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleInfo\",\n  () => [\n    { no: 1, name: \"sip_dispatch_rule_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"rule\", kind: \"message\", T: SIPDispatchRule },\n    { no: 3, name: \"trunk_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"hide_phone_number\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 7, name: \"inbound_numbers\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 5, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 9, name: \"room_preset\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 10, name: \"room_config\", kind: \"message\", T: RoomConfiguration },\n    { no: 11, name: \"krisp_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 12, name: \"media_encryption\", kind: \"enum\", T: proto3.getEnumType(SIPMediaEncryption) },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPDispatchRuleUpdate\n */\nexport const SIPDispatchRuleUpdate = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPDispatchRuleUpdate\",\n  () => [\n    { no: 1, name: \"trunk_ids\", kind: \"message\", T: ListUpdate },\n    { no: 2, name: \"rule\", kind: \"message\", T: SIPDispatchRule },\n    { no: 3, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n);\n\n/**\n * ListSIPDispatchRuleRequest lists dispatch rules for given filters. If no filters are set, all rules are listed.\n *\n * @generated from message livekit.ListSIPDispatchRuleRequest\n */\nexport const ListSIPDispatchRuleRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPDispatchRuleRequest\",\n  () => [\n    { no: 3, name: \"page\", kind: \"message\", T: Pagination },\n    { no: 1, name: \"dispatch_rule_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"trunk_ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.ListSIPDispatchRuleResponse\n */\nexport const ListSIPDispatchRuleResponse = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.ListSIPDispatchRuleResponse\",\n  () => [\n    { no: 1, name: \"items\", kind: \"message\", T: SIPDispatchRuleInfo, repeated: true },\n  ],\n);\n\n/**\n * @generated from message livekit.DeleteSIPDispatchRuleRequest\n */\nexport const DeleteSIPDispatchRuleRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.DeleteSIPDispatchRuleRequest\",\n  () => [\n    { no: 1, name: \"sip_dispatch_rule_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPOutboundConfig\n */\nexport const SIPOutboundConfig = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPOutboundConfig\",\n  () => [\n    { no: 1, name: \"hostname\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n    { no: 3, name: \"auth_username\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"auth_password\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"headers_to_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 6, name: \"attributes_to_headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n);\n\n/**\n * A SIP Participant is a singular SIP session connected to a LiveKit room via\n * a SIP Trunk into a SIP DispatchRule\n *\n * @generated from message livekit.CreateSIPParticipantRequest\n */\nexport const CreateSIPParticipantRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.CreateSIPParticipantRequest\",\n  () => [\n    { no: 1, name: \"sip_trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 20, name: \"trunk\", kind: \"message\", T: SIPOutboundConfig },\n    { no: 2, name: \"sip_call_to\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 15, name: \"sip_number\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"participant_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 8, name: \"participant_metadata\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 9, name: \"participant_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 5, name: \"dtmf\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"play_ringtone\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 13, name: \"play_dialtone\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 10, name: \"hide_phone_number\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 16, name: \"headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 17, name: \"include_headers\", kind: \"enum\", T: proto3.getEnumType(SIPHeaderOptions) },\n    { no: 11, name: \"ringing_timeout\", kind: \"message\", T: Duration },\n    { no: 12, name: \"max_call_duration\", kind: \"message\", T: Duration },\n    { no: 14, name: \"krisp_enabled\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 18, name: \"media_encryption\", kind: \"enum\", T: proto3.getEnumType(SIPMediaEncryption) },\n    { no: 19, name: \"wait_until_answered\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPParticipantInfo\n */\nexport const SIPParticipantInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPParticipantInfo\",\n  () => [\n    { no: 1, name: \"participant_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"sip_call_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.TransferSIPParticipantRequest\n */\nexport const TransferSIPParticipantRequest = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.TransferSIPParticipantRequest\",\n  () => [\n    { no: 1, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"transfer_to\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"play_dialtone\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 5, name: \"headers\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPCallInfo\n */\nexport const SIPCallInfo = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPCallInfo\",\n  () => [\n    { no: 1, name: \"call_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"trunk_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 16, name: \"dispatch_rule_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 17, name: \"region\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"room_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"room_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"participant_identity\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 18, name: \"participant_attributes\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: {kind: \"scalar\", T: 9 /* ScalarType.STRING */} },\n    { no: 6, name: \"from_uri\", kind: \"message\", T: SIPUri },\n    { no: 7, name: \"to_uri\", kind: \"message\", T: SIPUri },\n    { no: 9, name: \"created_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 10, name: \"started_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 11, name: \"ended_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 14, name: \"enabled_features\", kind: \"enum\", T: proto3.getEnumType(SIPFeature), repeated: true },\n    { no: 15, name: \"call_direction\", kind: \"enum\", T: proto3.getEnumType(SIPCallDirection) },\n    { no: 8, name: \"call_status\", kind: \"enum\", T: proto3.getEnumType(SIPCallStatus) },\n    { no: 22, name: \"created_at_ns\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 23, name: \"started_at_ns\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 24, name: \"ended_at_ns\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 12, name: \"disconnect_reason\", kind: \"enum\", T: proto3.getEnumType(DisconnectReason) },\n    { no: 13, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 19, name: \"call_status_code\", kind: \"message\", T: SIPStatus },\n    { no: 20, name: \"audio_codec\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 21, name: \"media_encryption\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ],\n);\n\n/**\n * @generated from message livekit.SIPUri\n */\nexport const SIPUri = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.SIPUri\",\n  () => [\n    { no: 1, name: \"user\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"host\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"ip\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"port\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n    { no: 5, name: \"transport\", kind: \"enum\", T: proto3.getEnumType(SIPTransport) },\n  ],\n);\n\n", "// Copyright 2023 LiveKit, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// @generated by protoc-gen-es v1.10.0 with parameter \"target=dts+js\"\n// @generated from file livekit_webhook.proto (package livekit, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { proto3 } from \"@bufbuild/protobuf\";\nimport { ParticipantInfo, Room, TrackInfo } from \"./livekit_models_pb.js\";\nimport { EgressInfo } from \"./livekit_egress_pb.js\";\nimport { IngressInfo } from \"./livekit_ingress_pb.js\";\n\n/**\n * @generated from message livekit.WebhookEvent\n */\nexport const WebhookEvent = /*@__PURE__*/ proto3.makeMessageType(\n  \"livekit.WebhookEvent\",\n  () => [\n    { no: 1, name: \"event\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"room\", kind: \"message\", T: Room },\n    { no: 3, name: \"participant\", kind: \"message\", T: ParticipantInfo },\n    { no: 9, name: \"egress_info\", kind: \"message\", T: EgressInfo },\n    { no: 10, name: \"ingress_info\", kind: \"message\", T: IngressInfo },\n    { no: 8, name: \"track\", kind: \"message\", T: TrackInfo },\n    { no: 6, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"created_at\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 11, name: \"num_dropped\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n  ],\n);\n\n", "// Generated by genversion.\nexport const version = '1.36.1';\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nexport class JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nexport class JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n", "import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'Ed25519': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "export const unprotected = Symbol();\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n            return { name: 'Ed25519' };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyTypeWithJwk(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nexport class ProduceJWT {\n    constructor(payload = {}) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\n        }\n        else if (typeof input === 'string') {\n            this._payload = {\n                ...this._payload,\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\n            };\n        }\n        else {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\n        }\n        return this;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray(this._protectedHeader?.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.10.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { RoomConfiguration } from '@livekit/protocol';\nimport { TrackSource } from '@livekit/protocol';\nimport type { JWTPayload } from 'jose';\n\nexport function trackSourceToString(source: TrackSource) {\n  switch (source) {\n    case TrackSource.CAMERA:\n      return 'camera';\n    case TrackSource.MICROPHONE:\n      return 'microphone';\n    case TrackSource.SCREEN_SHARE:\n      return 'screen_share';\n    case TrackSource.SCREEN_SHARE_AUDIO:\n      return 'screen_share_audio';\n    default:\n      throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n  }\n}\n\nexport function claimsToJwtPayload(\n  grant: ClaimGrants,\n): JWTPayload & { video?: Record<string, unknown> } {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const claim: Record<string, any> = { ...grant };\n  // eslint-disable-next-line no-restricted-syntax\n  if (Array.isArray(claim.video?.canPublishSources)) {\n    claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n  }\n  return claim;\n}\n\nexport interface VideoGrant {\n  /** permission to create a room */\n  roomCreate?: boolean;\n\n  /** permission to join a room as a participant, room must be set */\n  roomJoin?: boolean;\n\n  /** permission to list rooms */\n  roomList?: boolean;\n\n  /** permission to start a recording */\n  roomRecord?: boolean;\n\n  /** permission to control a specific room, room must be set */\n  roomAdmin?: boolean;\n\n  /** name of the room, must be set for admin or join permissions */\n  room?: string;\n\n  /** permissions to control ingress, not specific to any room or ingress */\n  ingressAdmin?: boolean;\n\n  /**\n   * allow participant to publish. If neither canPublish or canSubscribe is set,\n   * both publish and subscribe are enabled\n   */\n  canPublish?: boolean;\n\n  /**\n   * TrackSource types that the participant is allowed to publish\n   * When set, it supersedes CanPublish. Only sources explicitly set here can be published\n   */\n  canPublishSources?: TrackSource[];\n\n  /** allow participant to subscribe to other tracks */\n  canSubscribe?: boolean;\n\n  /**\n   * allow participants to publish data, defaults to true if not set\n   */\n  canPublishData?: boolean;\n\n  /**\n   * by default, a participant is not allowed to update its own metadata\n   */\n  canUpdateOwnMetadata?: boolean;\n\n  /** participant isn't visible to others */\n  hidden?: boolean;\n\n  /** participant is recording the room, when set, allows room to indicate it's being recorded */\n  recorder?: boolean;\n\n  /** participant allowed to connect to LiveKit as Agent Framework worker */\n  agent?: boolean;\n\n  /** allow participant to subscribe to metrics */\n  canSubscribeMetrics?: boolean;\n\n  /** destination room which this participant can forward to */\n  destinationRoom?: string;\n}\n\nexport interface SIPGrant {\n  /** manage sip resources */\n  admin?: boolean;\n\n  /** make outbound calls */\n  call?: boolean;\n}\n\n/** @internal */\nexport interface ClaimGrants extends JWTPayload {\n  name?: string;\n  video?: VideoGrant;\n  sip?: SIPGrant;\n  kind?: string;\n  metadata?: string;\n  attributes?: Record<string, string>;\n  sha256?: string;\n  roomPreset?: string;\n  roomConfig?: RoomConfiguration;\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { RoomConfiguration } from '@livekit/protocol';\nimport * as jose from 'jose';\nimport type { ClaimGrants, SIPGrant, VideoGrant } from './grants.js';\nimport { claimsToJwtPayload } from './grants.js';\n\n// 6 hours\nconst defaultTTL = `6h`;\n\nconst defaultClockToleranceSeconds = 10;\n\nexport interface AccessTokenOptions {\n  /**\n   * amount of time before expiration\n   * expressed in seconds or a string describing a time span zeit/ms.\n   * eg: '2 days', '10h', or seconds as numeric value\n   */\n  ttl?: number | string;\n\n  /**\n   * display name for the participant, available as `Participant.name`\n   */\n  name?: string;\n\n  /**\n   * identity of the user, required for room join tokens\n   */\n  identity?: string;\n\n  /**\n   * custom metadata to be passed to participants\n   */\n  metadata?: string;\n\n  /**\n   * custom attributes to be passed to participants\n   */\n  attributes?: Record<string, string>;\n}\n\nexport class AccessToken {\n  private apiKey: string;\n\n  private apiSecret: string;\n\n  private grants: ClaimGrants;\n\n  identity?: string;\n\n  ttl: number | string;\n\n  /**\n   * Creates a new AccessToken\n   * @param apiKey - API Key, can be set in env LIVEKIT_API_KEY\n   * @param apiSecret - Secret, can be set in env LIVEKIT_API_SECRET\n   */\n  constructor(apiKey?: string, apiSecret?: string, options?: AccessTokenOptions) {\n    if (!apiKey) {\n      apiKey = process.env.LIVEKIT_API_KEY;\n    }\n    if (!apiSecret) {\n      apiSecret = process.env.LIVEKIT_API_SECRET;\n    }\n    if (!apiKey || !apiSecret) {\n      throw Error('api-key and api-secret must be set');\n    }\n    // @ts-expect-error we're not including dom lib for the server sdk so document is not defined\n    else if (typeof document !== 'undefined') {\n      // check against document rather than window because deno provides window\n      console.error(\n        'You should not include your API secret in your web client bundle.\\n\\n' +\n          'Your web client should request a token from your backend server which should then use ' +\n          'the API secret to generate a token. See https://docs.livekit.io/client/connect/',\n      );\n    }\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.grants = {};\n    this.identity = options?.identity;\n    this.ttl = options?.ttl || defaultTTL;\n    if (typeof this.ttl === 'number') {\n      this.ttl = `${this.ttl}s`;\n    }\n    if (options?.metadata) {\n      this.metadata = options.metadata;\n    }\n    if (options?.attributes) {\n      this.attributes = options.attributes;\n    }\n    if (options?.name) {\n      this.name = options.name;\n    }\n  }\n\n  /**\n   * Adds a video grant to this token.\n   * @param grant -\n   */\n  addGrant(grant: VideoGrant) {\n    this.grants.video = { ...(this.grants.video ?? {}), ...grant };\n  }\n\n  /**\n   * Adds a SIP grant to this token.\n   * @param grant -\n   */\n  addSIPGrant(grant: SIPGrant) {\n    this.grants.sip = { ...(this.grants.sip ?? {}), ...grant };\n  }\n\n  get name(): string | undefined {\n    return this.grants.name;\n  }\n\n  set name(name: string) {\n    this.grants.name = name;\n  }\n\n  get metadata(): string | undefined {\n    return this.grants.metadata;\n  }\n\n  /**\n   * Set metadata to be passed to the Participant, used only when joining the room\n   */\n  set metadata(md: string) {\n    this.grants.metadata = md;\n  }\n\n  get attributes(): Record<string, string> | undefined {\n    return this.grants.attributes;\n  }\n\n  set attributes(attrs: Record<string, string>) {\n    this.grants.attributes = attrs;\n  }\n\n  get kind(): string | undefined {\n    return this.grants.kind;\n  }\n\n  set kind(kind: string) {\n    this.grants.kind = kind;\n  }\n\n  get sha256(): string | undefined {\n    return this.grants.sha256;\n  }\n\n  set sha256(sha: string | undefined) {\n    this.grants.sha256 = sha;\n  }\n\n  get roomPreset(): string | undefined {\n    return this.grants.roomPreset;\n  }\n\n  set roomPreset(preset: string | undefined) {\n    this.grants.roomPreset = preset;\n  }\n\n  get roomConfig(): RoomConfiguration | undefined {\n    return this.grants.roomConfig;\n  }\n\n  set roomConfig(config: RoomConfiguration | undefined) {\n    this.grants.roomConfig = config;\n  }\n\n  /**\n   * @returns JWT encoded token\n   */\n  async toJwt(): Promise<string> {\n    // TODO: check for video grant validity\n\n    const secret = new TextEncoder().encode(this.apiSecret);\n\n    const jwt = new jose.SignJWT(claimsToJwtPayload(this.grants))\n      .setProtectedHeader({ alg: 'HS256' })\n      .setIssuer(this.apiKey)\n      .setExpirationTime(this.ttl)\n      .setNotBefore(0);\n    if (this.identity) {\n      jwt.setSubject(this.identity);\n    } else if (this.grants.video?.roomJoin) {\n      throw Error('identity is required for join but not set');\n    }\n    return jwt.sign(secret);\n  }\n}\n\nexport class TokenVerifier {\n  private apiKey: string;\n\n  private apiSecret: string;\n\n  constructor(apiKey: string, apiSecret: string) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n  }\n\n  async verify(\n    token: string,\n    clockTolerance: string | number = defaultClockToleranceSeconds,\n  ): Promise<ClaimGrants> {\n    const secret = new TextEncoder().encode(this.apiSecret);\n    const { payload } = await jose.jwtVerify(token, secret, {\n      issuer: this.apiKey,\n      clockTolerance,\n    });\n    if (!payload) {\n      throw Error('invalid token');\n    }\n\n    return payload as ClaimGrants;\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { AccessToken } from './AccessToken.js';\nimport type { SIPGrant, VideoGrant } from './grants.js';\n\n/**\n * Utilities to handle authentication\n */\nexport class ServiceBase {\n  private readonly apiKey?: string;\n\n  private readonly secret?: string;\n\n  private readonly ttl: string;\n\n  /**\n   * @param apiKey - API Key.\n   * @param secret - API Secret.\n   * @param ttl - token TTL\n   */\n  constructor(apiKey?: string, secret?: string, ttl?: string) {\n    this.apiKey = apiKey;\n    this.secret = secret;\n    this.ttl = ttl || '10m';\n  }\n\n  async authHeader(grant: VideoGrant, sip?: SIPGrant): Promise<Record<string, string>> {\n    const at = new AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n    if (grant) {\n      at.addGrant(grant);\n    }\n    if (sip) {\n      at.addSIPGrant(sip);\n    }\n    return {\n      Authorization: `Bearer ${await at.toJwt()}`,\n    };\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { JsonValue } from '@bufbuild/protobuf';\n\n// twirp RPC adapter for client implementation\n\nconst defaultPrefix = '/twirp';\n\nexport const livekitPackage = 'livekit';\nexport interface Rpc {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  request(service: string, method: string, data: JsonValue, headers?: any): Promise<string>;\n}\n\nexport class TwirpError extends Error {\n  status: number;\n  code?: string;\n\n  constructor(name: string, message: string, status: number, code?: string) {\n    super(message);\n    this.name = name;\n    this.status = status;\n    this.code = code;\n  }\n}\n\n/**\n * JSON based Twirp V7 RPC\n */\nexport class TwirpRpc {\n  host: string;\n\n  pkg: string;\n\n  prefix: string;\n\n  constructor(host: string, pkg: string, prefix?: string) {\n    if (host.startsWith('ws')) {\n      host = host.replace('ws', 'http');\n    }\n    this.host = host;\n    this.pkg = pkg;\n    this.prefix = prefix || defaultPrefix;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async request(service: string, method: string, data: any, headers?: any): Promise<any> {\n    const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n    const url = new URL(path, this.host);\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        ...headers,\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n      const isJson = response.headers.get('content-type') === 'application/json';\n      let errorMessage = 'Unknown internal error';\n      let errorCode: string | undefined = undefined;\n      try {\n        if (isJson) {\n          const parsedError = (await response.json()) as Record<string, unknown>;\n          if ('msg' in parsedError) {\n            errorMessage = <string>parsedError.msg;\n          }\n          if ('code' in parsedError) {\n            errorCode = <string>parsedError.code;\n          }\n        } else {\n          errorMessage = await response.text();\n        }\n      } catch (e) {\n        // parsing went wrong, no op and we keep default error message\n        console.debug(`Error when trying to parse error message, using defaults`, e);\n      }\n\n      throw new TwirpError(response.statusText, errorMessage, response.status, errorCode);\n    }\n    const parsedResp = (await response.json()) as Record<string, unknown>;\n\n    const camelcaseKeys = await import('camelcase-keys').then((mod) => mod.default);\n    return camelcaseKeys(parsedResp, { deep: true });\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport {\n  AgentDispatch,\n  CreateAgentDispatchRequest,\n  DeleteAgentDispatchRequest,\n  ListAgentDispatchRequest,\n  ListAgentDispatchResponse,\n} from '@livekit/protocol';\nimport { ServiceBase } from './ServiceBase.js';\nimport { type Rpc, TwirpRpc, livekitPackage } from './TwirpRPC.js';\n\ninterface CreateDispatchOptions {\n  // any custom data to send along with the job.\n  // note: this is different from room and participant metadata\n  metadata?: string;\n}\n\nconst svc = 'AgentDispatchService';\n\n/**\n * Client to access Agent APIs\n */\nexport class AgentDispatchClient extends ServiceBase {\n  private readonly rpc: Rpc;\n\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host: string, apiKey?: string, secret?: string) {\n    super(apiKey, secret);\n    this.rpc = new TwirpRpc(host, livekitPackage);\n  }\n\n  /**\n   * Create an explicit dispatch for an agent to join a room. To use explicit\n   * dispatch, your agent must be registered with an `agentName`.\n   * @param roomName - name of the room to dispatch to\n   * @param agentName - name of the agent to dispatch\n   * @param options - optional metadata to send along with the dispatch\n   * @returns the dispatch that was created\n   */\n  async createDispatch(\n    roomName: string,\n    agentName: string,\n    options?: CreateDispatchOptions,\n  ): Promise<AgentDispatch> {\n    const req = new CreateAgentDispatchRequest({\n      room: roomName,\n      agentName,\n      metadata: options?.metadata,\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      'CreateDispatch',\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }),\n    );\n    return AgentDispatch.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * Delete an explicit dispatch for an agent in a room.\n   * @param dispatchId - id of the dispatch to delete\n   * @param roomName - name of the room the dispatch is for\n   */\n  async deleteDispatch(dispatchId: string, roomName: string): Promise<void> {\n    const req = new DeleteAgentDispatchRequest({\n      dispatchId,\n      room: roomName,\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      'DeleteDispatch',\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }),\n    );\n  }\n\n  /**\n   * Get an Agent dispatch by ID\n   * @param dispatchId - id of the dispatch to get\n   * @param roomName - name of the room the dispatch is for\n   * @returns the dispatch that was found, or undefined if not found\n   */\n  async getDispatch(dispatchId: string, roomName: string): Promise<AgentDispatch | undefined> {\n    const req = new ListAgentDispatchRequest({\n      dispatchId,\n      room: roomName,\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      'ListDispatch',\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }),\n    );\n    const res = ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    if (res.agentDispatches.length === 0) {\n      return undefined;\n    }\n    return res.agentDispatches[0];\n  }\n\n  /**\n   * List all agent dispatches for a room\n   * @param roomName - name of the room to list dispatches for\n   * @returns the list of dispatches\n   */\n  async listDispatch(roomName: string): Promise<AgentDispatch[]> {\n    const req = new ListAgentDispatchRequest({\n      room: roomName,\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      'ListDispatch',\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }),\n    );\n    const res = ListAgentDispatchResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.agentDispatches;\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type {\n  DirectFileOutput,\n  EncodedFileOutput,\n  EncodingOptions,\n  EncodingOptionsPreset,\n  ImageOutput,\n  SegmentedFileOutput,\n  StreamOutput,\n} from '@livekit/protocol';\nimport {\n  EgressInfo,\n  ListEgressRequest,\n  ListEgressResponse,\n  ParticipantEgressRequest,\n  RoomCompositeEgressRequest,\n  StopEgressRequest,\n  TrackCompositeEgressRequest,\n  TrackEgressRequest,\n  UpdateLayoutRequest,\n  UpdateStreamRequest,\n  WebEgressRequest,\n} from '@livekit/protocol';\nimport { ServiceBase } from './ServiceBase.js';\nimport type { Rpc } from './TwirpRPC.js';\nimport { TwirpRpc, livekitPackage } from './TwirpRPC.js';\n\nconst svc = 'Egress';\n\nexport interface RoomCompositeOptions {\n  /**\n   * egress layout. optional\n   */\n  layout?: string;\n  /**\n   * encoding options or preset. optional\n   */\n  encodingOptions?: EncodingOptionsPreset | EncodingOptions;\n  /**\n   * record audio only. optional\n   */\n  audioOnly?: boolean;\n  /**\n   * record video only. optional\n   */\n  videoOnly?: boolean;\n  /**\n   * custom template url. optional\n   */\n  customBaseUrl?: string;\n}\n\nexport interface WebOptions {\n  /**\n   * encoding options or preset. optional\n   */\n  encodingOptions?: EncodingOptionsPreset | EncodingOptions;\n  /**\n   * record audio only. optional\n   */\n  audioOnly?: boolean;\n  /**\n   * record video only. optional\n   */\n  videoOnly?: boolean;\n  /**\n   * await START_RECORDING chrome log\n   */\n  awaitStartSignal?: boolean;\n}\n\nexport interface ParticipantEgressOptions {\n  /**\n   * true to capture source screenshare and screenshare_audio\n   * false to capture camera and microphone\n   */\n  screenShare?: boolean;\n  /**\n   * encoding options or preset. optional\n   */\n  encodingOptions?: EncodingOptionsPreset | EncodingOptions;\n}\n\nexport interface TrackCompositeOptions {\n  /**\n   * audio track ID\n   */\n  audioTrackId?: string;\n  /**\n   * video track ID\n   */\n  videoTrackId?: string;\n  /**\n   * encoding options or preset. optional\n   */\n  encodingOptions?: EncodingOptionsPreset | EncodingOptions;\n}\n\n/**\n * Used to supply multiple outputs with an egress request\n */\nexport interface EncodedOutputs {\n  file?: EncodedFileOutput | undefined;\n  stream?: StreamOutput | undefined;\n  segments?: SegmentedFileOutput | undefined;\n  images?: ImageOutput | undefined;\n}\n\nexport interface ListEgressOptions {\n  roomName?: string;\n  egressId?: string;\n  active?: boolean;\n}\n\n/**\n * Client to access Egress APIs\n */\nexport class EgressClient extends ServiceBase {\n  private readonly rpc: Rpc;\n\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host: string, apiKey?: string, secret?: string) {\n    super(apiKey, secret);\n    this.rpc = new TwirpRpc(host, livekitPackage);\n  }\n\n  /**\n   * @param roomName - room name\n   * @param output - file or stream output\n   * @param opts - RoomCompositeOptions\n   */\n  async startRoomCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    opts?: RoomCompositeOptions,\n  ): Promise<EgressInfo>;\n  /**\n   * @deprecated use RoomCompositeOptions instead\n   */\n  async startRoomCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    layout?: string,\n    options?: EncodingOptionsPreset | EncodingOptions,\n    audioOnly?: boolean,\n    videoOnly?: boolean,\n    customBaseUrl?: string,\n  ): Promise<EgressInfo>;\n  async startRoomCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    optsOrLayout?: RoomCompositeOptions | string,\n    options?: EncodingOptionsPreset | EncodingOptions,\n    audioOnly?: boolean,\n    videoOnly?: boolean,\n    customBaseUrl?: string,\n  ): Promise<EgressInfo> {\n    let layout: string | undefined;\n    if (optsOrLayout !== undefined) {\n      if (typeof optsOrLayout === 'string') {\n        layout = optsOrLayout;\n      } else {\n        const opts = <RoomCompositeOptions>optsOrLayout;\n        layout = opts.layout;\n        options = opts.encodingOptions;\n        audioOnly = opts.audioOnly;\n        videoOnly = opts.videoOnly;\n        customBaseUrl = opts.customBaseUrl;\n      }\n    }\n\n    layout ??= '';\n    audioOnly ??= false;\n    videoOnly ??= false;\n    customBaseUrl ??= '';\n\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    } = this.getOutputParams(output, options);\n\n    const req = new RoomCompositeEgressRequest({\n      roomName,\n      layout,\n      audioOnly,\n      videoOnly,\n      customBaseUrl,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'StartRoomCompositeEgress',\n      req,\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param url - url\n   * @param output - file or stream output\n   * @param opts - WebOptions\n   */\n  async startWebEgress(\n    url: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    opts?: WebOptions,\n  ): Promise<EgressInfo> {\n    const audioOnly = opts?.audioOnly || false;\n    const videoOnly = opts?.videoOnly || false;\n    const awaitStartSignal = opts?.awaitStartSignal || false;\n    const {\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    } = this.getOutputParams(output, opts?.encodingOptions);\n\n    const req = new WebEgressRequest({\n      url,\n      audioOnly,\n      videoOnly,\n      awaitStartSignal,\n      output: legacyOutput,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'StartWebEgress',\n      req,\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * Export a participant's audio and video tracks,\n   *\n   * @param roomName - room name\n   * @param output - one or more outputs\n   * @param opts - ParticipantEgressOptions\n   */\n  async startParticipantEgress(\n    roomName: string,\n    identity: string,\n    output: EncodedOutputs,\n    opts?: ParticipantEgressOptions,\n  ): Promise<EgressInfo> {\n    const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } =\n      this.getOutputParams(output, opts?.encodingOptions);\n    const req = new ParticipantEgressRequest({\n      roomName,\n      identity,\n      screenShare: opts?.screenShare ?? false,\n      options,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'StartParticipantEgress',\n      req,\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param roomName - room name\n   * @param output - file or stream output\n   * @param opts - TrackCompositeOptions\n   */\n  async startTrackCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    opts?: TrackCompositeOptions,\n  ): Promise<EgressInfo>;\n  /**\n   * @deprecated use TrackCompositeOptions instead\n   */\n  async startTrackCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    audioTrackId?: string,\n    videoTrackId?: string,\n    options?: EncodingOptionsPreset | EncodingOptions,\n  ): Promise<EgressInfo>;\n  async startTrackCompositeEgress(\n    roomName: string,\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    optsOrAudioTrackId?: TrackCompositeOptions | string,\n    videoTrackId?: string,\n    options?: EncodingOptionsPreset | EncodingOptions,\n  ): Promise<EgressInfo> {\n    let audioTrackId: string | undefined;\n    if (optsOrAudioTrackId !== undefined) {\n      if (typeof optsOrAudioTrackId === 'string') {\n        audioTrackId = optsOrAudioTrackId;\n      } else {\n        const opts = <TrackCompositeOptions>optsOrAudioTrackId;\n        audioTrackId = opts.audioTrackId;\n        videoTrackId = opts.videoTrackId;\n        options = opts.encodingOptions;\n      }\n    }\n\n    audioTrackId ??= '';\n    videoTrackId ??= '';\n\n    const {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    } = this.getOutputParams(output, options);\n    const req = new TrackCompositeEgressRequest({\n      roomName,\n      audioTrackId,\n      videoTrackId,\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'StartTrackCompositeEgress',\n      req,\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private isEncodedOutputs(output: any): output is EncodedOutputs {\n    return (\n      (<EncodedOutputs>output).file !== undefined ||\n      (<EncodedOutputs>output).stream !== undefined ||\n      (<EncodedOutputs>output).segments !== undefined ||\n      (<EncodedOutputs>output).images !== undefined\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private isEncodedFileOutput(output: any): output is EncodedFileOutput {\n    return (\n      (<EncodedFileOutput>output).filepath !== undefined ||\n      (<EncodedFileOutput>output).fileType !== undefined\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private isSegmentedFileOutput(output: any): output is SegmentedFileOutput {\n    return (\n      (<SegmentedFileOutput>output).filenamePrefix !== undefined ||\n      (<SegmentedFileOutput>output).playlistName !== undefined ||\n      (<SegmentedFileOutput>output).filenameSuffix !== undefined\n    );\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private isStreamOutput(output: any): output is StreamOutput {\n    return (\n      (<StreamOutput>output).protocol !== undefined || (<StreamOutput>output).urls !== undefined\n    );\n  }\n\n  private getOutputParams(\n    output: EncodedOutputs | EncodedFileOutput | StreamOutput | SegmentedFileOutput,\n    opts?: EncodingOptionsPreset | EncodingOptions,\n  ) {\n    let file: EncodedFileOutput | undefined;\n    let fileOutputs: Array<EncodedFileOutput> | undefined;\n    let stream: StreamOutput | undefined;\n    let streamOutputs: Array<StreamOutput> | undefined;\n    let segments: SegmentedFileOutput | undefined;\n    let segmentOutputs: Array<SegmentedFileOutput> | undefined;\n    let imageOutputs: Array<ImageOutput> | undefined;\n\n    if (this.isEncodedOutputs(output)) {\n      if (output.file !== undefined) {\n        fileOutputs = [output.file];\n      }\n      if (output.stream !== undefined) {\n        streamOutputs = [output.stream];\n      }\n      if (output.segments !== undefined) {\n        segmentOutputs = [output.segments];\n      }\n      if (output.images !== undefined) {\n        imageOutputs = [output.images];\n      }\n    } else if (this.isEncodedFileOutput(output)) {\n      file = output;\n      fileOutputs = [file];\n    } else if (this.isSegmentedFileOutput(output)) {\n      segments = output;\n      segmentOutputs = [segments];\n    } else if (this.isStreamOutput(output)) {\n      stream = output;\n      streamOutputs = [stream];\n    }\n\n    let legacyOutput:\n      | {\n          value: EncodedFileOutput;\n          case: 'file';\n        }\n      | {\n          value: StreamOutput;\n          case: 'stream';\n        }\n      | {\n          value: SegmentedFileOutput;\n          case: 'segments';\n        }\n      | undefined;\n\n    if (file) {\n      legacyOutput = {\n        case: 'file',\n        value: file,\n      };\n    } else if (stream) {\n      legacyOutput = {\n        case: 'stream',\n        value: stream,\n      };\n    } else if (segments) {\n      legacyOutput = {\n        case: 'segments',\n        value: segments,\n      };\n    }\n    let egressOptions:\n      | {\n          value: EncodingOptionsPreset;\n          case: 'preset';\n        }\n      | {\n          value: EncodingOptions;\n          case: 'advanced';\n        }\n      | undefined;\n    if (opts) {\n      if (typeof opts === 'number') {\n        egressOptions = {\n          case: 'preset',\n          value: opts,\n        };\n      } else {\n        egressOptions = {\n          case: 'advanced',\n          value: <EncodingOptions>opts,\n        };\n      }\n    }\n\n    return {\n      output: legacyOutput,\n      options: egressOptions,\n      fileOutputs,\n      streamOutputs,\n      segmentOutputs,\n      imageOutputs,\n    };\n  }\n\n  /**\n   * @param roomName - room name\n   * @param output - file or websocket output\n   * @param trackId - track Id\n   */\n  async startTrackEgress(\n    roomName: string,\n    output: DirectFileOutput | string,\n    trackId: string,\n  ): Promise<EgressInfo> {\n    let legacyOutput:\n      | {\n          value: DirectFileOutput;\n          case: 'file';\n        }\n      | {\n          value: string;\n          case: 'websocketUrl';\n        }\n      | undefined;\n\n    if (typeof output === 'string') {\n      legacyOutput = {\n        case: 'websocketUrl',\n        value: output,\n      };\n    } else {\n      legacyOutput = {\n        case: 'file',\n        value: output,\n      };\n    }\n\n    const req = new TrackEgressRequest({\n      roomName,\n      trackId,\n      output: legacyOutput,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'StartTrackEgress',\n      req,\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param egressId -\n   * @param layout -\n   */\n  async updateLayout(egressId: string, layout: string): Promise<EgressInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'UpdateLayout',\n      new UpdateLayoutRequest({ egressId, layout }).toJson(),\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param egressId -\n   * @param addOutputUrls -\n   * @param removeOutputUrls -\n   */\n  async updateStream(\n    egressId: string,\n    addOutputUrls?: string[],\n    removeOutputUrls?: string[],\n  ): Promise<EgressInfo> {\n    addOutputUrls ??= [];\n    removeOutputUrls ??= [];\n\n    const data = await this.rpc.request(\n      svc,\n      'UpdateStream',\n      new UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(),\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param options - options to filter listed Egresses, by default returns all\n   * Egress instances\n   */\n  async listEgress(options?: ListEgressOptions): Promise<Array<EgressInfo>>;\n  /**\n   * @deprecated use `listEgress(options?: ListEgressOptions)` instead\n   * @param roomName - list egress for one room only\n   */\n  async listEgress(roomName?: string): Promise<Array<EgressInfo>>;\n  /**\n   * @param roomName - list egress for one room only\n   */\n  async listEgress(options?: string | ListEgressOptions): Promise<Array<EgressInfo>> {\n    let req: Partial<ListEgressRequest> = {};\n    if (typeof options === 'string') {\n      req.roomName = options;\n    } else if (options !== undefined) {\n      req = options;\n    }\n\n    const data = await this.rpc.request(\n      svc,\n      'ListEgress',\n      new ListEgressRequest(req).toJson(),\n      await this.authHeader({ roomRecord: true }),\n    );\n    return ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  /**\n   * @param egressId -\n   */\n  async stopEgress(egressId: string): Promise<EgressInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'StopEgress',\n      new StopEgressRequest({ egressId }).toJson(),\n      await this.authHeader({ roomRecord: true }),\n    );\n    return EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { IngressAudioOptions, IngressInput, IngressVideoOptions } from '@livekit/protocol';\nimport {\n  CreateIngressRequest,\n  DeleteIngressRequest,\n  IngressInfo,\n  ListIngressRequest,\n  ListIngressResponse,\n  UpdateIngressRequest,\n} from '@livekit/protocol';\nimport { ServiceBase } from './ServiceBase.js';\nimport type { Rpc } from './TwirpRPC.js';\nimport { TwirpRpc, livekitPackage } from './TwirpRPC.js';\n\nconst svc = 'Ingress';\n\nexport interface CreateIngressOptions {\n  /**\n   * ingress name. optional\n   */\n  name?: string;\n  /**\n   * name of the room to send media to. required\n   */\n  roomName?: string;\n  /**\n   * unique identity of the participant. required\n   */\n  participantIdentity: string;\n  /**\n   * participant display name\n   */\n  participantName?: string;\n  /**\n   * metadata to attach to the participant\n   */\n  participantMetadata?: string;\n  /**\n   * @deprecated use `enableTranscoding` instead.\n   * whether to skip transcoding and forward the input media directly. Only supported by WHIP\n   */\n  bypassTranscoding?: boolean;\n  /**\n   * whether to enable transcoding or forward the input media directly.\n   * Transcoding is required for all input types except WHIP. For WHIP, the default is to not transcode.\n   */\n  enableTranscoding?: boolean | undefined;\n  /**\n   * url of the media to pull for ingresses of type URL\n   */\n  url?: string;\n  /**\n   * custom audio encoding parameters. optional\n   */\n  audio?: IngressAudioOptions;\n  /**\n   * custom video encoding parameters. optional\n   */\n  video?: IngressVideoOptions;\n}\n\nexport interface UpdateIngressOptions {\n  /**\n   * ingress name. optional\n   */\n  name: string;\n  /**\n   * name of the room to send media to.\n   */\n  roomName?: string;\n  /**\n   * unique identity of the participant.\n   */\n  participantIdentity?: string;\n  /**\n   * participant display name\n   */\n  participantName?: string;\n  /**\n   * metadata to attach to the participant\n   */\n  participantMetadata?: string;\n  /**\n   * @deprecated use `enableTranscoding` instead\n   * whether to skip transcoding and forward the input media directly. Only supported by WHIP\n   */\n  bypassTranscoding?: boolean | undefined;\n  /**\n   * whether to enable transcoding or forward the input media directly.\n   * Transcoding is required for all input types except WHIP. For WHIP, the default is to not transcode.\n   */\n  enableTranscoding?: boolean | undefined;\n  /**\n   * custom audio encoding parameters. optional\n   */\n  audio?: IngressAudioOptions;\n  /**\n   * custom video encoding parameters. optional\n   */\n  video?: IngressVideoOptions;\n}\n\nexport interface ListIngressOptions {\n  /**\n   * list ingress for one room only\n   */\n  roomName?: string;\n\n  /**\n   * list ingress by ID\n   */\n  ingressId?: string;\n}\n\n/**\n * Client to access Ingress APIs\n */\nexport class IngressClient extends ServiceBase {\n  private readonly rpc: Rpc;\n\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host: string, apiKey?: string, secret?: string) {\n    super(apiKey, secret);\n    this.rpc = new TwirpRpc(host, livekitPackage);\n  }\n\n  /**\n   * @param inputType - protocol for the ingress\n   * @param opts - CreateIngressOptions\n   */\n  async createIngress(inputType: IngressInput, opts: CreateIngressOptions): Promise<IngressInfo> {\n    let name: string = '';\n    let participantName: string = '';\n    let participantIdentity: string = '';\n    let bypassTranscoding: boolean = false;\n    let url: string = '';\n\n    if (opts == null) {\n      throw new Error('options dictionary is required');\n    }\n\n    const roomName: string | undefined = opts.roomName;\n    const enableTranscoding: boolean | undefined = opts.enableTranscoding;\n    const audio: IngressAudioOptions | undefined = opts.audio;\n    const video: IngressVideoOptions | undefined = opts.video;\n    const participantMetadata: string | undefined = opts.participantMetadata;\n\n    name = opts.name || '';\n    participantName = opts.participantName || '';\n    participantIdentity = opts.participantIdentity || '';\n    bypassTranscoding = opts.bypassTranscoding || false;\n    url = opts.url || '';\n\n    if (typeof roomName == 'undefined') {\n      throw new Error('required roomName option not provided');\n    }\n\n    if (participantIdentity == '') {\n      throw new Error('required participantIdentity option not provided');\n    }\n\n    const req = new CreateIngressRequest({\n      inputType,\n      name,\n      roomName,\n      participantIdentity,\n      participantMetadata,\n      participantName,\n      bypassTranscoding,\n      enableTranscoding,\n      url,\n      audio,\n      video,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateIngress',\n      req,\n      await this.authHeader({ ingressAdmin: true }),\n    );\n    return IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param ingressId - ID of the ingress to update\n   * @param opts - UpdateIngressOptions\n   */\n  async updateIngress(ingressId: string, opts: UpdateIngressOptions): Promise<IngressInfo> {\n    const name: string = opts.name || '';\n    const roomName: string = opts.roomName || '';\n    const participantName: string = opts.participantName || '';\n    const participantIdentity: string = opts.participantIdentity || '';\n    const { participantMetadata } = opts;\n    const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n\n    const req = new UpdateIngressRequest({\n      ingressId,\n      name,\n      roomName,\n      participantIdentity,\n      participantName,\n      participantMetadata,\n      bypassTranscoding,\n      enableTranscoding,\n      audio,\n      video,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'UpdateIngress',\n      req,\n      await this.authHeader({ ingressAdmin: true }),\n    );\n    return IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @deprecated use `listIngress(opts)` or `listIngress(arg)` instead\n   * @param roomName - list ingress for one room only\n   */\n  async listIngress(roomName?: string): Promise<Array<IngressInfo>>;\n  /**\n   * @param opts - list options\n   */\n  async listIngress(opts?: ListIngressOptions): Promise<Array<IngressInfo>>;\n  /**\n   * @param arg - list room name or options\n   */\n  async listIngress(arg?: string | ListIngressOptions): Promise<Array<IngressInfo>> {\n    let req: Partial<ListIngressRequest> = {};\n    if (typeof arg === 'string') {\n      req.roomName = arg;\n    } else if (arg) {\n      req = arg;\n    }\n    const data = await this.rpc.request(\n      svc,\n      'ListIngress',\n      new ListIngressRequest(req).toJson(),\n      await this.authHeader({ ingressAdmin: true }),\n    );\n    return ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  /**\n   * @param ingressId - ingress to delete\n   */\n  async deleteIngress(ingressId: string): Promise<IngressInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'DeleteIngress',\n      new DeleteIngressRequest({ ingressId }).toJson(),\n      await this.authHeader({ ingressAdmin: true }),\n    );\n    return IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n// Use the Web Crypto API if available, otherwise fallback to Node.js crypto\nexport async function getRandomBytes(size: number = 16): Promise<Uint8Array> {\n  if (globalThis.crypto) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  } else {\n    const nodeCrypto = await import('node:crypto');\n    return nodeCrypto.getRandomValues(new Uint8Array(size));\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { DataPacket_Kind, RoomEgress, TrackInfo } from '@livekit/protocol';\nimport {\n  CreateRoomRequest,\n  DeleteRoomRequest,\n  ForwardParticipantRequest,\n  ListParticipantsRequest,\n  ListParticipantsResponse,\n  ListRoomsRequest,\n  ListRoomsResponse,\n  MuteRoomTrackRequest,\n  MuteRoomTrackResponse,\n  ParticipantInfo,\n  ParticipantPermission,\n  Room,\n  RoomParticipantIdentity,\n  SendDataRequest,\n  UpdateParticipantRequest,\n  UpdateRoomMetadataRequest,\n  UpdateSubscriptionsRequest,\n} from '@livekit/protocol';\nimport { ServiceBase } from './ServiceBase.js';\nimport type { Rpc } from './TwirpRPC.js';\nimport { TwirpRpc, livekitPackage } from './TwirpRPC.js';\nimport { getRandomBytes } from './crypto/uuid.js';\n\n/**\n * Options for when creating a room\n */\nexport interface CreateOptions {\n  /**\n   * name of the room. required\n   */\n  name: string;\n\n  /**\n   * number of seconds to keep the room open before any participant joins\n   */\n  emptyTimeout?: number;\n\n  /**\n   * number of seconds to keep the room open after the last participant leaves\n   * this option is helpful to give a grace period for participants to re-join\n   */\n  departureTimeout?: number;\n\n  /**\n   * limit to the number of participants in a room at a time\n   */\n  maxParticipants?: number;\n\n  /**\n   * initial room metadata\n   */\n  metadata?: string;\n\n  /**\n   * add egress options\n   */\n  egress?: RoomEgress;\n\n  /**\n   * minimum playout delay in milliseconds\n   */\n  minPlayoutDelay?: number;\n\n  /**\n   * maximum playout delay in milliseconds\n   */\n  maxPlayoutDelay?: number;\n\n  /**\n   * improves A/V sync when min_playout_delay set to a value larger than 200ms.\n   * It will disables transceiver re-use -- this option is not recommended\n   * for rooms with frequent subscription changes\n   */\n  syncStreams?: boolean;\n\n  /**\n   * override the node room is allocated to, for debugging\n   * does not work with Cloud\n   */\n  nodeId?: string;\n}\n\nexport type SendDataOptions = {\n  /** If set, only deliver to listed participant identities */\n  destinationIdentities?: string[];\n  destinationSids?: string[];\n  topic?: string;\n};\n\nexport type UpdateParticipantOptions = {\n  /** only attributes you'd want to update should be set, set value to empty string to remove it */\n  attributes?: { [key: string]: string };\n  metadata?: string;\n  /** permissions are updated atomically - all desired permissions would need to be set */\n  permission?: Partial<ParticipantPermission>;\n  name?: string;\n};\n\nconst svc = 'RoomService';\n\n/**\n * Client to access Room APIs\n */\nexport class RoomServiceClient extends ServiceBase {\n  private readonly rpc: Rpc;\n\n  /**\n   *\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host: string, apiKey?: string, secret?: string) {\n    super(apiKey, secret);\n    this.rpc = new TwirpRpc(host, livekitPackage);\n  }\n\n  /**\n   * Creates a new room. Explicit room creation is not required, since rooms will\n   * be automatically created when the first participant joins. This method can be\n   * used to customize room settings.\n   * @param options -\n   */\n  async createRoom(options: CreateOptions): Promise<Room> {\n    const data = await this.rpc.request(\n      svc,\n      'CreateRoom',\n      new CreateRoomRequest(options).toJson(),\n      await this.authHeader({ roomCreate: true }),\n    );\n    return Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * List active rooms\n   * @param names - when undefined or empty, list all rooms.\n   *                otherwise returns rooms with matching names\n   * @returns\n   */\n  async listRooms(names?: string[]): Promise<Room[]> {\n    const data = await this.rpc.request(\n      svc,\n      'ListRooms',\n      new ListRoomsRequest({ names: names ?? [] }).toJson(),\n      await this.authHeader({ roomList: true }),\n    );\n    const res = ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.rooms ?? [];\n  }\n\n  async deleteRoom(room: string): Promise<void> {\n    await this.rpc.request(\n      svc,\n      'DeleteRoom',\n      new DeleteRoomRequest({ room }).toJson(),\n      await this.authHeader({ roomCreate: true }),\n    );\n  }\n\n  /**\n   * Update metadata of a room\n   * @param room - name of the room\n   * @param metadata - the new metadata for the room\n   */\n  async updateRoomMetadata(room: string, metadata: string) {\n    const data = await this.rpc.request(\n      svc,\n      'UpdateRoomMetadata',\n      new UpdateRoomMetadataRequest({ room, metadata }).toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n    return Room.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * List participants in a room\n   * @param room - name of the room\n   */\n  async listParticipants(room: string): Promise<ParticipantInfo[]> {\n    const data = await this.rpc.request(\n      svc,\n      'ListParticipants',\n      new ListParticipantsRequest({ room }).toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n    const res = ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.participants ?? [];\n  }\n\n  /**\n   * Get information on a specific participant, including the tracks that participant\n   * has published\n   * @param room - name of the room\n   * @param identity - identity of the participant to return\n   */\n  async getParticipant(room: string, identity: string): Promise<ParticipantInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'GetParticipant',\n      new RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n\n    return ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * Removes a participant in the room. This will disconnect the participant\n   * and will emit a Disconnected event for that participant.\n   * Even after being removed, the participant can still re-join the room.\n   * @param room -\n   * @param identity -\n   */\n  async removeParticipant(room: string, identity: string): Promise<void> {\n    await this.rpc.request(\n      svc,\n      'RemoveParticipant',\n      new RoomParticipantIdentity({ room, identity }).toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n  }\n\n  /**\n   * Forwards a participant's track to another room. This will create a\n   * participant to join the destination room that has same information\n   * with the source participant except the kind to be `Forwarded`. All\n   * changes to the source participant will be reflected to the forwarded\n   * participant. When the source participant disconnects or the\n   * `RemoveParticipant` method is called in the destination room, the\n   * forwarding will be stopped.\n   */\n  async forwardParticipant(room: string, identity: string, destinationRoom: string): Promise<void> {\n    await this.rpc.request(\n      svc,\n      'ForwardParticipant',\n      new ForwardParticipantRequest({ room, identity, destinationRoom }).toJson(),\n      await this.authHeader({ roomAdmin: true, room, destinationRoom }),\n    );\n  }\n\n  /**\n   * Mutes a track that the participant has published.\n   * @param room -\n   * @param identity -\n   * @param trackSid - sid of the track to be muted\n   * @param muted - true to mute, false to unmute\n   */\n  async mutePublishedTrack(\n    room: string,\n    identity: string,\n    trackSid: string,\n    muted: boolean,\n  ): Promise<TrackInfo> {\n    const req = new MuteRoomTrackRequest({\n      room,\n      identity,\n      trackSid,\n      muted,\n    }).toJson();\n    const data = await this.rpc.request(\n      svc,\n      'MutePublishedTrack',\n      req,\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n    const res = MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n    return res.track!;\n  }\n\n  /**\n   * Updates a participant's state or permissions\n   * @param room - target room\n   * @param identity - participant identity\n   * @param options - participant fields to update\n   */\n  async updateParticipant(\n    room: string,\n    identity: string,\n    options: UpdateParticipantOptions,\n  ): Promise<ParticipantInfo>;\n  /**\n   * Updates a participant's state or permissions\n   * @param room - target room\n   * @param identity - participant identity\n   * @param options - participant fields to update\n   */\n  async updateParticipant(\n    room: string,\n    identity: string,\n    metadata?: string,\n    permission?: Partial<ParticipantPermission>,\n    name?: string,\n  ): Promise<ParticipantInfo>;\n  async updateParticipant(\n    room: string,\n    identity: string,\n    metadataOrOptions?: string | UpdateParticipantOptions,\n    maybePermission?: Partial<ParticipantPermission>,\n    maybeName?: string,\n  ): Promise<ParticipantInfo> {\n    const hasOptions = typeof metadataOrOptions === 'object';\n    const metadata = hasOptions ? metadataOrOptions?.metadata : metadataOrOptions;\n    const permission = hasOptions ? metadataOrOptions.permission : maybePermission;\n    const name = hasOptions ? metadataOrOptions.name : maybeName;\n    const attributes: Record<string, string> | undefined = hasOptions\n      ? metadataOrOptions.attributes\n      : {};\n\n    const req = new UpdateParticipantRequest({\n      room,\n      identity,\n      attributes,\n      metadata,\n      name,\n    });\n    if (permission) {\n      req.permission = new ParticipantPermission(permission);\n    }\n    const data = await this.rpc.request(\n      svc,\n      'UpdateParticipant',\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n    return ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * Updates a participant's subscription to tracks\n   * @param room -\n   * @param identity -\n   * @param trackSids -\n   * @param subscribe - true to subscribe, false to unsubscribe\n   */\n  async updateSubscriptions(\n    room: string,\n    identity: string,\n    trackSids: string[],\n    subscribe: boolean,\n  ): Promise<void> {\n    const req = new UpdateSubscriptionsRequest({\n      room,\n      identity,\n      trackSids,\n      subscribe,\n      participantTracks: [],\n    }).toJson();\n    await this.rpc.request(\n      svc,\n      'UpdateSubscriptions',\n      req,\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n  }\n\n  /**\n   * Sends data message to participants in the room\n   * @param room -\n   * @param data - opaque payload to send\n   * @param kind - delivery reliability\n   * @param options - optionally specify a topic and destinationSids (when destinationSids is empty, message is sent to everyone)\n   */\n  async sendData(\n    room: string,\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    options: SendDataOptions,\n  ): Promise<void>;\n  /**\n   * Sends data message to participants in the room\n   * @deprecated use sendData(room, data, kind, options) instead\n   * @param room -\n   * @param data - opaque payload to send\n   * @param kind - delivery reliability\n   * @param destinationSids - optional. when empty, message is sent to everyone\n   */\n  async sendData(\n    room: string,\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    destinationSids?: string[],\n  ): Promise<void>;\n  async sendData(\n    room: string,\n    data: Uint8Array,\n    kind: DataPacket_Kind,\n    options: SendDataOptions | string[] = {},\n  ): Promise<void> {\n    const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n    const topic = Array.isArray(options) ? undefined : options.topic;\n    const req = new SendDataRequest({\n      room,\n      data,\n      kind,\n      destinationSids: destinationSids ?? [],\n      topic,\n    });\n    if (!Array.isArray(options) && options.destinationIdentities) {\n      req.destinationIdentities = options.destinationIdentities;\n    }\n    req.nonce = await getRandomBytes(16);\n    await this.rpc.request(\n      svc,\n      'SendData',\n      req.toJson(),\n      await this.authHeader({ roomAdmin: true, room }),\n    );\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { Duration } from '@bufbuild/protobuf';\nimport type { RoomConfiguration, SIPHeaderOptions } from '@livekit/protocol';\nimport {\n  CreateSIPDispatchRuleRequest,\n  CreateSIPInboundTrunkRequest,\n  CreateSIPOutboundTrunkRequest,\n  CreateSIPParticipantRequest,\n  CreateSIPTrunkRequest,\n  DeleteSIPDispatchRuleRequest,\n  DeleteSIPTrunkRequest,\n  ListSIPDispatchRuleRequest,\n  ListSIPDispatchRuleResponse,\n  ListSIPInboundTrunkRequest,\n  ListSIPInboundTrunkResponse,\n  ListSIPOutboundTrunkRequest,\n  ListSIPOutboundTrunkResponse,\n  ListSIPTrunkRequest,\n  ListSIPTrunkResponse,\n  SIPDispatchRule,\n  SIPDispatchRuleDirect,\n  SIPDispatchRuleIndividual,\n  SIPDispatchRuleInfo,\n  SIPInboundTrunkInfo,\n  SIPOutboundTrunkInfo,\n  SIPParticipantInfo,\n  SIPTransport,\n  SIPTrunkInfo,\n  TransferSIPParticipantRequest,\n} from '@livekit/protocol';\nimport { ServiceBase } from './ServiceBase.js';\nimport type { Rpc } from './TwirpRPC.js';\nimport { TwirpRpc, livekitPackage } from './TwirpRPC.js';\n\nconst svc = 'SIP';\n\n/**\n * @deprecated use CreateSipInboundTrunkOptions or CreateSipOutboundTrunkOptions\n */\nexport interface CreateSipTrunkOptions {\n  name?: string;\n  metadata?: string;\n  inbound_addresses?: string[];\n  inbound_numbers?: string[];\n  inbound_username?: string;\n  inbound_password?: string;\n  outbound_address?: string;\n  outbound_username?: string;\n  outbound_password?: string;\n}\nexport interface CreateSipInboundTrunkOptions {\n  metadata?: string;\n  /** @deprecated - use `allowedAddresses` instead */\n  allowed_addresses?: string[];\n  allowedAddresses?: string[];\n  /** @deprecated - use `allowedNumbers` instead */\n  allowed_numbers?: string[];\n  allowedNumbers?: string[];\n  /** @deprecated - use `authUsername` instead */\n  auth_username?: string;\n  authUsername?: string;\n  /** @deprecated - use `authPassword` instead */\n  auth_password?: string;\n  authPassword?: string;\n  headers?: { [key: string]: string };\n  headersToAttributes?: { [key: string]: string };\n  // Map SIP response headers from INVITE to sip.h.* participant attributes automatically.\n  includeHeaders?: SIPHeaderOptions;\n  krispEnabled?: boolean;\n}\nexport interface CreateSipOutboundTrunkOptions {\n  metadata?: string;\n  transport: SIPTransport;\n  /** @deprecated - use `authUsername` instead */\n  auth_username?: string;\n  authUsername?: string;\n  /** @deprecated - use `authPassword` instead */\n  auth_password?: string;\n  authPassword?: string;\n  headers?: { [key: string]: string };\n  headersToAttributes?: { [key: string]: string };\n  // Map SIP response headers from INVITE to sip.h.* participant attributes automatically.\n  includeHeaders?: SIPHeaderOptions;\n}\n\nexport interface SipDispatchRuleDirect {\n  type: 'direct';\n  roomName: string;\n  pin?: string;\n}\n\nexport interface SipDispatchRuleIndividual {\n  type: 'individual';\n  roomPrefix: string;\n  pin?: string;\n}\n\nexport interface CreateSipDispatchRuleOptions {\n  name?: string;\n  metadata?: string;\n  trunkIds?: string[];\n  hidePhoneNumber?: boolean;\n  attributes?: { [key: string]: string };\n  roomPreset?: string;\n  roomConfig?: RoomConfiguration;\n}\n\nexport interface CreateSipParticipantOptions {\n  // Optional SIP From number to use. If empty, trunk number is used.\n  fromNumber?: string;\n  // Optional identity of the SIP participant\n  participantIdentity?: string;\n  // Optional name of the participant\n  participantName?: string;\n  // Optional metadata to attach to the participant\n  participantMetadata?: string;\n  // Optional attributes to attach to the participant\n  participantAttributes?: { [key: string]: string };\n  // Optionally send following DTMF digits (extension codes) when making a call.\n  // Character 'w' can be used to add a 0.5 sec delay.\n  dtmf?: string;\n  /** @deprecated - use `playDialtone` instead */\n  playRingtone?: boolean; // Deprecated, use playDialtone instead\n  playDialtone?: boolean;\n  // These headers are sent as-is and may help identify this call as coming from LiveKit for the other SIP endpoint.\n  headers?: { [key: string]: string };\n  // Map SIP response headers from INVITE to sip.h.* participant attributes automatically.\n  includeHeaders?: SIPHeaderOptions;\n  hidePhoneNumber?: boolean;\n  ringingTimeout?: number; // Duration in seconds\n  maxCallDuration?: number; // Duration in seconds\n  krispEnabled?: boolean;\n}\n\nexport interface TransferSipParticipantOptions {\n  playDialtone?: boolean;\n  headers?: { [key: string]: string };\n}\n\n/**\n * Client to access Egress APIs\n */\nexport class SipClient extends ServiceBase {\n  private readonly rpc: Rpc;\n\n  /**\n   * @param host - hostname including protocol. i.e. 'https://<project>.livekit.cloud'\n   * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n   * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n   */\n  constructor(host: string, apiKey?: string, secret?: string) {\n    super(apiKey, secret);\n    this.rpc = new TwirpRpc(host, livekitPackage);\n  }\n\n  /**\n   * @param number - phone number of the trunk\n   * @param opts - CreateSipTrunkOptions\n   * @deprecated use `createSipInboundTrunk` or `createSipOutboundTrunk`\n   */\n  async createSipTrunk(number: string, opts?: CreateSipTrunkOptions): Promise<SIPTrunkInfo> {\n    let inboundAddresses: string[] | undefined;\n    let inboundNumbers: string[] | undefined;\n    let inboundUsername: string = '';\n    let inboundPassword: string = '';\n    let outboundAddress: string = '';\n    let outboundUsername: string = '';\n    let outboundPassword: string = '';\n    let name: string = '';\n    let metadata: string = '';\n\n    if (opts !== undefined) {\n      inboundAddresses = opts.inbound_addresses;\n      inboundNumbers = opts.inbound_numbers;\n      inboundUsername = opts.inbound_username || '';\n      inboundPassword = opts.inbound_password || '';\n      outboundAddress = opts.outbound_address || '';\n      outboundUsername = opts.outbound_username || '';\n      outboundPassword = opts.outbound_password || '';\n      name = opts.name || '';\n      metadata = opts.metadata || '';\n    }\n\n    const req = new CreateSIPTrunkRequest({\n      name: name,\n      metadata: metadata,\n      inboundAddresses: inboundAddresses,\n      inboundNumbers: inboundNumbers,\n      inboundUsername: inboundUsername,\n      inboundPassword: inboundPassword,\n      outboundNumber: number,\n      outboundAddress: outboundAddress,\n      outboundUsername: outboundUsername,\n      outboundPassword: outboundPassword,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateSIPTrunk',\n      req,\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param name - human-readable name of the trunk\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   */\n  async createSipInboundTrunk(\n    name: string,\n    numbers: string[],\n    opts?: CreateSipInboundTrunkOptions,\n  ): Promise<SIPInboundTrunkInfo> {\n    if (opts === undefined) {\n      opts = {};\n    }\n    const req = new CreateSIPInboundTrunkRequest({\n      trunk: new SIPInboundTrunkInfo({\n        name: name,\n        numbers: numbers,\n        metadata: opts?.metadata,\n        allowedAddresses: opts.allowedAddresses ?? opts.allowed_addresses,\n        allowedNumbers: opts.allowedNumbers ?? opts.allowed_numbers,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders,\n        krispEnabled: opts.krispEnabled,\n      }),\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateSIPInboundTrunk',\n      req,\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param name - human-readable name of the trunk\n   * @param address - hostname and port of the SIP server to dial\n   * @param numbers - phone numbers of the trunk\n   * @param opts - CreateSipTrunkOptions\n   */\n  async createSipOutboundTrunk(\n    name: string,\n    address: string,\n    numbers: string[],\n    opts?: CreateSipOutboundTrunkOptions,\n  ): Promise<SIPOutboundTrunkInfo> {\n    if (opts === undefined) {\n      opts = {\n        transport: SIPTransport.SIP_TRANSPORT_AUTO,\n      };\n    }\n\n    const req = new CreateSIPOutboundTrunkRequest({\n      trunk: new SIPOutboundTrunkInfo({\n        name: name,\n        address: address,\n        numbers: numbers,\n        metadata: opts.metadata,\n        transport: opts.transport,\n        authUsername: opts.authUsername ?? opts.auth_username,\n        authPassword: opts.authPassword ?? opts.auth_password,\n        headers: opts.headers,\n        headersToAttributes: opts.headersToAttributes,\n        includeHeaders: opts.includeHeaders,\n      }),\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateSIPOutboundTrunk',\n      req,\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @deprecated use `listSipInboundTrunk` or `listSipOutboundTrunk`\n   */\n  async listSipTrunk(): Promise<Array<SIPTrunkInfo>> {\n    const req: Partial<ListSIPTrunkRequest> = {};\n    const data = await this.rpc.request(\n      svc,\n      'ListSIPTrunk',\n      new ListSIPTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  async listSipInboundTrunk(): Promise<Array<SIPInboundTrunkInfo>> {\n    const req: Partial<ListSIPInboundTrunkRequest> = {};\n    const data = await this.rpc.request(\n      svc,\n      'ListSIPInboundTrunk',\n      new ListSIPInboundTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return ListSIPInboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  async listSipOutboundTrunk(): Promise<Array<SIPOutboundTrunkInfo>> {\n    const req: Partial<ListSIPOutboundTrunkRequest> = {};\n    const data = await this.rpc.request(\n      svc,\n      'ListSIPOutboundTrunk',\n      new ListSIPOutboundTrunkRequest(req).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return ListSIPOutboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  /**\n   * @param sipTrunkId - sip trunk to delete\n   */\n  async deleteSipTrunk(sipTrunkId: string): Promise<SIPTrunkInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'DeleteSIPTrunk',\n      new DeleteSIPTrunkRequest({ sipTrunkId }).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param rule - sip dispatch rule\n   * @param opts - CreateSipDispatchRuleOptions\n   */\n  async createSipDispatchRule(\n    rule: SipDispatchRuleDirect | SipDispatchRuleIndividual,\n    opts?: CreateSipDispatchRuleOptions,\n  ): Promise<SIPDispatchRuleInfo> {\n    if (opts === undefined) {\n      opts = {};\n    }\n    let ruleProto: SIPDispatchRule | undefined = undefined;\n    if (rule.type == 'direct') {\n      ruleProto = new SIPDispatchRule({\n        rule: {\n          case: 'dispatchRuleDirect',\n          value: new SIPDispatchRuleDirect({\n            roomName: rule.roomName,\n            pin: rule.pin || '',\n          }),\n        },\n      });\n    } else if (rule.type == 'individual') {\n      ruleProto = new SIPDispatchRule({\n        rule: {\n          case: 'dispatchRuleIndividual',\n          value: new SIPDispatchRuleIndividual({\n            roomPrefix: rule.roomPrefix,\n            pin: rule.pin || '',\n          }),\n        },\n      });\n    }\n\n    const req = new CreateSIPDispatchRuleRequest({\n      rule: ruleProto,\n      trunkIds: opts.trunkIds,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      name: opts.name,\n      metadata: opts.metadata,\n      attributes: opts.attributes,\n      roomPreset: opts.roomPreset,\n      roomConfig: opts.roomConfig,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateSIPDispatchRule',\n      req,\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  async listSipDispatchRule(): Promise<Array<SIPDispatchRuleInfo>> {\n    const req: Partial<ListSIPDispatchRuleRequest> = {};\n    const data = await this.rpc.request(\n      svc,\n      'ListSIPDispatchRule',\n      new ListSIPDispatchRuleRequest(req).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items ?? [];\n  }\n\n  /**\n   * @param sipDispatchRuleId - sip trunk to delete\n   */\n  async deleteSipDispatchRule(sipDispatchRuleId: string): Promise<SIPDispatchRuleInfo> {\n    const data = await this.rpc.request(\n      svc,\n      'DeleteSIPDispatchRule',\n      new DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(),\n      await this.authHeader({}, { admin: true }),\n    );\n    return SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param sipTrunkId - sip trunk to use for the call\n   * @param number - number to dial\n   * @param roomName - room to attach the call to\n   * @param opts - CreateSipParticipantOptions\n   */\n  async createSipParticipant(\n    sipTrunkId: string,\n    number: string,\n    roomName: string,\n    opts?: CreateSipParticipantOptions,\n  ): Promise<SIPParticipantInfo> {\n    if (opts === undefined) {\n      opts = {};\n    }\n\n    const req = new CreateSIPParticipantRequest({\n      sipTrunkId: sipTrunkId,\n      sipCallTo: number,\n      sipNumber: opts.fromNumber,\n      roomName: roomName,\n      participantIdentity: opts.participantIdentity || 'sip-participant',\n      participantName: opts.participantName,\n      participantMetadata: opts.participantMetadata,\n      participantAttributes: opts.participantAttributes,\n      dtmf: opts.dtmf,\n      playDialtone: opts.playDialtone ?? opts.playRingtone,\n      headers: opts.headers,\n      hidePhoneNumber: opts.hidePhoneNumber,\n      includeHeaders: opts.includeHeaders,\n      ringingTimeout: opts.ringingTimeout\n        ? new Duration({ seconds: BigInt(opts.ringingTimeout) })\n        : undefined,\n      maxCallDuration: opts.maxCallDuration\n        ? new Duration({ seconds: BigInt(opts.maxCallDuration) })\n        : undefined,\n      krispEnabled: opts.krispEnabled,\n    }).toJson();\n\n    const data = await this.rpc.request(\n      svc,\n      'CreateSIPParticipant',\n      req,\n      await this.authHeader({}, { call: true }),\n    );\n    return SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n  }\n\n  /**\n   * @param roomName - room the SIP participant to transfer is connectd to\n   * @param participantIdentity - identity of the SIP participant to transfer\n   * @param transferTo - SIP URL to transfer the participant to\n   */\n  async transferSipParticipant(\n    roomName: string,\n    participantIdentity: string,\n    transferTo: string,\n    opts?: TransferSipParticipantOptions,\n  ): Promise<void> {\n    if (opts === undefined) {\n      opts = {};\n    }\n\n    const req = new TransferSIPParticipantRequest({\n      participantIdentity: participantIdentity,\n      roomName: roomName,\n      transferTo: transferTo,\n      playDialtone: opts.playDialtone,\n      headers: opts.headers,\n    }).toJson();\n\n    await this.rpc.request(\n      svc,\n      'TransferSIPParticipant',\n      req,\n      await this.authHeader({ roomAdmin: true, room: roomName }, { call: true }),\n    );\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n// Use the Web Crypto API if available, otherwise fallback to Node.js crypto\nexport async function digest(data: string): Promise<ArrayBuffer> {\n  if (globalThis.crypto?.subtle) {\n    const encoder = new TextEncoder();\n    return crypto.subtle.digest('SHA-256', encoder.encode(data));\n  } else {\n    const nodeCrypto = await import('node:crypto');\n    return nodeCrypto.createHash('sha256').update(data).digest();\n  }\n}\n", "// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport type { BinaryReadOptions, JsonReadOptions, JsonValue } from '@bufbuild/protobuf';\nimport { WebhookEvent as ProtoWebhookEvent } from '@livekit/protocol';\nimport { TokenVerifier } from './AccessToken.js';\nimport { digest } from './crypto/digest.js';\n\nexport const authorizeHeader = 'Authorize';\n\nexport class WebhookEvent extends ProtoWebhookEvent {\n  event: WebhookEventNames = '';\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebhookEvent {\n    return new WebhookEvent().fromJsonString(jsonString, options);\n  }\n}\n\nexport type WebhookEventNames =\n  | 'room_started'\n  | 'room_finished'\n  | 'participant_joined'\n  | 'participant_left'\n  | 'track_published'\n  | 'track_unpublished'\n  | 'egress_started'\n  | 'egress_updated'\n  | 'egress_ended'\n  | 'ingress_started'\n  | 'ingress_ended'\n  /**\n   * @internal\n   * @remarks only used as a default value, not a valid webhook event\n   */\n  | '';\n\nexport class WebhookReceiver {\n  private verifier: TokenVerifier;\n\n  constructor(apiKey: string, apiSecret: string) {\n    this.verifier = new TokenVerifier(apiKey, apiSecret);\n  }\n\n  /**\n   * @param body - string of the posted body\n   * @param authHeader - `Authorization` header from the request\n   * @param skipAuth - true to skip auth validation\n   * @param clockTolerance - How much tolerance to allow for checks against the auth header to be skewed from the claims\n   * @returns The processed webhook event\n   */\n  async receive(\n    body: string,\n    authHeader?: string,\n    skipAuth: boolean = false,\n    clockTolerance?: string | number,\n  ): Promise<WebhookEvent> {\n    // verify token\n    if (!skipAuth) {\n      if (!authHeader) {\n        throw new Error('authorization header is empty');\n      }\n      const claims = await this.verifier.verify(authHeader, clockTolerance);\n      // confirm sha\n      const hash = await digest(body);\n      const hashDecoded = btoa(\n        Array.from(new Uint8Array(hash))\n          .map((v) => String.fromCharCode(v))\n          .join(''),\n      );\n\n      if (claims.sha256 !== hashDecoded) {\n        throw new Error('sha256 checksum of body does not match');\n      }\n    }\n\n    return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n  }\n}\n"],
  "mappings": "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",
  "names": ["_a", "_a", "localName", "ScalarType", "LongType", "WireType", "sign", "tag", "localName", "message", "message", "localName", "message", "localName", "_a", "makeReadOptions", "makeWriteOptions", "message", "_a", "readField", "writeField", "localName", "readScalar", "writeScalar", "localName", "val", "a", "message", "localName", "_a", "_b", "MethodKind", "MethodIdempotency", "Edition", "ExtensionRangeOptions_VerificationState", "FieldDescriptorProto_Type", "FieldDescriptorProto_Label", "FileOptions_OptimizeMode", "FieldOptions_CType", "FieldOptions_JSType", "FieldOptions_OptionRetention", "FieldOptions_OptionTargetType", "MethodOptions_IdempotencyLevel", "FeatureSet_FieldPresence", "FeatureSet_EnumType", "FeatureSet_RepeatedFieldEncoding", "FeatureSet_Utf8Validation", "FeatureSet_MessageEncoding", "FeatureSet_JsonFormat", "GeneratedCodeInfo_Annotation_Semantic", "FieldNumber", "_a", "message", "protoCamelCase", "NullValue", "CodeGeneratorResponse_Feature", "Syntax", "Field_Kind", "Field_Cardinality", "message", "_a", "message", "types", "_a", "_a", "_b", "_a", "_a", "base64url_exports", "decode", "encode", "encode", "decode", "_a", "_a", "message", "svc", "svc", "svc", "svc", "_a", "encoder", "WebhookEvent"]
}
